Index.PACKAGES = {"me.mysterymystery.duelingfactions.api.board" : [{"name" : "me.mysterymystery.duelingfactions.api.board.Board", "shortDescription" : "", "members_class" : [{"label" : "BoardSides", "tail" : "", "member" : "me.mysterymystery.duelingfactions.api.board.Board.BoardSides", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#BoardSides", "kind" : "object"}, {"label" : "sendToMyGraveyard", "tail" : "(card: Card): Unit", "member" : "me.mysterymystery.duelingfactions.api.board.Board.sendToMyGraveyard", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#sendToMyGraveyard(card:me.mysterymystery.duelingfactions.api.card.Card):Unit", "kind" : "def"}, {"label" : "summonSpellTrap", "tail" : "(card: SpellOrTrapCard, side: BoardSide): Unit", "member" : "me.mysterymystery.duelingfactions.api.board.Board.summonSpellTrap", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#summonSpellTrap(card:me.mysterymystery.duelingfactions.api.card.SpellOrTrapCard,side:Board.this.BoardSides.BoardSide):Unit", "kind" : "def"}, {"label" : "summonMonster", "tail" : "(card: MonsterCard, side: BoardSide): Unit", "member" : "me.mysterymystery.duelingfactions.api.board.Board.summonMonster", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#summonMonster(card:me.mysterymystery.duelingfactions.api.card.MonsterCard,side:Board.this.BoardSides.BoardSide):Unit", "kind" : "def"}, {"label" : "visual", "tail" : ": VBox", "member" : "me.mysterymystery.duelingfactions.api.board.Board.visual", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#visual:scalafx.scene.layout.VBox", "kind" : "val"}, {"label" : "invisibleHandBox", "tail" : ": FlowPane", "member" : "me.mysterymystery.duelingfactions.api.board.Board.invisibleHandBox", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#invisibleHandBox:scalafx.scene.layout.FlowPane", "kind" : "val"}, {"label" : "visibleHandBox", "tail" : ": FlowPane", "member" : "me.mysterymystery.duelingfactions.api.board.Board.visibleHandBox", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#visibleHandBox:scalafx.scene.layout.FlowPane", "kind" : "val"}, {"label" : "visibleHandBoxChildren", "tail" : "(): Seq[ImageView]", "member" : "me.mysterymystery.duelingfactions.api.board.Board.visibleHandBoxChildren", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#visibleHandBoxChildren:Seq[scalafx.scene.image.ImageView]", "kind" : "def"}, {"label" : "theirHand", "tail" : ": HiddenHand", "member" : "me.mysterymystery.duelingfactions.api.board.Board.theirHand", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#theirHand:me.mysterymystery.duelingfactions.api.card.cardcollection.HiddenHand", "kind" : "val"}, {"label" : "myHand", "tail" : ": VisibleHand", "member" : "me.mysterymystery.duelingfactions.api.board.Board.myHand", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#myHand:me.mysterymystery.duelingfactions.api.card.cardcollection.VisibleHand", "kind" : "val"}, {"label" : "theirSide", "tail" : ": Seq[BoardZone]", "member" : "me.mysterymystery.duelingfactions.api.board.Board.theirSide", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#theirSide:Seq[me.mysterymystery.duelingfactions.api.board.locations.BoardZone]", "kind" : "val"}, {"label" : "theirDeckZone", "tail" : ": DeckZone", "member" : "me.mysterymystery.duelingfactions.api.board.Board.theirDeckZone", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#theirDeckZone:me.mysterymystery.duelingfactions.api.board.locations.DeckZone", "kind" : "val"}, {"label" : "theirGraveyardZone", "tail" : ": GraveyardZone", "member" : "me.mysterymystery.duelingfactions.api.board.Board.theirGraveyardZone", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#theirGraveyardZone:me.mysterymystery.duelingfactions.api.board.locations.GraveyardZone", "kind" : "val"}, {"label" : "mySide", "tail" : ": List[BoardZone]", "member" : "me.mysterymystery.duelingfactions.api.board.Board.mySide", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#mySide:List[me.mysterymystery.duelingfactions.api.board.locations.BoardZone]", "kind" : "val"}, {"label" : "myDeckZone", "tail" : ": DeckZone", "member" : "me.mysterymystery.duelingfactions.api.board.Board.myDeckZone", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#myDeckZone:me.mysterymystery.duelingfactions.api.board.locations.DeckZone", "kind" : "val"}, {"label" : "myGraveyardZone", "tail" : ": GraveyardZone", "member" : "me.mysterymystery.duelingfactions.api.board.Board.myGraveyardZone", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#myGraveyardZone:me.mysterymystery.duelingfactions.api.board.locations.GraveyardZone", "kind" : "val"}, {"label" : "theirLifePoints", "tail" : ": LifePoints", "member" : "me.mysterymystery.duelingfactions.api.board.Board.theirLifePoints", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#theirLifePoints:me.mysterymystery.duelingfactions.api.player.LifePoints", "kind" : "val"}, {"label" : "myLifePoints", "tail" : ": LifePoints", "member" : "me.mysterymystery.duelingfactions.api.board.Board.myLifePoints", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#myLifePoints:me.mysterymystery.duelingfactions.api.player.LifePoints", "kind" : "val"}, {"member" : "me.mysterymystery.duelingfactions.api.board.Board#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "me\/mysterymystery\/duelingfactions\/api\/board\/Board.html", "kind" : "class"}], "me.mysterymystery.duelingfactions.api.turn" : [{"name" : "me.mysterymystery.duelingfactions.api.turn.GameController", "shortDescription" : "Builds the board and controls the game flow.", "members_class" : [{"label" : "endPhase", "tail" : "(): Unit", "member" : "me.mysterymystery.duelingfactions.api.turn.GameController.endPhase", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html#endPhase:Unit", "kind" : "def"}, {"label" : "startOfTurn", "tail" : "(): Unit", "member" : "me.mysterymystery.duelingfactions.api.turn.GameController.startOfTurn", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html#startOfTurn:Unit", "kind" : "def"}, {"label" : "drawPhase", "tail" : "(): Unit", "member" : "me.mysterymystery.duelingfactions.api.turn.GameController.drawPhase", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html#drawPhase:Unit", "kind" : "def"}, {"member" : "me.mysterymystery.duelingfactions.api.turn.GameController#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "me\/mysterymystery\/duelingfactions\/api\/turn\/GameController.html", "kind" : "class"}], "me.mysterymystery.duelingfactions.api.card.cardlist" : [{"name" : "me.mysterymystery.duelingfactions.api.card.cardlist.ExampleCard", "shortDescription" : "", "members_class" : [{"label" : "onEndOfTurn", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardlist.ExampleCard.onEndOfTurn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#onEndOfTurn:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "def"}, {"label" : "onStartOfTurn", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardlist.ExampleCard.onStartOfTurn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#onStartOfTurn:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "def"}, {"label" : "onDrawn", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardlist.ExampleCard.onDrawn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#onDrawn:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "me.mysterymystery.duelingfactions.api.card.cardlist.ExampleCard.name", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#name:String", "kind" : "def"}, {"label" : "cardText", "tail" : "(): String", "member" : "me.mysterymystery.duelingfactions.api.card.cardlist.ExampleCard.cardText", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#cardText:String", "kind" : "def"}, {"label" : "action", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardlist.ExampleCard.action", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#action:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "def"}, {"label" : "sprite", "tail" : "(): Image", "member" : "me.mysterymystery.duelingfactions.api.card.cardlist.ExampleCard.sprite", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#sprite:scalafx.scene.image.Image", "kind" : "def"}, {"label" : "monsterType", "tail" : "(): MonsterType", "member" : "me.mysterymystery.duelingfactions.api.card.cardlist.ExampleCard.monsterType", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#monsterType:me.mysterymystery.duelingfactions.api.card.MonsterTypes.MonsterType", "kind" : "def"}, {"label" : "level", "tail" : "(): Int", "member" : "me.mysterymystery.duelingfactions.api.card.cardlist.ExampleCard.level", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#level:Int", "kind" : "def"}, {"member" : "me.mysterymystery.duelingfactions.api.card.cardlist.ExampleCard#<init>", "error" : "unsupported entity"}, {"label" : "imageView", "tail" : "(): ImageView", "member" : "me.mysterymystery.duelingfactions.api.card.Card.imageView", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#imageView:scalafx.scene.image.ImageView", "kind" : "def"}, {"label" : "produceSprite", "tail" : "(name: String): Image", "member" : "me.mysterymystery.duelingfactions.api.card.Card.produceSprite", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#produceSprite(name:String):scalafx.scene.image.Image", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleCard.html", "kind" : "class"}, {"name" : "me.mysterymystery.duelingfactions.api.card.cardlist.ExampleSpell", "shortDescription" : "", "members_class" : [{"label" : "onEndOfTurn", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardlist.ExampleSpell.onEndOfTurn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#onEndOfTurn:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "def"}, {"label" : "onStartOfTurn", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardlist.ExampleSpell.onStartOfTurn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#onStartOfTurn:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "def"}, {"label" : "onDrawn", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardlist.ExampleSpell.onDrawn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#onDrawn:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "me.mysterymystery.duelingfactions.api.card.cardlist.ExampleSpell.name", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#name:String", "kind" : "def"}, {"label" : "cardText", "tail" : "(): String", "member" : "me.mysterymystery.duelingfactions.api.card.cardlist.ExampleSpell.cardText", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#cardText:String", "kind" : "def"}, {"label" : "action", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardlist.ExampleSpell.action", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#action:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "def"}, {"label" : "sprite", "tail" : "(): Image", "member" : "me.mysterymystery.duelingfactions.api.card.cardlist.ExampleSpell.sprite", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#sprite:scalafx.scene.image.Image", "kind" : "def"}, {"member" : "me.mysterymystery.duelingfactions.api.card.cardlist.ExampleSpell#<init>", "error" : "unsupported entity"}, {"label" : "imageView", "tail" : "(): ImageView", "member" : "me.mysterymystery.duelingfactions.api.card.Card.imageView", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#imageView:scalafx.scene.image.ImageView", "kind" : "def"}, {"label" : "produceSprite", "tail" : "(name: String): Image", "member" : "me.mysterymystery.duelingfactions.api.card.Card.produceSprite", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#produceSprite(name:String):scalafx.scene.image.Image", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardlist\/ExampleSpell.html", "kind" : "class"}], "me.mysterymystery.duelingfactions.api.player" : [{"name" : "me.mysterymystery.duelingfactions.api.player.LifePoints", "shortDescription" : "", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "me.mysterymystery.duelingfactions.api.player.LifePoints.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#toString():String", "kind" : "def"}, {"label" : "copy", "tail" : "(): LifePoints", "member" : "me.mysterymystery.duelingfactions.api.player.LifePoints.copy", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#copy:me.mysterymystery.duelingfactions.api.player.LifePoints", "kind" : "def"}, {"label" : "get", "tail" : "(): Int", "member" : "me.mysterymystery.duelingfactions.api.player.LifePoints.get", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#get:Int", "kind" : "def"}, {"label" : "isLoss", "tail" : "(): Boolean", "member" : "me.mysterymystery.duelingfactions.api.player.LifePoints.isLoss", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#isLoss:Boolean", "kind" : "def"}, {"label" : "set", "tail" : "(int: Int): Unit", "member" : "me.mysterymystery.duelingfactions.api.player.LifePoints.set", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#set(int:Int):Unit", "kind" : "def"}, {"label" : "-", "tail" : "(int: Int): Unit", "member" : "me.mysterymystery.duelingfactions.api.player.LifePoints.-", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#-(int:Int):Unit", "kind" : "def"}, {"label" : "+", "tail" : "(int: Int): Unit", "member" : "me.mysterymystery.duelingfactions.api.player.LifePoints.+", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#+(int:Int):Unit", "kind" : "def"}, {"label" : "progressIndicator", "tail" : ": Label", "member" : "me.mysterymystery.duelingfactions.api.player.LifePoints.progressIndicator", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#progressIndicator:scalafx.scene.control.Label", "kind" : "val"}, {"label" : "progBar", "tail" : ": ProgressBar", "member" : "me.mysterymystery.duelingfactions.api.player.LifePoints.progBar", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#progBar:scalafx.scene.control.ProgressBar", "kind" : "val"}, {"member" : "me.mysterymystery.duelingfactions.api.player.LifePoints#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "me\/mysterymystery\/duelingfactions\/api\/player\/LifePoints.html", "kind" : "class"}], "me.mysterymystery.duelingfactions.api" : [], "me.mysterymystery.duelingfactions.scene" : [{"name" : "me.mysterymystery.duelingfactions.scene.GameScene", "shortDescription" : "", "object" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html", "members_object" : [{"label" : "get", "tail" : "(): Scene", "member" : "me.mysterymystery.duelingfactions.scene.GameScene.get", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#get:scalafx.scene.Scene", "kind" : "def"}, {"label" : "b", "tail" : ": Board", "member" : "me.mysterymystery.duelingfactions.scene.GameScene.b", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#b:me.mysterymystery.duelingfactions.api.board.Board", "kind" : "val"}, {"label" : "cardViewer", "tail" : ": VBox", "member" : "me.mysterymystery.duelingfactions.scene.GameScene.cardViewer", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#cardViewer:scalafx.scene.layout.VBox", "kind" : "val"}, {"label" : "descBox", "tail" : ": TextArea", "member" : "me.mysterymystery.duelingfactions.scene.GameScene.descBox", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#descBox:scalafx.scene.control.TextArea", "kind" : "val"}, {"label" : "cardViewerPictureBox", "tail" : ": ImageView", "member" : "me.mysterymystery.duelingfactions.scene.GameScene.cardViewerPictureBox", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#cardViewerPictureBox:scalafx.scene.image.ImageView", "kind" : "val"}, {"label" : "lifePointsArea", "tail" : ": VBox", "member" : "me.mysterymystery.duelingfactions.scene.GameScene.lifePointsArea", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#lifePointsArea:scalafx.scene.layout.VBox", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/scene\/GameScene$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "me.mysterymystery.duelingfactions.scene.MainMenuScene", "shortDescription" : "", "object" : "me\/mysterymystery\/duelingfactions\/scene\/MainMenuScene$.html", "members_object" : [{"label" : "get", "tail" : "(): Scene", "member" : "me.mysterymystery.duelingfactions.scene.MainMenuScene.get", "link" : "me\/mysterymystery\/duelingfactions\/scene\/MainMenuScene$.html#get:scalafx.scene.Scene", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/scene\/MainMenuScene$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/scene\/MainMenuScene$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/scene\/MainMenuScene$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/scene\/MainMenuScene$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/scene\/MainMenuScene$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/scene\/MainMenuScene$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/scene\/MainMenuScene$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/scene\/MainMenuScene$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/scene\/MainMenuScene$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/scene\/MainMenuScene$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/scene\/MainMenuScene$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/scene\/MainMenuScene$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/mysterymystery\/duelingfactions\/scene\/MainMenuScene$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/scene\/MainMenuScene$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/mysterymystery\/duelingfactions\/scene\/MainMenuScene$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/scene\/MainMenuScene$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/scene\/MainMenuScene$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/scene\/MainMenuScene$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/scene\/MainMenuScene$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "me.mysterymystery.duelingfactions.scene.SceneBuilder", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/scene\/SceneBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/scene\/SceneBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/scene\/SceneBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/scene\/SceneBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/scene\/SceneBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/scene\/SceneBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/scene\/SceneBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/scene\/SceneBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/scene\/SceneBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/scene\/SceneBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/scene\/SceneBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/scene\/SceneBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/mysterymystery\/duelingfactions\/scene\/SceneBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/scene\/SceneBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/mysterymystery\/duelingfactions\/scene\/SceneBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/scene\/SceneBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/scene\/SceneBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/scene\/SceneBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/scene\/SceneBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "get", "tail" : "(): Scene", "member" : "me.mysterymystery.duelingfactions.scene.SceneBuilder.get", "link" : "me\/mysterymystery\/duelingfactions\/scene\/SceneBuilder.html#get:scalafx.scene.Scene", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "me\/mysterymystery\/duelingfactions\/scene\/SceneBuilder.html", "kind" : "trait"}], "me.mysterymystery.duelingfactions" : [{"name" : "me.mysterymystery.duelingfactions.DuelingFactions", "shortDescription" : "", "object" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html", "members_object" : [{"label" : "close", "tail" : "(): Unit", "member" : "me.mysterymystery.duelingfactions.DuelingFactions.close", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#close:Unit", "kind" : "def"}, {"label" : "changeScene", "tail" : "(scene: Scene): Unit", "member" : "me.mysterymystery.duelingfactions.DuelingFactions.changeScene", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#changeScene(scene:scalafx.scene.Scene):Unit", "kind" : "def"}, {"label" : "playSound", "tail" : "(soundName: String): Unit", "member" : "me.mysterymystery.duelingfactions.DuelingFactions.playSound", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#playSound(soundName:String):Unit", "kind" : "def"}, {"label" : "mediaPlayer", "tail" : ": MediaPlayer", "member" : "me.mysterymystery.duelingfactions.DuelingFactions.mediaPlayer", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#mediaPlayer:scalafx.scene.media.MediaPlayer", "kind" : "var"}, {"label" : "stopApp", "tail" : "(): Unit", "member" : "scalafx.application.JFXApp.stopApp", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#stopApp():Unit", "kind" : "def"}, {"label" : "hostServices", "tail" : "(): HostServices", "member" : "scalafx.application.JFXApp.hostServices", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#hostServices:scalafx.application.HostServices", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scalafx.application.JFXApp.main", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(x: â‡’ Unit): Unit", "member" : "scalafx.application.JFXApp.delayedInit", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#delayedInit(x:=>Unit):Unit", "kind" : "def"}, {"label" : "parameters", "tail" : ": Parameters", "member" : "scalafx.application.JFXApp.parameters", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#parameters:scalafx.application.JFXApp.Parameters", "kind" : "lazy val"}, {"label" : "stage", "tail" : ": PrimaryStage", "member" : "scalafx.application.JFXApp.stage", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#stage:scalafx.application.JFXApp.PrimaryStage", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/DuelingFactions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "sbt" : [], "me" : [], "me.mysterymystery.duelingfactions.api.board.faction" : [{"name" : "me.mysterymystery.duelingfactions.api.board.faction.Faction", "members_trait" : [{"label" : "produceSprite", "tail" : "(name: String): Image", "member" : "me.mysterymystery.duelingfactions.api.board.faction.Faction.produceSprite", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#produceSprite(name:String):scalafx.scene.image.Image", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "lifepoints", "tail" : ": LifePoints", "member" : "me.mysterymystery.duelingfactions.api.board.faction.Faction.lifepoints", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#lifepoints:me.mysterymystery.duelingfactions.api.player.LifePoints", "kind" : "abstract val"}, {"label" : "act", "tail" : "(): () â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.board.faction.Faction.act", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#act:()=>Unit", "kind" : "abstract def"}, {"label" : "sprite", "tail" : "(): Image", "member" : "me.mysterymystery.duelingfactions.api.board.faction.Faction.sprite", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#sprite:scalafx.scene.image.Image", "kind" : "abstract def"}, {"label" : "heroName", "tail" : "(): String", "member" : "me.mysterymystery.duelingfactions.api.board.faction.Faction.heroName", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html#heroName:String", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/Faction.html", "kind" : "trait"}], "me.mysterymystery.duelingfactions.api.board.locations" : [{"name" : "me.mysterymystery.duelingfactions.api.board.locations.BoardZone", "members_trait" : [{"label" : "FilterMagnet", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.FilterMagnet", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#FilterMagnet[J<:<?>,S<:<?>]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "HandlerMagnet", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.HandlerMagnet", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#HandlerMagnet[J<:<?>,S<:<?>]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "delegate", "tail" : ": StackPane", "member" : "scalafx.scene.layout.StackPane.delegate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#delegate:javafx.scene.layout.StackPane", "kind" : "val"}, {"label" : "alignment_=", "tail" : "(v: Pos): Unit", "member" : "scalafx.delegate.AlignmentDelegate.alignment_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#alignment_=(v:scalafx.geometry.Pos):Unit", "kind" : "def"}, {"label" : "alignment", "tail" : "(): ObjectProperty[Pos]", "member" : "scalafx.delegate.AlignmentDelegate.alignment", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#alignment:scalafx.beans.property.ObjectProperty[javafx.geometry.Pos]", "kind" : "def"}, {"label" : "children_=", "tail" : "(n: Node): Unit", "member" : "scalafx.scene.layout.Pane.children_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#children_=(n:scalafx.scene.Node):Unit", "kind" : "def"}, {"label" : "children_=", "tail" : "(c: Iterable[Node]): Unit", "member" : "scalafx.scene.layout.Pane.children_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#children_=(c:Iterable[scalafx.scene.Node]):Unit", "kind" : "def"}, {"label" : "children", "tail" : "(): ObservableList[Node]", "member" : "scalafx.scene.layout.Pane.children", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#children:javafx.collections.ObservableList[javafx.scene.Node]", "kind" : "def"}, {"label" : "insets", "tail" : "(): Insets", "member" : "scalafx.scene.layout.Region.insets", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#insets:javafx.geometry.Insets", "kind" : "def"}, {"label" : "scaleShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.scaleShape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#scaleShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "scaleShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.scaleShape", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#scaleShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "resize", "tail" : "(width: Double, height: Double): Unit", "member" : "scalafx.scene.layout.Region.resize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#resize(width:Double,height:Double):Unit", "kind" : "def"}, {"label" : "resize", "tail" : "(): Boolean", "member" : "scalafx.scene.layout.Region.resize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#resize:Boolean", "kind" : "def"}, {"label" : "snapToPixel_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.snapToPixel_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#snapToPixel_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "snapToPixel", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.snapToPixel", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#snapToPixel:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "shape_=", "tail" : "(v: Shape): Unit", "member" : "scalafx.scene.layout.Region.shape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#shape_=(v:scalafx.scene.shape.Shape):Unit", "kind" : "def"}, {"label" : "shape", "tail" : "(): ObjectProperty[Shape]", "member" : "scalafx.scene.layout.Region.shape", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#shape:scalafx.beans.property.ObjectProperty[javafx.scene.shape.Shape]", "kind" : "def"}, {"label" : "prefWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.prefWidth_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#prefWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "prefWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.prefWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#prefWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "prefHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.prefHeight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#prefHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "prefHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.prefHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#prefHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "padding_=", "tail" : "(v: Insets): Unit", "member" : "scalafx.scene.layout.Region.padding_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#padding_=(v:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "padding", "tail" : "(): ObjectProperty[Insets]", "member" : "scalafx.scene.layout.Region.padding", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#padding:scalafx.beans.property.ObjectProperty[javafx.geometry.Insets]", "kind" : "def"}, {"label" : "opaqueInsets_=", "tail" : "(v: Insets): Unit", "member" : "scalafx.scene.layout.Region.opaqueInsets_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#opaqueInsets_=(v:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "opaqueInsets", "tail" : "(): ObjectProperty[Insets]", "member" : "scalafx.scene.layout.Region.opaqueInsets", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#opaqueInsets:scalafx.beans.property.ObjectProperty[javafx.geometry.Insets]", "kind" : "def"}, {"label" : "minWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.minWidth_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#minWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "minWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.minWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#minWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "minHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.minHeight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#minHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "minHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.minHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#minHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "maxWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.maxWidth_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#maxWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "maxWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.maxWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#maxWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "maxHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.maxHeight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#maxHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "maxHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.maxHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#maxHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "width", "tail" : "(): ReadOnlyDoubleProperty", "member" : "scalafx.scene.layout.Region.width", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#width:scalafx.beans.property.ReadOnlyDoubleProperty", "kind" : "def"}, {"label" : "height", "tail" : "(): ReadOnlyDoubleProperty", "member" : "scalafx.scene.layout.Region.height", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#height:scalafx.beans.property.ReadOnlyDoubleProperty", "kind" : "def"}, {"label" : "centerShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.centerShape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#centerShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "centerShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.centerShape", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#centerShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "cacheShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.cacheShape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#cacheShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "cacheShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.cacheShape", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#cacheShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "border_=", "tail" : "(v: Border): Unit", "member" : "scalafx.scene.layout.Region.border_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#border_=(v:scalafx.scene.layout.Border):Unit", "kind" : "def"}, {"label" : "border", "tail" : "(): ObjectProperty[Border]", "member" : "scalafx.scene.layout.Region.border", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#border:scalafx.beans.property.ObjectProperty[javafx.scene.layout.Border]", "kind" : "def"}, {"label" : "background_=", "tail" : "(v: Background): Unit", "member" : "scalafx.scene.layout.Region.background_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#background_=(v:scalafx.scene.layout.Background):Unit", "kind" : "def"}, {"label" : "background", "tail" : "(): ObjectProperty[Background]", "member" : "scalafx.scene.layout.Region.background", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#background:scalafx.beans.property.ObjectProperty[javafx.scene.layout.Background]", "kind" : "def"}, {"label" : "stylesheets_=", "tail" : "(c: Iterable[String]): Unit", "member" : "scalafx.scene.Parent.stylesheets_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#stylesheets_=(c:Iterable[String]):Unit", "kind" : "def"}, {"label" : "stylesheets", "tail" : "(): ObservableList[String]", "member" : "scalafx.scene.Parent.stylesheets", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#stylesheets:javafx.collections.ObservableList[String]", "kind" : "def"}, {"label" : "needsLayout", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Parent.needsLayout", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#needsLayout:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "eventHandlerDelegate", "tail" : "(): EventHandled", "member" : "scalafx.scene.Node.eventHandlerDelegate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#eventHandlerDelegate:Node.this.EventHandled", "kind" : "def"}, {"label" : "onTouchStationary_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchStationary_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onTouchStationary_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchStationary", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchStationary", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onTouchStationary:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchReleased_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onTouchReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onTouchReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchPressed_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchPressed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onTouchPressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchPressed", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchPressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onTouchPressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchMoved_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchMoved_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onTouchMoved_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchMoved", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchMoved", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onTouchMoved:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onZoomStarted_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoomStarted_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onZoomStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoomStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoomStarted", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onZoomStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onZoomFinished_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoomFinished_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onZoomFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoomFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoomFinished", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onZoomFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onZoom_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoom_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onZoom_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoom", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoom", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onZoom:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onSwipeRight_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeRight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onSwipeRight_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeRight", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onSwipeRight:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeUp_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeUp_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onSwipeUp_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeUp", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeUp", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onSwipeUp:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeLeft_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeLeft_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onSwipeLeft_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeLeft", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeLeft", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onSwipeLeft:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeDown_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeDown_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onSwipeDown_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeDown", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeDown", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onSwipeDown:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onScrollStarted_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScrollStarted_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onScrollStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScrollStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScrollStarted", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onScrollStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onScrollFinished_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScrollFinished_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onScrollFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScrollFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScrollFinished", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onScrollFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onRotationStarted_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotationStarted_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onRotationStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotationStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotationStarted", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onRotationStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "onRotationFinished_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotationFinished_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onRotationFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotationFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotationFinished", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onRotationFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "onRotate_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotate_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onRotate_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotate", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onRotate:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "localToSceneTransform", "tail" : "(): Transform", "member" : "scalafx.scene.Node.localToSceneTransform", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#localToSceneTransform:scalafx.scene.transform.Transform", "kind" : "def"}, {"label" : "localToParentTransform", "tail" : "(): Transform", "member" : "scalafx.scene.Node.localToParentTransform", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#localToParentTransform:scalafx.scene.transform.Transform", "kind" : "def"}, {"label" : "toFront", "tail" : "(): Unit", "member" : "scalafx.scene.Node.toFront", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#toFront():Unit", "kind" : "def"}, {"label" : "toBack", "tail" : "(): Unit", "member" : "scalafx.scene.Node.toBack", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#toBack():Unit", "kind" : "def"}, {"label" : "startFullDrag", "tail" : "(): Unit", "member" : "scalafx.scene.Node.startFullDrag", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#startFullDrag():Unit", "kind" : "def"}, {"label" : "startDragAndDrop", "tail" : "(transferModes: TransferMode*): Dragboard", "member" : "scalafx.scene.Node.startDragAndDrop", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#startDragAndDrop(transferModes:javafx.scene.input.TransferMode*):javafx.scene.input.Dragboard", "kind" : "def"}, {"label" : "snapshot", "tail" : "(callback: (SnapshotResult) â‡’ Unit, params: SnapshotParameters, image: WritableImage): Unit", "member" : "scalafx.scene.Node.snapshot", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#snapshot(callback:scalafx.scene.SnapshotResult=>Unit,params:scalafx.scene.SnapshotParameters,image:scalafx.scene.image.WritableImage):Unit", "kind" : "def"}, {"label" : "snapshot", "tail" : "(params: SnapshotParameters, image: WritableImage): WritableImage", "member" : "scalafx.scene.Node.snapshot", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#snapshot(params:scalafx.scene.SnapshotParameters,image:scalafx.scene.image.WritableImage):scalafx.scene.image.WritableImage", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(scenePoint: Point2D): Point2D", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#sceneToLocal(scenePoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(sceneX: Double, sceneY: Double): Point2D", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#sceneToLocal(sceneX:Double,sceneY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(sceneBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#sceneToLocal(sceneBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "resizeRelocate", "tail" : "(x: Double, y: Double, width: Double, height: Double): Unit", "member" : "scalafx.scene.Node.resizeRelocate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#resizeRelocate(x:Double,y:Double,width:Double,height:Double):Unit", "kind" : "def"}, {"label" : "requestFocus", "tail" : "(): Unit", "member" : "scalafx.scene.Node.requestFocus", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#requestFocus():Unit", "kind" : "def"}, {"label" : "relocate", "tail" : "(x: Double, y: Double): Unit", "member" : "scalafx.scene.Node.relocate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#relocate(x:Double,y:Double):Unit", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.parentToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#parentToLocal(parentPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentX: Double, parentY: Double): Point2D", "member" : "scalafx.scene.Node.parentToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#parentToLocal(parentX:Double,parentY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.parentToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#parentToLocal(parentBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "minWidth", "tail" : "(height: Double): Double", "member" : "scalafx.scene.Node.minWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#minWidth(height:Double):Double", "kind" : "def"}, {"label" : "minHeight", "tail" : "(width: Double): Double", "member" : "scalafx.scene.Node.minHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#minHeight(width:Double):Double", "kind" : "def"}, {"label" : "maxWidth", "tail" : "(height: Double): Double", "member" : "scalafx.scene.Node.maxWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#maxWidth(height:Double):Double", "kind" : "def"}, {"label" : "maxHeight", "tail" : "(width: Double): Double", "member" : "scalafx.scene.Node.maxHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#maxHeight(width:Double):Double", "kind" : "def"}, {"label" : "lookupAll", "tail" : "(selector: String): Set[Node]", "member" : "scalafx.scene.Node.lookupAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#lookupAll(selector:String):java.util.Set[javafx.scene.Node]", "kind" : "def"}, {"label" : "lookup", "tail" : "(selector: String): Node", "member" : "scalafx.scene.Node.lookup", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#lookup(selector:String):scalafx.scene.Node", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.localToScene", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#localToScene(localPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localX: Double, localY: Double): Point2D", "member" : "scalafx.scene.Node.localToScene", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#localToScene(localX:Double,localY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.localToScene", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#localToScene(localBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.localToParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#localToParent(localPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localX: Double, localY: Double): Point2D", "member" : "scalafx.scene.Node.localToParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#localToParent(localX:Double,localY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.localToParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#localToParent(localBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "intersects", "tail" : "(localX: Double, localY: Double, localWidth: Double, localHeight: Double): Boolean", "member" : "scalafx.scene.Node.intersects", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#intersects(localX:Double,localY:Double,localWidth:Double,localHeight:Double):Boolean", "kind" : "def"}, {"label" : "intersects", "tail" : "(localBounds: Bounds): Boolean", "member" : "scalafx.scene.Node.intersects", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#intersects(localBounds:scalafx.geometry.Bounds):Boolean", "kind" : "def"}, {"label" : "baselineOffset", "tail" : "(): Double", "member" : "scalafx.scene.Node.baselineOffset", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#baselineOffset:Double", "kind" : "def"}, {"label" : "fireEvent", "tail" : "(event: Event): Unit", "member" : "scalafx.scene.Node.fireEvent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#fireEvent(event:scalafx.event.Event):Unit", "kind" : "def"}, {"label" : "contains", "tail" : "(localPoint: Point2D): Boolean", "member" : "scalafx.scene.Node.contains", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#contains(localPoint:scalafx.geometry.Point2D):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(localX: Double, localY: Double): Boolean", "member" : "scalafx.scene.Node.contains", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#contains(localX:Double,localY:Double):Boolean", "kind" : "def"}, {"label" : "autosize", "tail" : "(): Unit", "member" : "scalafx.scene.Node.autosize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#autosize():Unit", "kind" : "def"}, {"label" : "vgrow_=", "tail" : "(p: Priority): Unit", "member" : "scalafx.scene.Node.vgrow_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#vgrow_=(p:scalafx.scene.layout.Priority):Unit", "kind" : "def"}, {"label" : "vgrow", "tail" : "(): Priority", "member" : "scalafx.scene.Node.vgrow", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#vgrow:scalafx.scene.layout.Priority", "kind" : "def"}, {"label" : "hgrow_=", "tail" : "(p: Priority): Unit", "member" : "scalafx.scene.Node.hgrow_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#hgrow_=(p:scalafx.scene.layout.Priority):Unit", "kind" : "def"}, {"label" : "hgrow", "tail" : "(): Priority", "member" : "scalafx.scene.Node.hgrow", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#hgrow:scalafx.scene.layout.Priority", "kind" : "def"}, {"label" : "margin_=", "tail" : "(i: Insets): Unit", "member" : "scalafx.scene.Node.margin_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#margin_=(i:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "margin", "tail" : "(): Insets", "member" : "scalafx.scene.Node.margin", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#margin:scalafx.geometry.Insets", "kind" : "def"}, {"label" : "alignmentInParent_=", "tail" : "(p: Pos): Unit", "member" : "scalafx.scene.Node.alignmentInParent_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#alignmentInParent_=(p:scalafx.geometry.Pos):Unit", "kind" : "def"}, {"label" : "alignmentInParent", "tail" : "(): Pos", "member" : "scalafx.scene.Node.alignmentInParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#alignmentInParent:scalafx.geometry.Pos", "kind" : "def"}, {"label" : "visible_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.visible_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#visible_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "visible", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.visible", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#visible:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "userData_=", "tail" : "(v: AnyRef): Unit", "member" : "scalafx.scene.Node.userData_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#userData_=(v:AnyRef):Unit", "kind" : "def"}, {"label" : "userData", "tail" : "(): AnyRef", "member" : "scalafx.scene.Node.userData", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#userData:Object", "kind" : "def"}, {"label" : "translateZ_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateZ_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#translateZ_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateZ", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateZ", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#translateZ:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "translateY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateY_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#translateY_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateY", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#translateY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "translateX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateX_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#translateX_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateX", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#translateX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "transforms_=", "tail" : "(c: Iterable[Transform]): Unit", "member" : "scalafx.scene.Node.transforms_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#transforms_=(c:Iterable[scalafx.scene.transform.Transform]):Unit", "kind" : "def"}, {"label" : "transforms", "tail" : "(): ObservableList[Transform]", "member" : "scalafx.scene.Node.transforms", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#transforms:javafx.collections.ObservableList[javafx.scene.transform.Transform]", "kind" : "def"}, {"label" : "styleClass_=", "tail" : "(c: Iterable[String]): Unit", "member" : "scalafx.scene.Node.styleClass_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#styleClass_=(c:Iterable[String]):Unit", "kind" : "def"}, {"label" : "style_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.style_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#style_=(v:String):Unit", "kind" : "def"}, {"label" : "style", "tail" : "(): StringProperty", "member" : "scalafx.scene.Node.style", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#style:scalafx.beans.property.StringProperty", "kind" : "def"}, {"label" : "scene", "tail" : "(): ReadOnlyObjectProperty[Scene]", "member" : "scalafx.scene.Node.scene", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#scene:scalafx.beans.property.ReadOnlyObjectProperty[javafx.scene.Scene]", "kind" : "def"}, {"label" : "scaleZ_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleZ_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#scaleZ_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleZ", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleZ", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#scaleZ:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "scaleY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleY_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#scaleY_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleY", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#scaleY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "scaleX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleX_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#scaleX_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleX", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#scaleX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "rotationAxis_=", "tail" : "(v: Point3D): Unit", "member" : "scalafx.scene.Node.rotationAxis_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#rotationAxis_=(v:scalafx.geometry.Point3D):Unit", "kind" : "def"}, {"label" : "rotationAxis", "tail" : "(): ObjectProperty[Point3D]", "member" : "scalafx.scene.Node.rotationAxis", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#rotationAxis:scalafx.beans.property.ObjectProperty[javafx.geometry.Point3D]", "kind" : "def"}, {"label" : "rotate_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.rotate_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#rotate_=(v:Double):Unit", "kind" : "def"}, {"label" : "rotate", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.rotate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#rotate:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "pressed", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.pressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#pressed:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "pickOnBounds_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.pickOnBounds_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#pickOnBounds_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "pickOnBounds", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.pickOnBounds", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#pickOnBounds:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "parent", "tail" : "(): ReadOnlyObjectProperty[Parent]", "member" : "scalafx.scene.Node.parent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#parent:scalafx.beans.property.ReadOnlyObjectProperty[javafx.scene.Parent]", "kind" : "def"}, {"label" : "opacity_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.opacity_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#opacity_=(v:Double):Unit", "kind" : "def"}, {"label" : "opacity", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.opacity", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#opacity:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "onScroll_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScroll_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onScroll_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScroll", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScroll", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onScroll:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onMouseReleased_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMouseReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMouseReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMousePressed_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMousePressed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMousePressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMousePressed", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMousePressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMousePressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseMoved_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseMoved_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMouseMoved_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseMoved", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseMoved", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMouseMoved:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseExited_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseExited_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMouseExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseExited", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseExited", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMouseExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseEntered_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseEntered_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMouseEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseEntered", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMouseEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseDragReleased_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMouseDragReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMouseDragReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragOver_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragOver_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMouseDragOver_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragOver", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragOver", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMouseDragOver:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragExited_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragExited_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMouseDragExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragExited", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragExited", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMouseDragExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragEntered_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragEntered_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMouseDragEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragEntered", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMouseDragEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragged_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragged_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMouseDragged_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragged", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseDragged", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMouseDragged:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseClicked_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseClicked_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMouseClicked_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseClicked", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseClicked", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onMouseClicked:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onKeyTyped_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyTyped_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onKeyTyped_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyTyped", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyTyped", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onKeyTyped:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onKeyReleased_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onKeyReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onKeyReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onKeyPressed_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyPressed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onKeyPressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyPressed", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyPressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onKeyPressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onInputMethodTextChanged_=", "tail" : "(v: EventHandler[_ >: InputMethodEvent]): Unit", "member" : "scalafx.scene.Node.onInputMethodTextChanged_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onInputMethodTextChanged_=(v:javafx.event.EventHandler[_>:javafx.scene.input.InputMethodEvent]):Unit", "kind" : "def"}, {"label" : "onInputMethodTextChanged", "tail" : "(): ObjectProperty[EventHandler[_ >: InputMethodEvent]]", "member" : "scalafx.scene.Node.onInputMethodTextChanged", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onInputMethodTextChanged:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.InputMethodEvent]]", "kind" : "def"}, {"label" : "onDragOver_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragOver_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onDragOver_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragOver", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragOver", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onDragOver:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragExited_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragExited_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onDragExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragExited", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragExited", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onDragExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragEntered_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragEntered_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onDragEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragEntered", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onDragEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDropped_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragDropped_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onDragDropped_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragDropped", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragDropped", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onDragDropped:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDone_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragDone_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onDragDone_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragDone", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragDone", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onDragDone:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDetected_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onDragDetected_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onDragDetected_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onDragDetected", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onDragDetected", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onDragDetected:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onContextMenuRequested_=", "tail" : "(v: EventHandler[_ >: ContextMenuEvent]): Unit", "member" : "scalafx.scene.Node.onContextMenuRequested_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onContextMenuRequested_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ContextMenuEvent]):Unit", "kind" : "def"}, {"label" : "onContextMenuRequested", "tail" : "(): ObjectProperty[EventHandler[_ >: ContextMenuEvent]]", "member" : "scalafx.scene.Node.onContextMenuRequested", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#onContextMenuRequested:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ContextMenuEvent]]", "kind" : "def"}, {"label" : "effectiveNodeOrientation", "tail" : "(): ReadOnlyObjectProperty[NodeOrientation]", "member" : "scalafx.scene.Node.effectiveNodeOrientation", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#effectiveNodeOrientation:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.NodeOrientation]", "kind" : "def"}, {"label" : "nodeOrientation_=", "tail" : "(v: NodeOrientation): Unit", "member" : "scalafx.scene.Node.nodeOrientation_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#nodeOrientation_=(v:scalafx.geometry.NodeOrientation):Unit", "kind" : "def"}, {"label" : "nodeOrientation", "tail" : "(): ObjectProperty[NodeOrientation]", "member" : "scalafx.scene.Node.nodeOrientation", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#nodeOrientation:scalafx.beans.property.ObjectProperty[javafx.geometry.NodeOrientation]", "kind" : "def"}, {"label" : "mouseTransparent_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.mouseTransparent_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#mouseTransparent_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "mouseTransparent", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.mouseTransparent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#mouseTransparent:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "managed_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.managed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#managed_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "managed", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.managed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#managed:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "layoutY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.layoutY_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#layoutY_=(v:Double):Unit", "kind" : "def"}, {"label" : "layoutY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.layoutY", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#layoutY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "layoutX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.layoutX_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#layoutX_=(v:Double):Unit", "kind" : "def"}, {"label" : "layoutX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.layoutX", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#layoutX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "layoutBounds", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.layoutBounds", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#layoutBounds:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "inputMethodRequests_=", "tail" : "(v: InputMethodRequests): Unit", "member" : "scalafx.scene.Node.inputMethodRequests_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#inputMethodRequests_=(v:javafx.scene.input.InputMethodRequests):Unit", "kind" : "def"}, {"label" : "inputMethodRequests", "tail" : "(): ObjectProperty[InputMethodRequests]", "member" : "scalafx.scene.Node.inputMethodRequests", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#inputMethodRequests:scalafx.beans.property.ObjectProperty[javafx.scene.input.InputMethodRequests]", "kind" : "def"}, {"label" : "id_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.id_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#id_=(v:String):Unit", "kind" : "def"}, {"label" : "id", "tail" : "(): StringProperty", "member" : "scalafx.scene.Node.id", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#id:scalafx.beans.property.StringProperty", "kind" : "def"}, {"label" : "hover", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.hover", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#hover:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "focusTraversable_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.focusTraversable_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#focusTraversable_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "focusTraversable", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.focusTraversable", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#focusTraversable:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "focused", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.focused", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#focused:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "eventDispatcher_=", "tail" : "(v: EventDispatcher): Unit", "member" : "scalafx.scene.Node.eventDispatcher_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#eventDispatcher_=(v:javafx.event.EventDispatcher):Unit", "kind" : "def"}, {"label" : "eventDispatcher", "tail" : "(): ObjectProperty[EventDispatcher]", "member" : "scalafx.scene.Node.eventDispatcher", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#eventDispatcher:scalafx.beans.property.ObjectProperty[javafx.event.EventDispatcher]", "kind" : "def"}, {"label" : "effect_=", "tail" : "(v: Effect): Unit", "member" : "scalafx.scene.Node.effect_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#effect_=(v:scalafx.scene.effect.Effect):Unit", "kind" : "def"}, {"label" : "effect", "tail" : "(): ObjectProperty[Effect]", "member" : "scalafx.scene.Node.effect", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#effect:scalafx.beans.property.ObjectProperty[javafx.scene.effect.Effect]", "kind" : "def"}, {"label" : "disable_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.disable_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#disable_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "disable", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.disable", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#disable:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "disabled", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.disabled", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#disabled:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "depthTest_=", "tail" : "(v: DepthTest): Unit", "member" : "scalafx.scene.Node.depthTest_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#depthTest_=(v:scalafx.scene.DepthTest):Unit", "kind" : "def"}, {"label" : "depthTest", "tail" : "(): ObjectProperty[DepthTest]", "member" : "scalafx.scene.Node.depthTest", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#depthTest:scalafx.beans.property.ObjectProperty[javafx.scene.DepthTest]", "kind" : "def"}, {"label" : "cursor_=", "tail" : "(v: Cursor): Unit", "member" : "scalafx.scene.Node.cursor_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#cursor_=(v:scalafx.scene.Cursor):Unit", "kind" : "def"}, {"label" : "cursor", "tail" : "(): ObjectProperty[Cursor]", "member" : "scalafx.scene.Node.cursor", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#cursor:scalafx.beans.property.ObjectProperty[javafx.scene.Cursor]", "kind" : "def"}, {"label" : "contentBias", "tail" : "(): Orientation", "member" : "scalafx.scene.Node.contentBias", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#contentBias:scalafx.geometry.Orientation", "kind" : "def"}, {"label" : "clip_=", "tail" : "(v: Node): Unit", "member" : "scalafx.scene.Node.clip_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#clip_=(v:scalafx.scene.Node):Unit", "kind" : "def"}, {"label" : "clip", "tail" : "(): ObjectProperty[Node]", "member" : "scalafx.scene.Node.clip", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#clip:scalafx.beans.property.ObjectProperty[javafx.scene.Node]", "kind" : "def"}, {"label" : "cache_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.cache_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#cache_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "cache", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.cache", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#cache:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "cacheHint_=", "tail" : "(v: CacheHint): Unit", "member" : "scalafx.scene.Node.cacheHint_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#cacheHint_=(v:scalafx.scene.CacheHint):Unit", "kind" : "def"}, {"label" : "cacheHint", "tail" : "(): ObjectProperty[CacheHint]", "member" : "scalafx.scene.Node.cacheHint", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#cacheHint:scalafx.beans.property.ObjectProperty[javafx.scene.CacheHint]", "kind" : "def"}, {"label" : "boundsInParent", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.boundsInParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#boundsInParent:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "boundsInLocal", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.boundsInLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#boundsInLocal:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "blendMode_=", "tail" : "(v: BlendMode): Unit", "member" : "scalafx.scene.Node.blendMode_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#blendMode_=(v:scalafx.scene.effect.BlendMode):Unit", "kind" : "def"}, {"label" : "blendMode", "tail" : "(): ObjectProperty[BlendMode]", "member" : "scalafx.scene.Node.blendMode", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#blendMode:scalafx.beans.property.ObjectProperty[javafx.scene.effect.BlendMode]", "kind" : "def"}, {"label" : "accessibleRoleDescription_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleRoleDescription_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#accessibleRoleDescription_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleRoleDescription", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleRoleDescription", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#accessibleRoleDescription:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "accessibleRole_=", "tail" : "(v: AccessibleRole): Unit", "member" : "scalafx.scene.Node.accessibleRole_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#accessibleRole_=(v:scalafx.scene.AccessibleRole):Unit", "kind" : "def"}, {"label" : "accessibleRole", "tail" : "(): ObjectProperty[AccessibleRole]", "member" : "scalafx.scene.Node.accessibleRole", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#accessibleRole:scalafx.beans.property.ObjectProperty[javafx.scene.AccessibleRole]", "kind" : "def"}, {"label" : "accessibleHelp_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleHelp_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#accessibleHelp_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleHelp", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleHelp", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#accessibleHelp:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "accessibleText_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleText_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#accessibleText_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleText", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleText", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#accessibleText:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "typeSelector", "tail" : "(): String", "member" : "scalafx.css.Styleable.typeSelector", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#typeSelector:String", "kind" : "def"}, {"label" : "styleClass", "tail" : "(): ObservableBuffer[String]", "member" : "scalafx.css.Styleable.styleClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#styleClass:scalafx.collections.ObservableBuffer[String]", "kind" : "def"}, {"label" : "styleableParent", "tail" : "(): Styleable", "member" : "scalafx.css.Styleable.styleableParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#styleableParent:scalafx.css.Styleable", "kind" : "def"}, {"label" : "getStyle", "tail" : "(): String", "member" : "scalafx.css.Styleable.getStyle", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#getStyle:String", "kind" : "def"}, {"label" : "pseudoClassStates", "tail" : "(): ObservableSet[PseudoClass]", "member" : "scalafx.css.Styleable.pseudoClassStates", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#pseudoClassStates:scalafx.collections.ObservableSet[javafx.css.PseudoClass]", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "scalafx.css.Styleable.getId", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#getId:String", "kind" : "def"}, {"label" : "cssMetaData", "tail" : "(): Seq[CssMetaData[_ <: Styleable, _]]", "member" : "scalafx.css.Styleable.cssMetaData", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#cssMetaData:Seq[javafx.css.CssMetaData[_<:javafx.css.Styleable,_]]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scalafx.delegate.SFXDelegate.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(ref: Any): Boolean", "member" : "scalafx.delegate.SFXDelegate.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#equals(ref:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scalafx.delegate.SFXDelegate.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#toString():String", "kind" : "def"}, {"label" : "buildEventDispatchChain", "tail" : "(chain: EventDispatchChain): EventDispatchChain", "member" : "scalafx.event.EventHandlerDelegate.buildEventDispatchChain", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#buildEventDispatchChain(chain:javafx.event.EventDispatchChain):javafx.event.EventDispatchChain", "kind" : "def"}, {"label" : "removeEventFilter", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.removeEventFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#removeEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "filterEvent", "tail" : "(eventType: EventType[J])(filter: FilterMagnet[J, S]): Subscription", "member" : "scalafx.event.EventHandlerDelegate.filterEvent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#filterEvent[J<:javafx.event.Event,S<:scalafx.event.Eventwithscalafx.delegate.SFXDelegate[J]](eventType:scalafx.event.EventType[J])(filter:EventHandlerDelegate.this.FilterMagnet[J,S]):scalafx.event.subscriptions.Subscription", "kind" : "def"}, {"label" : "addEventFilter", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.addEventFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#addEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "removeEventHandler", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.removeEventHandler", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#removeEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "handleEvent", "tail" : "(eventType: EventType[J])(handler: HandlerMagnet[J, S]): Subscription", "member" : "scalafx.event.EventHandlerDelegate.handleEvent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#handleEvent[J<:javafx.event.Event,S<:scalafx.event.Eventwithscalafx.delegate.SFXDelegate[J]](eventType:scalafx.event.EventType[J])(handler:EventHandlerDelegate.this.HandlerMagnet[J,S]):scalafx.event.subscriptions.Subscription", "kind" : "def"}, {"label" : "addEventHandler", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.addEventHandler", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#addEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "EventHandled", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.EventHandled", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#EventHandled=AnyRef{defaddEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defremoveEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defaddEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defremoveEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defbuildEventDispatchChain(chain:javafx.event.EventDispatchChain):javafx.event.EventDispatchChain}", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "occupied", "tail" : "(): Boolean", "member" : "me.mysterymystery.duelingfactions.api.board.locations.BoardZone.occupied", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html#occupied:Boolean", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/BoardZone.html", "kind" : "trait"}, {"name" : "me.mysterymystery.duelingfactions.api.board.locations.DeckZone", "shortDescription" : "", "members_class" : [{"label" : "FilterMagnet", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.FilterMagnet", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#FilterMagnet[J<:<?>,S<:<?>]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "HandlerMagnet", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.HandlerMagnet", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#HandlerMagnet[J<:<?>,S<:<?>]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "occupied", "tail" : "(): Boolean", "member" : "me.mysterymystery.duelingfactions.api.board.locations.DeckZone.occupied", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#occupied:Boolean", "kind" : "def"}, {"label" : "occupy", "tail" : "(deck: Deck): Unit", "member" : "me.mysterymystery.duelingfactions.api.board.locations.DeckZone.occupy", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#occupy(deck:me.mysterymystery.duelingfactions.api.card.cardcollection.Deck):Unit", "kind" : "def"}, {"member" : "me.mysterymystery.duelingfactions.api.board.locations.DeckZone#<init>", "error" : "unsupported entity"}, {"label" : "delegate", "tail" : ": StackPane", "member" : "scalafx.scene.layout.StackPane.delegate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#delegate:javafx.scene.layout.StackPane", "kind" : "val"}, {"label" : "alignment_=", "tail" : "(v: Pos): Unit", "member" : "scalafx.delegate.AlignmentDelegate.alignment_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#alignment_=(v:scalafx.geometry.Pos):Unit", "kind" : "def"}, {"label" : "alignment", "tail" : "(): ObjectProperty[Pos]", "member" : "scalafx.delegate.AlignmentDelegate.alignment", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#alignment:scalafx.beans.property.ObjectProperty[javafx.geometry.Pos]", "kind" : "def"}, {"label" : "children_=", "tail" : "(n: Node): Unit", "member" : "scalafx.scene.layout.Pane.children_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#children_=(n:scalafx.scene.Node):Unit", "kind" : "def"}, {"label" : "children_=", "tail" : "(c: Iterable[Node]): Unit", "member" : "scalafx.scene.layout.Pane.children_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#children_=(c:Iterable[scalafx.scene.Node]):Unit", "kind" : "def"}, {"label" : "children", "tail" : "(): ObservableList[Node]", "member" : "scalafx.scene.layout.Pane.children", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#children:javafx.collections.ObservableList[javafx.scene.Node]", "kind" : "def"}, {"label" : "insets", "tail" : "(): Insets", "member" : "scalafx.scene.layout.Region.insets", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#insets:javafx.geometry.Insets", "kind" : "def"}, {"label" : "scaleShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.scaleShape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#scaleShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "scaleShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.scaleShape", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#scaleShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "resize", "tail" : "(width: Double, height: Double): Unit", "member" : "scalafx.scene.layout.Region.resize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#resize(width:Double,height:Double):Unit", "kind" : "def"}, {"label" : "resize", "tail" : "(): Boolean", "member" : "scalafx.scene.layout.Region.resize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#resize:Boolean", "kind" : "def"}, {"label" : "snapToPixel_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.snapToPixel_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#snapToPixel_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "snapToPixel", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.snapToPixel", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#snapToPixel:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "shape_=", "tail" : "(v: Shape): Unit", "member" : "scalafx.scene.layout.Region.shape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#shape_=(v:scalafx.scene.shape.Shape):Unit", "kind" : "def"}, {"label" : "shape", "tail" : "(): ObjectProperty[Shape]", "member" : "scalafx.scene.layout.Region.shape", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#shape:scalafx.beans.property.ObjectProperty[javafx.scene.shape.Shape]", "kind" : "def"}, {"label" : "prefWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.prefWidth_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#prefWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "prefWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.prefWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#prefWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "prefHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.prefHeight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#prefHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "prefHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.prefHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#prefHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "padding_=", "tail" : "(v: Insets): Unit", "member" : "scalafx.scene.layout.Region.padding_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#padding_=(v:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "padding", "tail" : "(): ObjectProperty[Insets]", "member" : "scalafx.scene.layout.Region.padding", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#padding:scalafx.beans.property.ObjectProperty[javafx.geometry.Insets]", "kind" : "def"}, {"label" : "opaqueInsets_=", "tail" : "(v: Insets): Unit", "member" : "scalafx.scene.layout.Region.opaqueInsets_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#opaqueInsets_=(v:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "opaqueInsets", "tail" : "(): ObjectProperty[Insets]", "member" : "scalafx.scene.layout.Region.opaqueInsets", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#opaqueInsets:scalafx.beans.property.ObjectProperty[javafx.geometry.Insets]", "kind" : "def"}, {"label" : "minWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.minWidth_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#minWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "minWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.minWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#minWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "minHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.minHeight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#minHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "minHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.minHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#minHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "maxWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.maxWidth_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#maxWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "maxWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.maxWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#maxWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "maxHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.maxHeight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#maxHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "maxHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.maxHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#maxHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "width", "tail" : "(): ReadOnlyDoubleProperty", "member" : "scalafx.scene.layout.Region.width", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#width:scalafx.beans.property.ReadOnlyDoubleProperty", "kind" : "def"}, {"label" : "height", "tail" : "(): ReadOnlyDoubleProperty", "member" : "scalafx.scene.layout.Region.height", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#height:scalafx.beans.property.ReadOnlyDoubleProperty", "kind" : "def"}, {"label" : "centerShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.centerShape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#centerShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "centerShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.centerShape", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#centerShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "cacheShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.cacheShape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#cacheShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "cacheShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.cacheShape", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#cacheShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "border_=", "tail" : "(v: Border): Unit", "member" : "scalafx.scene.layout.Region.border_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#border_=(v:scalafx.scene.layout.Border):Unit", "kind" : "def"}, {"label" : "border", "tail" : "(): ObjectProperty[Border]", "member" : "scalafx.scene.layout.Region.border", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#border:scalafx.beans.property.ObjectProperty[javafx.scene.layout.Border]", "kind" : "def"}, {"label" : "background_=", "tail" : "(v: Background): Unit", "member" : "scalafx.scene.layout.Region.background_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#background_=(v:scalafx.scene.layout.Background):Unit", "kind" : "def"}, {"label" : "background", "tail" : "(): ObjectProperty[Background]", "member" : "scalafx.scene.layout.Region.background", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#background:scalafx.beans.property.ObjectProperty[javafx.scene.layout.Background]", "kind" : "def"}, {"label" : "stylesheets_=", "tail" : "(c: Iterable[String]): Unit", "member" : "scalafx.scene.Parent.stylesheets_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#stylesheets_=(c:Iterable[String]):Unit", "kind" : "def"}, {"label" : "stylesheets", "tail" : "(): ObservableList[String]", "member" : "scalafx.scene.Parent.stylesheets", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#stylesheets:javafx.collections.ObservableList[String]", "kind" : "def"}, {"label" : "needsLayout", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Parent.needsLayout", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#needsLayout:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "eventHandlerDelegate", "tail" : "(): EventHandled", "member" : "scalafx.scene.Node.eventHandlerDelegate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#eventHandlerDelegate:Node.this.EventHandled", "kind" : "def"}, {"label" : "onTouchStationary_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchStationary_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onTouchStationary_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchStationary", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchStationary", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onTouchStationary:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchReleased_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onTouchReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onTouchReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchPressed_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchPressed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onTouchPressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchPressed", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchPressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onTouchPressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchMoved_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchMoved_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onTouchMoved_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchMoved", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchMoved", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onTouchMoved:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onZoomStarted_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoomStarted_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onZoomStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoomStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoomStarted", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onZoomStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onZoomFinished_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoomFinished_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onZoomFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoomFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoomFinished", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onZoomFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onZoom_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoom_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onZoom_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoom", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoom", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onZoom:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onSwipeRight_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeRight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onSwipeRight_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeRight", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onSwipeRight:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeUp_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeUp_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onSwipeUp_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeUp", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeUp", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onSwipeUp:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeLeft_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeLeft_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onSwipeLeft_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeLeft", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeLeft", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onSwipeLeft:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeDown_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeDown_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onSwipeDown_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeDown", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeDown", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onSwipeDown:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onScrollStarted_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScrollStarted_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onScrollStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScrollStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScrollStarted", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onScrollStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onScrollFinished_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScrollFinished_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onScrollFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScrollFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScrollFinished", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onScrollFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onRotationStarted_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotationStarted_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onRotationStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotationStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotationStarted", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onRotationStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "onRotationFinished_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotationFinished_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onRotationFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotationFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotationFinished", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onRotationFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "onRotate_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotate_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onRotate_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotate", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onRotate:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "localToSceneTransform", "tail" : "(): Transform", "member" : "scalafx.scene.Node.localToSceneTransform", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#localToSceneTransform:scalafx.scene.transform.Transform", "kind" : "def"}, {"label" : "localToParentTransform", "tail" : "(): Transform", "member" : "scalafx.scene.Node.localToParentTransform", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#localToParentTransform:scalafx.scene.transform.Transform", "kind" : "def"}, {"label" : "toFront", "tail" : "(): Unit", "member" : "scalafx.scene.Node.toFront", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#toFront():Unit", "kind" : "def"}, {"label" : "toBack", "tail" : "(): Unit", "member" : "scalafx.scene.Node.toBack", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#toBack():Unit", "kind" : "def"}, {"label" : "startFullDrag", "tail" : "(): Unit", "member" : "scalafx.scene.Node.startFullDrag", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#startFullDrag():Unit", "kind" : "def"}, {"label" : "startDragAndDrop", "tail" : "(transferModes: TransferMode*): Dragboard", "member" : "scalafx.scene.Node.startDragAndDrop", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#startDragAndDrop(transferModes:javafx.scene.input.TransferMode*):javafx.scene.input.Dragboard", "kind" : "def"}, {"label" : "snapshot", "tail" : "(callback: (SnapshotResult) â‡’ Unit, params: SnapshotParameters, image: WritableImage): Unit", "member" : "scalafx.scene.Node.snapshot", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#snapshot(callback:scalafx.scene.SnapshotResult=>Unit,params:scalafx.scene.SnapshotParameters,image:scalafx.scene.image.WritableImage):Unit", "kind" : "def"}, {"label" : "snapshot", "tail" : "(params: SnapshotParameters, image: WritableImage): WritableImage", "member" : "scalafx.scene.Node.snapshot", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#snapshot(params:scalafx.scene.SnapshotParameters,image:scalafx.scene.image.WritableImage):scalafx.scene.image.WritableImage", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(scenePoint: Point2D): Point2D", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#sceneToLocal(scenePoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(sceneX: Double, sceneY: Double): Point2D", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#sceneToLocal(sceneX:Double,sceneY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(sceneBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#sceneToLocal(sceneBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "resizeRelocate", "tail" : "(x: Double, y: Double, width: Double, height: Double): Unit", "member" : "scalafx.scene.Node.resizeRelocate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#resizeRelocate(x:Double,y:Double,width:Double,height:Double):Unit", "kind" : "def"}, {"label" : "requestFocus", "tail" : "(): Unit", "member" : "scalafx.scene.Node.requestFocus", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#requestFocus():Unit", "kind" : "def"}, {"label" : "relocate", "tail" : "(x: Double, y: Double): Unit", "member" : "scalafx.scene.Node.relocate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#relocate(x:Double,y:Double):Unit", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.parentToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#parentToLocal(parentPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentX: Double, parentY: Double): Point2D", "member" : "scalafx.scene.Node.parentToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#parentToLocal(parentX:Double,parentY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.parentToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#parentToLocal(parentBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "minWidth", "tail" : "(height: Double): Double", "member" : "scalafx.scene.Node.minWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#minWidth(height:Double):Double", "kind" : "def"}, {"label" : "minHeight", "tail" : "(width: Double): Double", "member" : "scalafx.scene.Node.minHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#minHeight(width:Double):Double", "kind" : "def"}, {"label" : "maxWidth", "tail" : "(height: Double): Double", "member" : "scalafx.scene.Node.maxWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#maxWidth(height:Double):Double", "kind" : "def"}, {"label" : "maxHeight", "tail" : "(width: Double): Double", "member" : "scalafx.scene.Node.maxHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#maxHeight(width:Double):Double", "kind" : "def"}, {"label" : "lookupAll", "tail" : "(selector: String): Set[Node]", "member" : "scalafx.scene.Node.lookupAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#lookupAll(selector:String):java.util.Set[javafx.scene.Node]", "kind" : "def"}, {"label" : "lookup", "tail" : "(selector: String): Node", "member" : "scalafx.scene.Node.lookup", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#lookup(selector:String):scalafx.scene.Node", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.localToScene", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#localToScene(localPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localX: Double, localY: Double): Point2D", "member" : "scalafx.scene.Node.localToScene", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#localToScene(localX:Double,localY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.localToScene", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#localToScene(localBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.localToParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#localToParent(localPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localX: Double, localY: Double): Point2D", "member" : "scalafx.scene.Node.localToParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#localToParent(localX:Double,localY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.localToParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#localToParent(localBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "intersects", "tail" : "(localX: Double, localY: Double, localWidth: Double, localHeight: Double): Boolean", "member" : "scalafx.scene.Node.intersects", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#intersects(localX:Double,localY:Double,localWidth:Double,localHeight:Double):Boolean", "kind" : "def"}, {"label" : "intersects", "tail" : "(localBounds: Bounds): Boolean", "member" : "scalafx.scene.Node.intersects", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#intersects(localBounds:scalafx.geometry.Bounds):Boolean", "kind" : "def"}, {"label" : "baselineOffset", "tail" : "(): Double", "member" : "scalafx.scene.Node.baselineOffset", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#baselineOffset:Double", "kind" : "def"}, {"label" : "fireEvent", "tail" : "(event: Event): Unit", "member" : "scalafx.scene.Node.fireEvent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#fireEvent(event:scalafx.event.Event):Unit", "kind" : "def"}, {"label" : "contains", "tail" : "(localPoint: Point2D): Boolean", "member" : "scalafx.scene.Node.contains", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#contains(localPoint:scalafx.geometry.Point2D):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(localX: Double, localY: Double): Boolean", "member" : "scalafx.scene.Node.contains", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#contains(localX:Double,localY:Double):Boolean", "kind" : "def"}, {"label" : "autosize", "tail" : "(): Unit", "member" : "scalafx.scene.Node.autosize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#autosize():Unit", "kind" : "def"}, {"label" : "vgrow_=", "tail" : "(p: Priority): Unit", "member" : "scalafx.scene.Node.vgrow_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#vgrow_=(p:scalafx.scene.layout.Priority):Unit", "kind" : "def"}, {"label" : "vgrow", "tail" : "(): Priority", "member" : "scalafx.scene.Node.vgrow", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#vgrow:scalafx.scene.layout.Priority", "kind" : "def"}, {"label" : "hgrow_=", "tail" : "(p: Priority): Unit", "member" : "scalafx.scene.Node.hgrow_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#hgrow_=(p:scalafx.scene.layout.Priority):Unit", "kind" : "def"}, {"label" : "hgrow", "tail" : "(): Priority", "member" : "scalafx.scene.Node.hgrow", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#hgrow:scalafx.scene.layout.Priority", "kind" : "def"}, {"label" : "margin_=", "tail" : "(i: Insets): Unit", "member" : "scalafx.scene.Node.margin_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#margin_=(i:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "margin", "tail" : "(): Insets", "member" : "scalafx.scene.Node.margin", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#margin:scalafx.geometry.Insets", "kind" : "def"}, {"label" : "alignmentInParent_=", "tail" : "(p: Pos): Unit", "member" : "scalafx.scene.Node.alignmentInParent_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#alignmentInParent_=(p:scalafx.geometry.Pos):Unit", "kind" : "def"}, {"label" : "alignmentInParent", "tail" : "(): Pos", "member" : "scalafx.scene.Node.alignmentInParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#alignmentInParent:scalafx.geometry.Pos", "kind" : "def"}, {"label" : "visible_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.visible_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#visible_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "visible", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.visible", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#visible:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "userData_=", "tail" : "(v: AnyRef): Unit", "member" : "scalafx.scene.Node.userData_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#userData_=(v:AnyRef):Unit", "kind" : "def"}, {"label" : "userData", "tail" : "(): AnyRef", "member" : "scalafx.scene.Node.userData", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#userData:Object", "kind" : "def"}, {"label" : "translateZ_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateZ_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#translateZ_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateZ", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateZ", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#translateZ:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "translateY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateY_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#translateY_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateY", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#translateY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "translateX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateX_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#translateX_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateX", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#translateX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "transforms_=", "tail" : "(c: Iterable[Transform]): Unit", "member" : "scalafx.scene.Node.transforms_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#transforms_=(c:Iterable[scalafx.scene.transform.Transform]):Unit", "kind" : "def"}, {"label" : "transforms", "tail" : "(): ObservableList[Transform]", "member" : "scalafx.scene.Node.transforms", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#transforms:javafx.collections.ObservableList[javafx.scene.transform.Transform]", "kind" : "def"}, {"label" : "styleClass_=", "tail" : "(c: Iterable[String]): Unit", "member" : "scalafx.scene.Node.styleClass_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#styleClass_=(c:Iterable[String]):Unit", "kind" : "def"}, {"label" : "style_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.style_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#style_=(v:String):Unit", "kind" : "def"}, {"label" : "style", "tail" : "(): StringProperty", "member" : "scalafx.scene.Node.style", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#style:scalafx.beans.property.StringProperty", "kind" : "def"}, {"label" : "scene", "tail" : "(): ReadOnlyObjectProperty[Scene]", "member" : "scalafx.scene.Node.scene", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#scene:scalafx.beans.property.ReadOnlyObjectProperty[javafx.scene.Scene]", "kind" : "def"}, {"label" : "scaleZ_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleZ_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#scaleZ_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleZ", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleZ", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#scaleZ:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "scaleY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleY_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#scaleY_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleY", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#scaleY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "scaleX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleX_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#scaleX_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleX", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#scaleX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "rotationAxis_=", "tail" : "(v: Point3D): Unit", "member" : "scalafx.scene.Node.rotationAxis_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#rotationAxis_=(v:scalafx.geometry.Point3D):Unit", "kind" : "def"}, {"label" : "rotationAxis", "tail" : "(): ObjectProperty[Point3D]", "member" : "scalafx.scene.Node.rotationAxis", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#rotationAxis:scalafx.beans.property.ObjectProperty[javafx.geometry.Point3D]", "kind" : "def"}, {"label" : "rotate_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.rotate_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#rotate_=(v:Double):Unit", "kind" : "def"}, {"label" : "rotate", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.rotate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#rotate:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "pressed", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.pressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#pressed:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "pickOnBounds_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.pickOnBounds_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#pickOnBounds_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "pickOnBounds", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.pickOnBounds", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#pickOnBounds:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "parent", "tail" : "(): ReadOnlyObjectProperty[Parent]", "member" : "scalafx.scene.Node.parent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#parent:scalafx.beans.property.ReadOnlyObjectProperty[javafx.scene.Parent]", "kind" : "def"}, {"label" : "opacity_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.opacity_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#opacity_=(v:Double):Unit", "kind" : "def"}, {"label" : "opacity", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.opacity", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#opacity:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "onScroll_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScroll_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onScroll_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScroll", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScroll", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onScroll:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onMouseReleased_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMouseReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMouseReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMousePressed_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMousePressed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMousePressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMousePressed", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMousePressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMousePressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseMoved_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseMoved_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMouseMoved_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseMoved", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseMoved", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMouseMoved:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseExited_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseExited_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMouseExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseExited", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseExited", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMouseExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseEntered_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseEntered_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMouseEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseEntered", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMouseEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseDragReleased_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMouseDragReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMouseDragReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragOver_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragOver_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMouseDragOver_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragOver", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragOver", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMouseDragOver:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragExited_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragExited_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMouseDragExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragExited", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragExited", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMouseDragExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragEntered_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragEntered_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMouseDragEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragEntered", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMouseDragEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragged_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragged_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMouseDragged_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragged", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseDragged", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMouseDragged:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseClicked_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseClicked_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMouseClicked_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseClicked", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseClicked", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onMouseClicked:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onKeyTyped_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyTyped_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onKeyTyped_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyTyped", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyTyped", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onKeyTyped:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onKeyReleased_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onKeyReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onKeyReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onKeyPressed_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyPressed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onKeyPressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyPressed", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyPressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onKeyPressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onInputMethodTextChanged_=", "tail" : "(v: EventHandler[_ >: InputMethodEvent]): Unit", "member" : "scalafx.scene.Node.onInputMethodTextChanged_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onInputMethodTextChanged_=(v:javafx.event.EventHandler[_>:javafx.scene.input.InputMethodEvent]):Unit", "kind" : "def"}, {"label" : "onInputMethodTextChanged", "tail" : "(): ObjectProperty[EventHandler[_ >: InputMethodEvent]]", "member" : "scalafx.scene.Node.onInputMethodTextChanged", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onInputMethodTextChanged:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.InputMethodEvent]]", "kind" : "def"}, {"label" : "onDragOver_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragOver_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onDragOver_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragOver", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragOver", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onDragOver:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragExited_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragExited_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onDragExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragExited", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragExited", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onDragExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragEntered_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragEntered_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onDragEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragEntered", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onDragEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDropped_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragDropped_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onDragDropped_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragDropped", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragDropped", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onDragDropped:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDone_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragDone_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onDragDone_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragDone", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragDone", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onDragDone:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDetected_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onDragDetected_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onDragDetected_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onDragDetected", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onDragDetected", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onDragDetected:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onContextMenuRequested_=", "tail" : "(v: EventHandler[_ >: ContextMenuEvent]): Unit", "member" : "scalafx.scene.Node.onContextMenuRequested_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onContextMenuRequested_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ContextMenuEvent]):Unit", "kind" : "def"}, {"label" : "onContextMenuRequested", "tail" : "(): ObjectProperty[EventHandler[_ >: ContextMenuEvent]]", "member" : "scalafx.scene.Node.onContextMenuRequested", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#onContextMenuRequested:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ContextMenuEvent]]", "kind" : "def"}, {"label" : "effectiveNodeOrientation", "tail" : "(): ReadOnlyObjectProperty[NodeOrientation]", "member" : "scalafx.scene.Node.effectiveNodeOrientation", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#effectiveNodeOrientation:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.NodeOrientation]", "kind" : "def"}, {"label" : "nodeOrientation_=", "tail" : "(v: NodeOrientation): Unit", "member" : "scalafx.scene.Node.nodeOrientation_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#nodeOrientation_=(v:scalafx.geometry.NodeOrientation):Unit", "kind" : "def"}, {"label" : "nodeOrientation", "tail" : "(): ObjectProperty[NodeOrientation]", "member" : "scalafx.scene.Node.nodeOrientation", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#nodeOrientation:scalafx.beans.property.ObjectProperty[javafx.geometry.NodeOrientation]", "kind" : "def"}, {"label" : "mouseTransparent_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.mouseTransparent_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#mouseTransparent_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "mouseTransparent", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.mouseTransparent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#mouseTransparent:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "managed_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.managed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#managed_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "managed", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.managed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#managed:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "layoutY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.layoutY_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#layoutY_=(v:Double):Unit", "kind" : "def"}, {"label" : "layoutY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.layoutY", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#layoutY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "layoutX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.layoutX_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#layoutX_=(v:Double):Unit", "kind" : "def"}, {"label" : "layoutX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.layoutX", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#layoutX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "layoutBounds", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.layoutBounds", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#layoutBounds:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "inputMethodRequests_=", "tail" : "(v: InputMethodRequests): Unit", "member" : "scalafx.scene.Node.inputMethodRequests_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#inputMethodRequests_=(v:javafx.scene.input.InputMethodRequests):Unit", "kind" : "def"}, {"label" : "inputMethodRequests", "tail" : "(): ObjectProperty[InputMethodRequests]", "member" : "scalafx.scene.Node.inputMethodRequests", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#inputMethodRequests:scalafx.beans.property.ObjectProperty[javafx.scene.input.InputMethodRequests]", "kind" : "def"}, {"label" : "id_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.id_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#id_=(v:String):Unit", "kind" : "def"}, {"label" : "id", "tail" : "(): StringProperty", "member" : "scalafx.scene.Node.id", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#id:scalafx.beans.property.StringProperty", "kind" : "def"}, {"label" : "hover", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.hover", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#hover:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "focusTraversable_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.focusTraversable_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#focusTraversable_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "focusTraversable", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.focusTraversable", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#focusTraversable:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "focused", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.focused", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#focused:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "eventDispatcher_=", "tail" : "(v: EventDispatcher): Unit", "member" : "scalafx.scene.Node.eventDispatcher_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#eventDispatcher_=(v:javafx.event.EventDispatcher):Unit", "kind" : "def"}, {"label" : "eventDispatcher", "tail" : "(): ObjectProperty[EventDispatcher]", "member" : "scalafx.scene.Node.eventDispatcher", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#eventDispatcher:scalafx.beans.property.ObjectProperty[javafx.event.EventDispatcher]", "kind" : "def"}, {"label" : "effect_=", "tail" : "(v: Effect): Unit", "member" : "scalafx.scene.Node.effect_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#effect_=(v:scalafx.scene.effect.Effect):Unit", "kind" : "def"}, {"label" : "effect", "tail" : "(): ObjectProperty[Effect]", "member" : "scalafx.scene.Node.effect", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#effect:scalafx.beans.property.ObjectProperty[javafx.scene.effect.Effect]", "kind" : "def"}, {"label" : "disable_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.disable_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#disable_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "disable", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.disable", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#disable:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "disabled", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.disabled", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#disabled:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "depthTest_=", "tail" : "(v: DepthTest): Unit", "member" : "scalafx.scene.Node.depthTest_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#depthTest_=(v:scalafx.scene.DepthTest):Unit", "kind" : "def"}, {"label" : "depthTest", "tail" : "(): ObjectProperty[DepthTest]", "member" : "scalafx.scene.Node.depthTest", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#depthTest:scalafx.beans.property.ObjectProperty[javafx.scene.DepthTest]", "kind" : "def"}, {"label" : "cursor_=", "tail" : "(v: Cursor): Unit", "member" : "scalafx.scene.Node.cursor_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#cursor_=(v:scalafx.scene.Cursor):Unit", "kind" : "def"}, {"label" : "cursor", "tail" : "(): ObjectProperty[Cursor]", "member" : "scalafx.scene.Node.cursor", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#cursor:scalafx.beans.property.ObjectProperty[javafx.scene.Cursor]", "kind" : "def"}, {"label" : "contentBias", "tail" : "(): Orientation", "member" : "scalafx.scene.Node.contentBias", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#contentBias:scalafx.geometry.Orientation", "kind" : "def"}, {"label" : "clip_=", "tail" : "(v: Node): Unit", "member" : "scalafx.scene.Node.clip_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#clip_=(v:scalafx.scene.Node):Unit", "kind" : "def"}, {"label" : "clip", "tail" : "(): ObjectProperty[Node]", "member" : "scalafx.scene.Node.clip", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#clip:scalafx.beans.property.ObjectProperty[javafx.scene.Node]", "kind" : "def"}, {"label" : "cache_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.cache_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#cache_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "cache", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.cache", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#cache:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "cacheHint_=", "tail" : "(v: CacheHint): Unit", "member" : "scalafx.scene.Node.cacheHint_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#cacheHint_=(v:scalafx.scene.CacheHint):Unit", "kind" : "def"}, {"label" : "cacheHint", "tail" : "(): ObjectProperty[CacheHint]", "member" : "scalafx.scene.Node.cacheHint", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#cacheHint:scalafx.beans.property.ObjectProperty[javafx.scene.CacheHint]", "kind" : "def"}, {"label" : "boundsInParent", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.boundsInParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#boundsInParent:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "boundsInLocal", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.boundsInLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#boundsInLocal:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "blendMode_=", "tail" : "(v: BlendMode): Unit", "member" : "scalafx.scene.Node.blendMode_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#blendMode_=(v:scalafx.scene.effect.BlendMode):Unit", "kind" : "def"}, {"label" : "blendMode", "tail" : "(): ObjectProperty[BlendMode]", "member" : "scalafx.scene.Node.blendMode", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#blendMode:scalafx.beans.property.ObjectProperty[javafx.scene.effect.BlendMode]", "kind" : "def"}, {"label" : "accessibleRoleDescription_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleRoleDescription_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#accessibleRoleDescription_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleRoleDescription", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleRoleDescription", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#accessibleRoleDescription:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "accessibleRole_=", "tail" : "(v: AccessibleRole): Unit", "member" : "scalafx.scene.Node.accessibleRole_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#accessibleRole_=(v:scalafx.scene.AccessibleRole):Unit", "kind" : "def"}, {"label" : "accessibleRole", "tail" : "(): ObjectProperty[AccessibleRole]", "member" : "scalafx.scene.Node.accessibleRole", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#accessibleRole:scalafx.beans.property.ObjectProperty[javafx.scene.AccessibleRole]", "kind" : "def"}, {"label" : "accessibleHelp_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleHelp_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#accessibleHelp_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleHelp", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleHelp", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#accessibleHelp:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "accessibleText_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleText_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#accessibleText_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleText", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleText", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#accessibleText:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "typeSelector", "tail" : "(): String", "member" : "scalafx.css.Styleable.typeSelector", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#typeSelector:String", "kind" : "def"}, {"label" : "styleClass", "tail" : "(): ObservableBuffer[String]", "member" : "scalafx.css.Styleable.styleClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#styleClass:scalafx.collections.ObservableBuffer[String]", "kind" : "def"}, {"label" : "styleableParent", "tail" : "(): Styleable", "member" : "scalafx.css.Styleable.styleableParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#styleableParent:scalafx.css.Styleable", "kind" : "def"}, {"label" : "getStyle", "tail" : "(): String", "member" : "scalafx.css.Styleable.getStyle", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#getStyle:String", "kind" : "def"}, {"label" : "pseudoClassStates", "tail" : "(): ObservableSet[PseudoClass]", "member" : "scalafx.css.Styleable.pseudoClassStates", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#pseudoClassStates:scalafx.collections.ObservableSet[javafx.css.PseudoClass]", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "scalafx.css.Styleable.getId", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#getId:String", "kind" : "def"}, {"label" : "cssMetaData", "tail" : "(): Seq[CssMetaData[_ <: Styleable, _]]", "member" : "scalafx.css.Styleable.cssMetaData", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#cssMetaData:Seq[javafx.css.CssMetaData[_<:javafx.css.Styleable,_]]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scalafx.delegate.SFXDelegate.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(ref: Any): Boolean", "member" : "scalafx.delegate.SFXDelegate.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#equals(ref:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scalafx.delegate.SFXDelegate.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#toString():String", "kind" : "def"}, {"label" : "buildEventDispatchChain", "tail" : "(chain: EventDispatchChain): EventDispatchChain", "member" : "scalafx.event.EventHandlerDelegate.buildEventDispatchChain", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#buildEventDispatchChain(chain:javafx.event.EventDispatchChain):javafx.event.EventDispatchChain", "kind" : "def"}, {"label" : "removeEventFilter", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.removeEventFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#removeEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "filterEvent", "tail" : "(eventType: EventType[J])(filter: FilterMagnet[J, S]): Subscription", "member" : "scalafx.event.EventHandlerDelegate.filterEvent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#filterEvent[J<:javafx.event.Event,S<:scalafx.event.Eventwithscalafx.delegate.SFXDelegate[J]](eventType:scalafx.event.EventType[J])(filter:EventHandlerDelegate.this.FilterMagnet[J,S]):scalafx.event.subscriptions.Subscription", "kind" : "def"}, {"label" : "addEventFilter", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.addEventFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#addEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "removeEventHandler", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.removeEventHandler", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#removeEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "handleEvent", "tail" : "(eventType: EventType[J])(handler: HandlerMagnet[J, S]): Subscription", "member" : "scalafx.event.EventHandlerDelegate.handleEvent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#handleEvent[J<:javafx.event.Event,S<:scalafx.event.Eventwithscalafx.delegate.SFXDelegate[J]](eventType:scalafx.event.EventType[J])(handler:EventHandlerDelegate.this.HandlerMagnet[J,S]):scalafx.event.subscriptions.Subscription", "kind" : "def"}, {"label" : "addEventHandler", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.addEventHandler", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#addEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "EventHandled", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.EventHandled", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#EventHandled=AnyRef{defaddEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defremoveEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defaddEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defremoveEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defbuildEventDispatchChain(chain:javafx.event.EventDispatchChain):javafx.event.EventDispatchChain}", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/DeckZone.html", "kind" : "class"}, {"name" : "me.mysterymystery.duelingfactions.api.board.locations.GraveyardZone", "shortDescription" : "", "members_class" : [{"label" : "FilterMagnet", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.FilterMagnet", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#FilterMagnet[J<:<?>,S<:<?>]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "HandlerMagnet", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.HandlerMagnet", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#HandlerMagnet[J<:<?>,S<:<?>]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "occupied", "tail" : "(): Boolean", "member" : "me.mysterymystery.duelingfactions.api.board.locations.GraveyardZone.occupied", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#occupied:Boolean", "kind" : "def"}, {"label" : "-", "tail" : "(card: Card): Unit", "member" : "me.mysterymystery.duelingfactions.api.board.locations.GraveyardZone.-", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#-(card:me.mysterymystery.duelingfactions.api.card.Card):Unit", "kind" : "def"}, {"label" : "+", "tail" : "(card: Card): Unit", "member" : "me.mysterymystery.duelingfactions.api.board.locations.GraveyardZone.+", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#+(card:me.mysterymystery.duelingfactions.api.card.Card):Unit", "kind" : "def"}, {"label" : "view", "tail" : "(): Unit", "member" : "me.mysterymystery.duelingfactions.api.board.locations.GraveyardZone.view", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#view:Unit", "kind" : "def"}, {"member" : "me.mysterymystery.duelingfactions.api.board.locations.GraveyardZone#<init>", "error" : "unsupported entity"}, {"label" : "delegate", "tail" : ": StackPane", "member" : "scalafx.scene.layout.StackPane.delegate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#delegate:javafx.scene.layout.StackPane", "kind" : "val"}, {"label" : "alignment_=", "tail" : "(v: Pos): Unit", "member" : "scalafx.delegate.AlignmentDelegate.alignment_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#alignment_=(v:scalafx.geometry.Pos):Unit", "kind" : "def"}, {"label" : "alignment", "tail" : "(): ObjectProperty[Pos]", "member" : "scalafx.delegate.AlignmentDelegate.alignment", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#alignment:scalafx.beans.property.ObjectProperty[javafx.geometry.Pos]", "kind" : "def"}, {"label" : "children_=", "tail" : "(n: Node): Unit", "member" : "scalafx.scene.layout.Pane.children_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#children_=(n:scalafx.scene.Node):Unit", "kind" : "def"}, {"label" : "children_=", "tail" : "(c: Iterable[Node]): Unit", "member" : "scalafx.scene.layout.Pane.children_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#children_=(c:Iterable[scalafx.scene.Node]):Unit", "kind" : "def"}, {"label" : "children", "tail" : "(): ObservableList[Node]", "member" : "scalafx.scene.layout.Pane.children", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#children:javafx.collections.ObservableList[javafx.scene.Node]", "kind" : "def"}, {"label" : "insets", "tail" : "(): Insets", "member" : "scalafx.scene.layout.Region.insets", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#insets:javafx.geometry.Insets", "kind" : "def"}, {"label" : "scaleShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.scaleShape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#scaleShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "scaleShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.scaleShape", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#scaleShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "resize", "tail" : "(width: Double, height: Double): Unit", "member" : "scalafx.scene.layout.Region.resize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#resize(width:Double,height:Double):Unit", "kind" : "def"}, {"label" : "resize", "tail" : "(): Boolean", "member" : "scalafx.scene.layout.Region.resize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#resize:Boolean", "kind" : "def"}, {"label" : "snapToPixel_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.snapToPixel_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#snapToPixel_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "snapToPixel", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.snapToPixel", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#snapToPixel:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "shape_=", "tail" : "(v: Shape): Unit", "member" : "scalafx.scene.layout.Region.shape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#shape_=(v:scalafx.scene.shape.Shape):Unit", "kind" : "def"}, {"label" : "shape", "tail" : "(): ObjectProperty[Shape]", "member" : "scalafx.scene.layout.Region.shape", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#shape:scalafx.beans.property.ObjectProperty[javafx.scene.shape.Shape]", "kind" : "def"}, {"label" : "prefWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.prefWidth_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#prefWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "prefWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.prefWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#prefWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "prefHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.prefHeight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#prefHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "prefHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.prefHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#prefHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "padding_=", "tail" : "(v: Insets): Unit", "member" : "scalafx.scene.layout.Region.padding_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#padding_=(v:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "padding", "tail" : "(): ObjectProperty[Insets]", "member" : "scalafx.scene.layout.Region.padding", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#padding:scalafx.beans.property.ObjectProperty[javafx.geometry.Insets]", "kind" : "def"}, {"label" : "opaqueInsets_=", "tail" : "(v: Insets): Unit", "member" : "scalafx.scene.layout.Region.opaqueInsets_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#opaqueInsets_=(v:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "opaqueInsets", "tail" : "(): ObjectProperty[Insets]", "member" : "scalafx.scene.layout.Region.opaqueInsets", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#opaqueInsets:scalafx.beans.property.ObjectProperty[javafx.geometry.Insets]", "kind" : "def"}, {"label" : "minWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.minWidth_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#minWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "minWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.minWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#minWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "minHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.minHeight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#minHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "minHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.minHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#minHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "maxWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.maxWidth_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#maxWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "maxWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.maxWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#maxWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "maxHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.maxHeight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#maxHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "maxHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.maxHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#maxHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "width", "tail" : "(): ReadOnlyDoubleProperty", "member" : "scalafx.scene.layout.Region.width", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#width:scalafx.beans.property.ReadOnlyDoubleProperty", "kind" : "def"}, {"label" : "height", "tail" : "(): ReadOnlyDoubleProperty", "member" : "scalafx.scene.layout.Region.height", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#height:scalafx.beans.property.ReadOnlyDoubleProperty", "kind" : "def"}, {"label" : "centerShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.centerShape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#centerShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "centerShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.centerShape", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#centerShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "cacheShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.cacheShape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#cacheShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "cacheShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.cacheShape", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#cacheShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "border_=", "tail" : "(v: Border): Unit", "member" : "scalafx.scene.layout.Region.border_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#border_=(v:scalafx.scene.layout.Border):Unit", "kind" : "def"}, {"label" : "border", "tail" : "(): ObjectProperty[Border]", "member" : "scalafx.scene.layout.Region.border", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#border:scalafx.beans.property.ObjectProperty[javafx.scene.layout.Border]", "kind" : "def"}, {"label" : "background_=", "tail" : "(v: Background): Unit", "member" : "scalafx.scene.layout.Region.background_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#background_=(v:scalafx.scene.layout.Background):Unit", "kind" : "def"}, {"label" : "background", "tail" : "(): ObjectProperty[Background]", "member" : "scalafx.scene.layout.Region.background", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#background:scalafx.beans.property.ObjectProperty[javafx.scene.layout.Background]", "kind" : "def"}, {"label" : "stylesheets_=", "tail" : "(c: Iterable[String]): Unit", "member" : "scalafx.scene.Parent.stylesheets_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#stylesheets_=(c:Iterable[String]):Unit", "kind" : "def"}, {"label" : "stylesheets", "tail" : "(): ObservableList[String]", "member" : "scalafx.scene.Parent.stylesheets", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#stylesheets:javafx.collections.ObservableList[String]", "kind" : "def"}, {"label" : "needsLayout", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Parent.needsLayout", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#needsLayout:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "eventHandlerDelegate", "tail" : "(): EventHandled", "member" : "scalafx.scene.Node.eventHandlerDelegate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#eventHandlerDelegate:Node.this.EventHandled", "kind" : "def"}, {"label" : "onTouchStationary_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchStationary_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onTouchStationary_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchStationary", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchStationary", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onTouchStationary:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchReleased_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onTouchReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onTouchReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchPressed_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchPressed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onTouchPressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchPressed", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchPressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onTouchPressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchMoved_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchMoved_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onTouchMoved_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchMoved", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchMoved", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onTouchMoved:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onZoomStarted_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoomStarted_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onZoomStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoomStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoomStarted", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onZoomStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onZoomFinished_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoomFinished_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onZoomFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoomFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoomFinished", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onZoomFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onZoom_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoom_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onZoom_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoom", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoom", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onZoom:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onSwipeRight_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeRight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onSwipeRight_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeRight", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onSwipeRight:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeUp_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeUp_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onSwipeUp_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeUp", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeUp", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onSwipeUp:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeLeft_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeLeft_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onSwipeLeft_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeLeft", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeLeft", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onSwipeLeft:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeDown_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeDown_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onSwipeDown_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeDown", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeDown", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onSwipeDown:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onScrollStarted_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScrollStarted_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onScrollStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScrollStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScrollStarted", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onScrollStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onScrollFinished_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScrollFinished_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onScrollFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScrollFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScrollFinished", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onScrollFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onRotationStarted_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotationStarted_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onRotationStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotationStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotationStarted", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onRotationStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "onRotationFinished_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotationFinished_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onRotationFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotationFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotationFinished", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onRotationFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "onRotate_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotate_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onRotate_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotate", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onRotate:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "localToSceneTransform", "tail" : "(): Transform", "member" : "scalafx.scene.Node.localToSceneTransform", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#localToSceneTransform:scalafx.scene.transform.Transform", "kind" : "def"}, {"label" : "localToParentTransform", "tail" : "(): Transform", "member" : "scalafx.scene.Node.localToParentTransform", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#localToParentTransform:scalafx.scene.transform.Transform", "kind" : "def"}, {"label" : "toFront", "tail" : "(): Unit", "member" : "scalafx.scene.Node.toFront", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#toFront():Unit", "kind" : "def"}, {"label" : "toBack", "tail" : "(): Unit", "member" : "scalafx.scene.Node.toBack", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#toBack():Unit", "kind" : "def"}, {"label" : "startFullDrag", "tail" : "(): Unit", "member" : "scalafx.scene.Node.startFullDrag", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#startFullDrag():Unit", "kind" : "def"}, {"label" : "startDragAndDrop", "tail" : "(transferModes: TransferMode*): Dragboard", "member" : "scalafx.scene.Node.startDragAndDrop", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#startDragAndDrop(transferModes:javafx.scene.input.TransferMode*):javafx.scene.input.Dragboard", "kind" : "def"}, {"label" : "snapshot", "tail" : "(callback: (SnapshotResult) â‡’ Unit, params: SnapshotParameters, image: WritableImage): Unit", "member" : "scalafx.scene.Node.snapshot", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#snapshot(callback:scalafx.scene.SnapshotResult=>Unit,params:scalafx.scene.SnapshotParameters,image:scalafx.scene.image.WritableImage):Unit", "kind" : "def"}, {"label" : "snapshot", "tail" : "(params: SnapshotParameters, image: WritableImage): WritableImage", "member" : "scalafx.scene.Node.snapshot", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#snapshot(params:scalafx.scene.SnapshotParameters,image:scalafx.scene.image.WritableImage):scalafx.scene.image.WritableImage", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(scenePoint: Point2D): Point2D", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#sceneToLocal(scenePoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(sceneX: Double, sceneY: Double): Point2D", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#sceneToLocal(sceneX:Double,sceneY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(sceneBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#sceneToLocal(sceneBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "resizeRelocate", "tail" : "(x: Double, y: Double, width: Double, height: Double): Unit", "member" : "scalafx.scene.Node.resizeRelocate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#resizeRelocate(x:Double,y:Double,width:Double,height:Double):Unit", "kind" : "def"}, {"label" : "requestFocus", "tail" : "(): Unit", "member" : "scalafx.scene.Node.requestFocus", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#requestFocus():Unit", "kind" : "def"}, {"label" : "relocate", "tail" : "(x: Double, y: Double): Unit", "member" : "scalafx.scene.Node.relocate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#relocate(x:Double,y:Double):Unit", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.parentToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#parentToLocal(parentPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentX: Double, parentY: Double): Point2D", "member" : "scalafx.scene.Node.parentToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#parentToLocal(parentX:Double,parentY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.parentToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#parentToLocal(parentBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "minWidth", "tail" : "(height: Double): Double", "member" : "scalafx.scene.Node.minWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#minWidth(height:Double):Double", "kind" : "def"}, {"label" : "minHeight", "tail" : "(width: Double): Double", "member" : "scalafx.scene.Node.minHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#minHeight(width:Double):Double", "kind" : "def"}, {"label" : "maxWidth", "tail" : "(height: Double): Double", "member" : "scalafx.scene.Node.maxWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#maxWidth(height:Double):Double", "kind" : "def"}, {"label" : "maxHeight", "tail" : "(width: Double): Double", "member" : "scalafx.scene.Node.maxHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#maxHeight(width:Double):Double", "kind" : "def"}, {"label" : "lookupAll", "tail" : "(selector: String): Set[Node]", "member" : "scalafx.scene.Node.lookupAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#lookupAll(selector:String):java.util.Set[javafx.scene.Node]", "kind" : "def"}, {"label" : "lookup", "tail" : "(selector: String): Node", "member" : "scalafx.scene.Node.lookup", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#lookup(selector:String):scalafx.scene.Node", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.localToScene", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#localToScene(localPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localX: Double, localY: Double): Point2D", "member" : "scalafx.scene.Node.localToScene", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#localToScene(localX:Double,localY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.localToScene", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#localToScene(localBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.localToParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#localToParent(localPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localX: Double, localY: Double): Point2D", "member" : "scalafx.scene.Node.localToParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#localToParent(localX:Double,localY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.localToParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#localToParent(localBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "intersects", "tail" : "(localX: Double, localY: Double, localWidth: Double, localHeight: Double): Boolean", "member" : "scalafx.scene.Node.intersects", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#intersects(localX:Double,localY:Double,localWidth:Double,localHeight:Double):Boolean", "kind" : "def"}, {"label" : "intersects", "tail" : "(localBounds: Bounds): Boolean", "member" : "scalafx.scene.Node.intersects", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#intersects(localBounds:scalafx.geometry.Bounds):Boolean", "kind" : "def"}, {"label" : "baselineOffset", "tail" : "(): Double", "member" : "scalafx.scene.Node.baselineOffset", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#baselineOffset:Double", "kind" : "def"}, {"label" : "fireEvent", "tail" : "(event: Event): Unit", "member" : "scalafx.scene.Node.fireEvent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#fireEvent(event:scalafx.event.Event):Unit", "kind" : "def"}, {"label" : "contains", "tail" : "(localPoint: Point2D): Boolean", "member" : "scalafx.scene.Node.contains", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#contains(localPoint:scalafx.geometry.Point2D):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(localX: Double, localY: Double): Boolean", "member" : "scalafx.scene.Node.contains", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#contains(localX:Double,localY:Double):Boolean", "kind" : "def"}, {"label" : "autosize", "tail" : "(): Unit", "member" : "scalafx.scene.Node.autosize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#autosize():Unit", "kind" : "def"}, {"label" : "vgrow_=", "tail" : "(p: Priority): Unit", "member" : "scalafx.scene.Node.vgrow_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#vgrow_=(p:scalafx.scene.layout.Priority):Unit", "kind" : "def"}, {"label" : "vgrow", "tail" : "(): Priority", "member" : "scalafx.scene.Node.vgrow", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#vgrow:scalafx.scene.layout.Priority", "kind" : "def"}, {"label" : "hgrow_=", "tail" : "(p: Priority): Unit", "member" : "scalafx.scene.Node.hgrow_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#hgrow_=(p:scalafx.scene.layout.Priority):Unit", "kind" : "def"}, {"label" : "hgrow", "tail" : "(): Priority", "member" : "scalafx.scene.Node.hgrow", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#hgrow:scalafx.scene.layout.Priority", "kind" : "def"}, {"label" : "margin_=", "tail" : "(i: Insets): Unit", "member" : "scalafx.scene.Node.margin_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#margin_=(i:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "margin", "tail" : "(): Insets", "member" : "scalafx.scene.Node.margin", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#margin:scalafx.geometry.Insets", "kind" : "def"}, {"label" : "alignmentInParent_=", "tail" : "(p: Pos): Unit", "member" : "scalafx.scene.Node.alignmentInParent_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#alignmentInParent_=(p:scalafx.geometry.Pos):Unit", "kind" : "def"}, {"label" : "alignmentInParent", "tail" : "(): Pos", "member" : "scalafx.scene.Node.alignmentInParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#alignmentInParent:scalafx.geometry.Pos", "kind" : "def"}, {"label" : "visible_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.visible_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#visible_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "visible", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.visible", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#visible:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "userData_=", "tail" : "(v: AnyRef): Unit", "member" : "scalafx.scene.Node.userData_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#userData_=(v:AnyRef):Unit", "kind" : "def"}, {"label" : "userData", "tail" : "(): AnyRef", "member" : "scalafx.scene.Node.userData", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#userData:Object", "kind" : "def"}, {"label" : "translateZ_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateZ_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#translateZ_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateZ", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateZ", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#translateZ:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "translateY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateY_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#translateY_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateY", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#translateY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "translateX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateX_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#translateX_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateX", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#translateX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "transforms_=", "tail" : "(c: Iterable[Transform]): Unit", "member" : "scalafx.scene.Node.transforms_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#transforms_=(c:Iterable[scalafx.scene.transform.Transform]):Unit", "kind" : "def"}, {"label" : "transforms", "tail" : "(): ObservableList[Transform]", "member" : "scalafx.scene.Node.transforms", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#transforms:javafx.collections.ObservableList[javafx.scene.transform.Transform]", "kind" : "def"}, {"label" : "styleClass_=", "tail" : "(c: Iterable[String]): Unit", "member" : "scalafx.scene.Node.styleClass_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#styleClass_=(c:Iterable[String]):Unit", "kind" : "def"}, {"label" : "style_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.style_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#style_=(v:String):Unit", "kind" : "def"}, {"label" : "style", "tail" : "(): StringProperty", "member" : "scalafx.scene.Node.style", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#style:scalafx.beans.property.StringProperty", "kind" : "def"}, {"label" : "scene", "tail" : "(): ReadOnlyObjectProperty[Scene]", "member" : "scalafx.scene.Node.scene", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#scene:scalafx.beans.property.ReadOnlyObjectProperty[javafx.scene.Scene]", "kind" : "def"}, {"label" : "scaleZ_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleZ_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#scaleZ_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleZ", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleZ", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#scaleZ:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "scaleY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleY_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#scaleY_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleY", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#scaleY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "scaleX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleX_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#scaleX_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleX", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#scaleX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "rotationAxis_=", "tail" : "(v: Point3D): Unit", "member" : "scalafx.scene.Node.rotationAxis_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#rotationAxis_=(v:scalafx.geometry.Point3D):Unit", "kind" : "def"}, {"label" : "rotationAxis", "tail" : "(): ObjectProperty[Point3D]", "member" : "scalafx.scene.Node.rotationAxis", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#rotationAxis:scalafx.beans.property.ObjectProperty[javafx.geometry.Point3D]", "kind" : "def"}, {"label" : "rotate_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.rotate_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#rotate_=(v:Double):Unit", "kind" : "def"}, {"label" : "rotate", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.rotate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#rotate:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "pressed", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.pressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#pressed:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "pickOnBounds_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.pickOnBounds_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#pickOnBounds_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "pickOnBounds", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.pickOnBounds", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#pickOnBounds:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "parent", "tail" : "(): ReadOnlyObjectProperty[Parent]", "member" : "scalafx.scene.Node.parent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#parent:scalafx.beans.property.ReadOnlyObjectProperty[javafx.scene.Parent]", "kind" : "def"}, {"label" : "opacity_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.opacity_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#opacity_=(v:Double):Unit", "kind" : "def"}, {"label" : "opacity", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.opacity", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#opacity:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "onScroll_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScroll_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onScroll_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScroll", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScroll", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onScroll:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onMouseReleased_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMouseReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMouseReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMousePressed_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMousePressed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMousePressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMousePressed", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMousePressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMousePressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseMoved_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseMoved_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMouseMoved_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseMoved", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseMoved", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMouseMoved:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseExited_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseExited_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMouseExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseExited", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseExited", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMouseExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseEntered_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseEntered_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMouseEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseEntered", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMouseEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseDragReleased_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMouseDragReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMouseDragReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragOver_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragOver_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMouseDragOver_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragOver", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragOver", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMouseDragOver:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragExited_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragExited_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMouseDragExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragExited", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragExited", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMouseDragExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragEntered_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragEntered_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMouseDragEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragEntered", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMouseDragEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragged_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragged_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMouseDragged_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragged", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseDragged", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMouseDragged:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseClicked_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseClicked_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMouseClicked_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseClicked", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseClicked", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onMouseClicked:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onKeyTyped_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyTyped_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onKeyTyped_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyTyped", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyTyped", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onKeyTyped:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onKeyReleased_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onKeyReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onKeyReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onKeyPressed_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyPressed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onKeyPressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyPressed", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyPressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onKeyPressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onInputMethodTextChanged_=", "tail" : "(v: EventHandler[_ >: InputMethodEvent]): Unit", "member" : "scalafx.scene.Node.onInputMethodTextChanged_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onInputMethodTextChanged_=(v:javafx.event.EventHandler[_>:javafx.scene.input.InputMethodEvent]):Unit", "kind" : "def"}, {"label" : "onInputMethodTextChanged", "tail" : "(): ObjectProperty[EventHandler[_ >: InputMethodEvent]]", "member" : "scalafx.scene.Node.onInputMethodTextChanged", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onInputMethodTextChanged:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.InputMethodEvent]]", "kind" : "def"}, {"label" : "onDragOver_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragOver_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onDragOver_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragOver", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragOver", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onDragOver:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragExited_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragExited_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onDragExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragExited", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragExited", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onDragExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragEntered_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragEntered_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onDragEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragEntered", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onDragEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDropped_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragDropped_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onDragDropped_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragDropped", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragDropped", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onDragDropped:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDone_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragDone_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onDragDone_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragDone", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragDone", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onDragDone:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDetected_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onDragDetected_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onDragDetected_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onDragDetected", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onDragDetected", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onDragDetected:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onContextMenuRequested_=", "tail" : "(v: EventHandler[_ >: ContextMenuEvent]): Unit", "member" : "scalafx.scene.Node.onContextMenuRequested_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onContextMenuRequested_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ContextMenuEvent]):Unit", "kind" : "def"}, {"label" : "onContextMenuRequested", "tail" : "(): ObjectProperty[EventHandler[_ >: ContextMenuEvent]]", "member" : "scalafx.scene.Node.onContextMenuRequested", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#onContextMenuRequested:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ContextMenuEvent]]", "kind" : "def"}, {"label" : "effectiveNodeOrientation", "tail" : "(): ReadOnlyObjectProperty[NodeOrientation]", "member" : "scalafx.scene.Node.effectiveNodeOrientation", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#effectiveNodeOrientation:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.NodeOrientation]", "kind" : "def"}, {"label" : "nodeOrientation_=", "tail" : "(v: NodeOrientation): Unit", "member" : "scalafx.scene.Node.nodeOrientation_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#nodeOrientation_=(v:scalafx.geometry.NodeOrientation):Unit", "kind" : "def"}, {"label" : "nodeOrientation", "tail" : "(): ObjectProperty[NodeOrientation]", "member" : "scalafx.scene.Node.nodeOrientation", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#nodeOrientation:scalafx.beans.property.ObjectProperty[javafx.geometry.NodeOrientation]", "kind" : "def"}, {"label" : "mouseTransparent_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.mouseTransparent_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#mouseTransparent_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "mouseTransparent", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.mouseTransparent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#mouseTransparent:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "managed_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.managed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#managed_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "managed", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.managed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#managed:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "layoutY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.layoutY_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#layoutY_=(v:Double):Unit", "kind" : "def"}, {"label" : "layoutY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.layoutY", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#layoutY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "layoutX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.layoutX_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#layoutX_=(v:Double):Unit", "kind" : "def"}, {"label" : "layoutX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.layoutX", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#layoutX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "layoutBounds", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.layoutBounds", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#layoutBounds:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "inputMethodRequests_=", "tail" : "(v: InputMethodRequests): Unit", "member" : "scalafx.scene.Node.inputMethodRequests_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#inputMethodRequests_=(v:javafx.scene.input.InputMethodRequests):Unit", "kind" : "def"}, {"label" : "inputMethodRequests", "tail" : "(): ObjectProperty[InputMethodRequests]", "member" : "scalafx.scene.Node.inputMethodRequests", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#inputMethodRequests:scalafx.beans.property.ObjectProperty[javafx.scene.input.InputMethodRequests]", "kind" : "def"}, {"label" : "id_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.id_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#id_=(v:String):Unit", "kind" : "def"}, {"label" : "id", "tail" : "(): StringProperty", "member" : "scalafx.scene.Node.id", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#id:scalafx.beans.property.StringProperty", "kind" : "def"}, {"label" : "hover", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.hover", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#hover:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "focusTraversable_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.focusTraversable_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#focusTraversable_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "focusTraversable", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.focusTraversable", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#focusTraversable:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "focused", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.focused", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#focused:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "eventDispatcher_=", "tail" : "(v: EventDispatcher): Unit", "member" : "scalafx.scene.Node.eventDispatcher_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#eventDispatcher_=(v:javafx.event.EventDispatcher):Unit", "kind" : "def"}, {"label" : "eventDispatcher", "tail" : "(): ObjectProperty[EventDispatcher]", "member" : "scalafx.scene.Node.eventDispatcher", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#eventDispatcher:scalafx.beans.property.ObjectProperty[javafx.event.EventDispatcher]", "kind" : "def"}, {"label" : "effect_=", "tail" : "(v: Effect): Unit", "member" : "scalafx.scene.Node.effect_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#effect_=(v:scalafx.scene.effect.Effect):Unit", "kind" : "def"}, {"label" : "effect", "tail" : "(): ObjectProperty[Effect]", "member" : "scalafx.scene.Node.effect", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#effect:scalafx.beans.property.ObjectProperty[javafx.scene.effect.Effect]", "kind" : "def"}, {"label" : "disable_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.disable_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#disable_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "disable", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.disable", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#disable:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "disabled", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.disabled", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#disabled:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "depthTest_=", "tail" : "(v: DepthTest): Unit", "member" : "scalafx.scene.Node.depthTest_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#depthTest_=(v:scalafx.scene.DepthTest):Unit", "kind" : "def"}, {"label" : "depthTest", "tail" : "(): ObjectProperty[DepthTest]", "member" : "scalafx.scene.Node.depthTest", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#depthTest:scalafx.beans.property.ObjectProperty[javafx.scene.DepthTest]", "kind" : "def"}, {"label" : "cursor_=", "tail" : "(v: Cursor): Unit", "member" : "scalafx.scene.Node.cursor_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#cursor_=(v:scalafx.scene.Cursor):Unit", "kind" : "def"}, {"label" : "cursor", "tail" : "(): ObjectProperty[Cursor]", "member" : "scalafx.scene.Node.cursor", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#cursor:scalafx.beans.property.ObjectProperty[javafx.scene.Cursor]", "kind" : "def"}, {"label" : "contentBias", "tail" : "(): Orientation", "member" : "scalafx.scene.Node.contentBias", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#contentBias:scalafx.geometry.Orientation", "kind" : "def"}, {"label" : "clip_=", "tail" : "(v: Node): Unit", "member" : "scalafx.scene.Node.clip_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#clip_=(v:scalafx.scene.Node):Unit", "kind" : "def"}, {"label" : "clip", "tail" : "(): ObjectProperty[Node]", "member" : "scalafx.scene.Node.clip", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#clip:scalafx.beans.property.ObjectProperty[javafx.scene.Node]", "kind" : "def"}, {"label" : "cache_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.cache_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#cache_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "cache", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.cache", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#cache:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "cacheHint_=", "tail" : "(v: CacheHint): Unit", "member" : "scalafx.scene.Node.cacheHint_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#cacheHint_=(v:scalafx.scene.CacheHint):Unit", "kind" : "def"}, {"label" : "cacheHint", "tail" : "(): ObjectProperty[CacheHint]", "member" : "scalafx.scene.Node.cacheHint", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#cacheHint:scalafx.beans.property.ObjectProperty[javafx.scene.CacheHint]", "kind" : "def"}, {"label" : "boundsInParent", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.boundsInParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#boundsInParent:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "boundsInLocal", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.boundsInLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#boundsInLocal:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "blendMode_=", "tail" : "(v: BlendMode): Unit", "member" : "scalafx.scene.Node.blendMode_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#blendMode_=(v:scalafx.scene.effect.BlendMode):Unit", "kind" : "def"}, {"label" : "blendMode", "tail" : "(): ObjectProperty[BlendMode]", "member" : "scalafx.scene.Node.blendMode", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#blendMode:scalafx.beans.property.ObjectProperty[javafx.scene.effect.BlendMode]", "kind" : "def"}, {"label" : "accessibleRoleDescription_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleRoleDescription_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#accessibleRoleDescription_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleRoleDescription", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleRoleDescription", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#accessibleRoleDescription:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "accessibleRole_=", "tail" : "(v: AccessibleRole): Unit", "member" : "scalafx.scene.Node.accessibleRole_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#accessibleRole_=(v:scalafx.scene.AccessibleRole):Unit", "kind" : "def"}, {"label" : "accessibleRole", "tail" : "(): ObjectProperty[AccessibleRole]", "member" : "scalafx.scene.Node.accessibleRole", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#accessibleRole:scalafx.beans.property.ObjectProperty[javafx.scene.AccessibleRole]", "kind" : "def"}, {"label" : "accessibleHelp_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleHelp_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#accessibleHelp_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleHelp", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleHelp", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#accessibleHelp:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "accessibleText_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleText_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#accessibleText_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleText", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleText", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#accessibleText:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "typeSelector", "tail" : "(): String", "member" : "scalafx.css.Styleable.typeSelector", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#typeSelector:String", "kind" : "def"}, {"label" : "styleClass", "tail" : "(): ObservableBuffer[String]", "member" : "scalafx.css.Styleable.styleClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#styleClass:scalafx.collections.ObservableBuffer[String]", "kind" : "def"}, {"label" : "styleableParent", "tail" : "(): Styleable", "member" : "scalafx.css.Styleable.styleableParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#styleableParent:scalafx.css.Styleable", "kind" : "def"}, {"label" : "getStyle", "tail" : "(): String", "member" : "scalafx.css.Styleable.getStyle", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#getStyle:String", "kind" : "def"}, {"label" : "pseudoClassStates", "tail" : "(): ObservableSet[PseudoClass]", "member" : "scalafx.css.Styleable.pseudoClassStates", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#pseudoClassStates:scalafx.collections.ObservableSet[javafx.css.PseudoClass]", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "scalafx.css.Styleable.getId", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#getId:String", "kind" : "def"}, {"label" : "cssMetaData", "tail" : "(): Seq[CssMetaData[_ <: Styleable, _]]", "member" : "scalafx.css.Styleable.cssMetaData", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#cssMetaData:Seq[javafx.css.CssMetaData[_<:javafx.css.Styleable,_]]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scalafx.delegate.SFXDelegate.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(ref: Any): Boolean", "member" : "scalafx.delegate.SFXDelegate.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#equals(ref:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scalafx.delegate.SFXDelegate.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#toString():String", "kind" : "def"}, {"label" : "buildEventDispatchChain", "tail" : "(chain: EventDispatchChain): EventDispatchChain", "member" : "scalafx.event.EventHandlerDelegate.buildEventDispatchChain", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#buildEventDispatchChain(chain:javafx.event.EventDispatchChain):javafx.event.EventDispatchChain", "kind" : "def"}, {"label" : "removeEventFilter", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.removeEventFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#removeEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "filterEvent", "tail" : "(eventType: EventType[J])(filter: FilterMagnet[J, S]): Subscription", "member" : "scalafx.event.EventHandlerDelegate.filterEvent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#filterEvent[J<:javafx.event.Event,S<:scalafx.event.Eventwithscalafx.delegate.SFXDelegate[J]](eventType:scalafx.event.EventType[J])(filter:EventHandlerDelegate.this.FilterMagnet[J,S]):scalafx.event.subscriptions.Subscription", "kind" : "def"}, {"label" : "addEventFilter", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.addEventFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#addEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "removeEventHandler", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.removeEventHandler", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#removeEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "handleEvent", "tail" : "(eventType: EventType[J])(handler: HandlerMagnet[J, S]): Subscription", "member" : "scalafx.event.EventHandlerDelegate.handleEvent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#handleEvent[J<:javafx.event.Event,S<:scalafx.event.Eventwithscalafx.delegate.SFXDelegate[J]](eventType:scalafx.event.EventType[J])(handler:EventHandlerDelegate.this.HandlerMagnet[J,S]):scalafx.event.subscriptions.Subscription", "kind" : "def"}, {"label" : "addEventHandler", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.addEventHandler", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#addEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "EventHandled", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.EventHandled", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#EventHandled=AnyRef{defaddEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defremoveEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defaddEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defremoveEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defbuildEventDispatchChain(chain:javafx.event.EventDispatchChain):javafx.event.EventDispatchChain}", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/GraveyardZone.html", "kind" : "class"}, {"name" : "me.mysterymystery.duelingfactions.api.board.locations.MonsterZone", "shortDescription" : "", "members_class" : [{"label" : "FilterMagnet", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.FilterMagnet", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#FilterMagnet[J<:<?>,S<:<?>]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "HandlerMagnet", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.HandlerMagnet", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#HandlerMagnet[J<:<?>,S<:<?>]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "deoccupy", "tail" : "(): MonsterCard", "member" : "me.mysterymystery.duelingfactions.api.board.locations.MonsterZone.deoccupy", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#deoccupy:me.mysterymystery.duelingfactions.api.card.MonsterCard", "kind" : "def"}, {"label" : "occupy", "tail" : "(card: MonsterCard): Unit", "member" : "me.mysterymystery.duelingfactions.api.board.locations.MonsterZone.occupy", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#occupy(card:me.mysterymystery.duelingfactions.api.card.MonsterCard):Unit", "kind" : "def"}, {"label" : "occupied", "tail" : "(): Boolean", "member" : "me.mysterymystery.duelingfactions.api.board.locations.MonsterZone.occupied", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#occupied:Boolean", "kind" : "def"}, {"member" : "me.mysterymystery.duelingfactions.api.board.locations.MonsterZone#<init>", "error" : "unsupported entity"}, {"label" : "delegate", "tail" : ": StackPane", "member" : "scalafx.scene.layout.StackPane.delegate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#delegate:javafx.scene.layout.StackPane", "kind" : "val"}, {"label" : "alignment_=", "tail" : "(v: Pos): Unit", "member" : "scalafx.delegate.AlignmentDelegate.alignment_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#alignment_=(v:scalafx.geometry.Pos):Unit", "kind" : "def"}, {"label" : "alignment", "tail" : "(): ObjectProperty[Pos]", "member" : "scalafx.delegate.AlignmentDelegate.alignment", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#alignment:scalafx.beans.property.ObjectProperty[javafx.geometry.Pos]", "kind" : "def"}, {"label" : "children_=", "tail" : "(n: Node): Unit", "member" : "scalafx.scene.layout.Pane.children_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#children_=(n:scalafx.scene.Node):Unit", "kind" : "def"}, {"label" : "children_=", "tail" : "(c: Iterable[Node]): Unit", "member" : "scalafx.scene.layout.Pane.children_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#children_=(c:Iterable[scalafx.scene.Node]):Unit", "kind" : "def"}, {"label" : "children", "tail" : "(): ObservableList[Node]", "member" : "scalafx.scene.layout.Pane.children", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#children:javafx.collections.ObservableList[javafx.scene.Node]", "kind" : "def"}, {"label" : "insets", "tail" : "(): Insets", "member" : "scalafx.scene.layout.Region.insets", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#insets:javafx.geometry.Insets", "kind" : "def"}, {"label" : "scaleShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.scaleShape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#scaleShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "scaleShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.scaleShape", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#scaleShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "resize", "tail" : "(width: Double, height: Double): Unit", "member" : "scalafx.scene.layout.Region.resize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#resize(width:Double,height:Double):Unit", "kind" : "def"}, {"label" : "resize", "tail" : "(): Boolean", "member" : "scalafx.scene.layout.Region.resize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#resize:Boolean", "kind" : "def"}, {"label" : "snapToPixel_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.snapToPixel_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#snapToPixel_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "snapToPixel", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.snapToPixel", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#snapToPixel:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "shape_=", "tail" : "(v: Shape): Unit", "member" : "scalafx.scene.layout.Region.shape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#shape_=(v:scalafx.scene.shape.Shape):Unit", "kind" : "def"}, {"label" : "shape", "tail" : "(): ObjectProperty[Shape]", "member" : "scalafx.scene.layout.Region.shape", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#shape:scalafx.beans.property.ObjectProperty[javafx.scene.shape.Shape]", "kind" : "def"}, {"label" : "prefWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.prefWidth_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#prefWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "prefWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.prefWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#prefWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "prefHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.prefHeight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#prefHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "prefHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.prefHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#prefHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "padding_=", "tail" : "(v: Insets): Unit", "member" : "scalafx.scene.layout.Region.padding_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#padding_=(v:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "padding", "tail" : "(): ObjectProperty[Insets]", "member" : "scalafx.scene.layout.Region.padding", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#padding:scalafx.beans.property.ObjectProperty[javafx.geometry.Insets]", "kind" : "def"}, {"label" : "opaqueInsets_=", "tail" : "(v: Insets): Unit", "member" : "scalafx.scene.layout.Region.opaqueInsets_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#opaqueInsets_=(v:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "opaqueInsets", "tail" : "(): ObjectProperty[Insets]", "member" : "scalafx.scene.layout.Region.opaqueInsets", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#opaqueInsets:scalafx.beans.property.ObjectProperty[javafx.geometry.Insets]", "kind" : "def"}, {"label" : "minWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.minWidth_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#minWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "minWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.minWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#minWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "minHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.minHeight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#minHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "minHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.minHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#minHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "maxWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.maxWidth_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#maxWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "maxWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.maxWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#maxWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "maxHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.maxHeight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#maxHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "maxHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.maxHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#maxHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "width", "tail" : "(): ReadOnlyDoubleProperty", "member" : "scalafx.scene.layout.Region.width", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#width:scalafx.beans.property.ReadOnlyDoubleProperty", "kind" : "def"}, {"label" : "height", "tail" : "(): ReadOnlyDoubleProperty", "member" : "scalafx.scene.layout.Region.height", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#height:scalafx.beans.property.ReadOnlyDoubleProperty", "kind" : "def"}, {"label" : "centerShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.centerShape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#centerShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "centerShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.centerShape", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#centerShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "cacheShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.cacheShape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#cacheShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "cacheShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.cacheShape", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#cacheShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "border_=", "tail" : "(v: Border): Unit", "member" : "scalafx.scene.layout.Region.border_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#border_=(v:scalafx.scene.layout.Border):Unit", "kind" : "def"}, {"label" : "border", "tail" : "(): ObjectProperty[Border]", "member" : "scalafx.scene.layout.Region.border", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#border:scalafx.beans.property.ObjectProperty[javafx.scene.layout.Border]", "kind" : "def"}, {"label" : "background_=", "tail" : "(v: Background): Unit", "member" : "scalafx.scene.layout.Region.background_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#background_=(v:scalafx.scene.layout.Background):Unit", "kind" : "def"}, {"label" : "background", "tail" : "(): ObjectProperty[Background]", "member" : "scalafx.scene.layout.Region.background", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#background:scalafx.beans.property.ObjectProperty[javafx.scene.layout.Background]", "kind" : "def"}, {"label" : "stylesheets_=", "tail" : "(c: Iterable[String]): Unit", "member" : "scalafx.scene.Parent.stylesheets_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#stylesheets_=(c:Iterable[String]):Unit", "kind" : "def"}, {"label" : "stylesheets", "tail" : "(): ObservableList[String]", "member" : "scalafx.scene.Parent.stylesheets", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#stylesheets:javafx.collections.ObservableList[String]", "kind" : "def"}, {"label" : "needsLayout", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Parent.needsLayout", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#needsLayout:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "eventHandlerDelegate", "tail" : "(): EventHandled", "member" : "scalafx.scene.Node.eventHandlerDelegate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#eventHandlerDelegate:Node.this.EventHandled", "kind" : "def"}, {"label" : "onTouchStationary_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchStationary_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onTouchStationary_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchStationary", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchStationary", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onTouchStationary:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchReleased_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onTouchReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onTouchReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchPressed_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchPressed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onTouchPressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchPressed", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchPressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onTouchPressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchMoved_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchMoved_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onTouchMoved_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchMoved", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchMoved", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onTouchMoved:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onZoomStarted_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoomStarted_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onZoomStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoomStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoomStarted", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onZoomStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onZoomFinished_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoomFinished_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onZoomFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoomFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoomFinished", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onZoomFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onZoom_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoom_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onZoom_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoom", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoom", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onZoom:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onSwipeRight_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeRight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onSwipeRight_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeRight", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onSwipeRight:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeUp_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeUp_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onSwipeUp_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeUp", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeUp", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onSwipeUp:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeLeft_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeLeft_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onSwipeLeft_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeLeft", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeLeft", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onSwipeLeft:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeDown_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeDown_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onSwipeDown_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeDown", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeDown", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onSwipeDown:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onScrollStarted_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScrollStarted_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onScrollStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScrollStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScrollStarted", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onScrollStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onScrollFinished_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScrollFinished_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onScrollFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScrollFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScrollFinished", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onScrollFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onRotationStarted_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotationStarted_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onRotationStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotationStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotationStarted", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onRotationStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "onRotationFinished_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotationFinished_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onRotationFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotationFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotationFinished", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onRotationFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "onRotate_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotate_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onRotate_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotate", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onRotate:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "localToSceneTransform", "tail" : "(): Transform", "member" : "scalafx.scene.Node.localToSceneTransform", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#localToSceneTransform:scalafx.scene.transform.Transform", "kind" : "def"}, {"label" : "localToParentTransform", "tail" : "(): Transform", "member" : "scalafx.scene.Node.localToParentTransform", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#localToParentTransform:scalafx.scene.transform.Transform", "kind" : "def"}, {"label" : "toFront", "tail" : "(): Unit", "member" : "scalafx.scene.Node.toFront", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#toFront():Unit", "kind" : "def"}, {"label" : "toBack", "tail" : "(): Unit", "member" : "scalafx.scene.Node.toBack", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#toBack():Unit", "kind" : "def"}, {"label" : "startFullDrag", "tail" : "(): Unit", "member" : "scalafx.scene.Node.startFullDrag", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#startFullDrag():Unit", "kind" : "def"}, {"label" : "startDragAndDrop", "tail" : "(transferModes: TransferMode*): Dragboard", "member" : "scalafx.scene.Node.startDragAndDrop", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#startDragAndDrop(transferModes:javafx.scene.input.TransferMode*):javafx.scene.input.Dragboard", "kind" : "def"}, {"label" : "snapshot", "tail" : "(callback: (SnapshotResult) â‡’ Unit, params: SnapshotParameters, image: WritableImage): Unit", "member" : "scalafx.scene.Node.snapshot", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#snapshot(callback:scalafx.scene.SnapshotResult=>Unit,params:scalafx.scene.SnapshotParameters,image:scalafx.scene.image.WritableImage):Unit", "kind" : "def"}, {"label" : "snapshot", "tail" : "(params: SnapshotParameters, image: WritableImage): WritableImage", "member" : "scalafx.scene.Node.snapshot", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#snapshot(params:scalafx.scene.SnapshotParameters,image:scalafx.scene.image.WritableImage):scalafx.scene.image.WritableImage", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(scenePoint: Point2D): Point2D", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#sceneToLocal(scenePoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(sceneX: Double, sceneY: Double): Point2D", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#sceneToLocal(sceneX:Double,sceneY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(sceneBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#sceneToLocal(sceneBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "resizeRelocate", "tail" : "(x: Double, y: Double, width: Double, height: Double): Unit", "member" : "scalafx.scene.Node.resizeRelocate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#resizeRelocate(x:Double,y:Double,width:Double,height:Double):Unit", "kind" : "def"}, {"label" : "requestFocus", "tail" : "(): Unit", "member" : "scalafx.scene.Node.requestFocus", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#requestFocus():Unit", "kind" : "def"}, {"label" : "relocate", "tail" : "(x: Double, y: Double): Unit", "member" : "scalafx.scene.Node.relocate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#relocate(x:Double,y:Double):Unit", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.parentToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#parentToLocal(parentPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentX: Double, parentY: Double): Point2D", "member" : "scalafx.scene.Node.parentToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#parentToLocal(parentX:Double,parentY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.parentToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#parentToLocal(parentBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "minWidth", "tail" : "(height: Double): Double", "member" : "scalafx.scene.Node.minWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#minWidth(height:Double):Double", "kind" : "def"}, {"label" : "minHeight", "tail" : "(width: Double): Double", "member" : "scalafx.scene.Node.minHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#minHeight(width:Double):Double", "kind" : "def"}, {"label" : "maxWidth", "tail" : "(height: Double): Double", "member" : "scalafx.scene.Node.maxWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#maxWidth(height:Double):Double", "kind" : "def"}, {"label" : "maxHeight", "tail" : "(width: Double): Double", "member" : "scalafx.scene.Node.maxHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#maxHeight(width:Double):Double", "kind" : "def"}, {"label" : "lookupAll", "tail" : "(selector: String): Set[Node]", "member" : "scalafx.scene.Node.lookupAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#lookupAll(selector:String):java.util.Set[javafx.scene.Node]", "kind" : "def"}, {"label" : "lookup", "tail" : "(selector: String): Node", "member" : "scalafx.scene.Node.lookup", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#lookup(selector:String):scalafx.scene.Node", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.localToScene", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#localToScene(localPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localX: Double, localY: Double): Point2D", "member" : "scalafx.scene.Node.localToScene", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#localToScene(localX:Double,localY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.localToScene", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#localToScene(localBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.localToParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#localToParent(localPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localX: Double, localY: Double): Point2D", "member" : "scalafx.scene.Node.localToParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#localToParent(localX:Double,localY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.localToParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#localToParent(localBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "intersects", "tail" : "(localX: Double, localY: Double, localWidth: Double, localHeight: Double): Boolean", "member" : "scalafx.scene.Node.intersects", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#intersects(localX:Double,localY:Double,localWidth:Double,localHeight:Double):Boolean", "kind" : "def"}, {"label" : "intersects", "tail" : "(localBounds: Bounds): Boolean", "member" : "scalafx.scene.Node.intersects", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#intersects(localBounds:scalafx.geometry.Bounds):Boolean", "kind" : "def"}, {"label" : "baselineOffset", "tail" : "(): Double", "member" : "scalafx.scene.Node.baselineOffset", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#baselineOffset:Double", "kind" : "def"}, {"label" : "fireEvent", "tail" : "(event: Event): Unit", "member" : "scalafx.scene.Node.fireEvent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#fireEvent(event:scalafx.event.Event):Unit", "kind" : "def"}, {"label" : "contains", "tail" : "(localPoint: Point2D): Boolean", "member" : "scalafx.scene.Node.contains", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#contains(localPoint:scalafx.geometry.Point2D):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(localX: Double, localY: Double): Boolean", "member" : "scalafx.scene.Node.contains", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#contains(localX:Double,localY:Double):Boolean", "kind" : "def"}, {"label" : "autosize", "tail" : "(): Unit", "member" : "scalafx.scene.Node.autosize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#autosize():Unit", "kind" : "def"}, {"label" : "vgrow_=", "tail" : "(p: Priority): Unit", "member" : "scalafx.scene.Node.vgrow_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#vgrow_=(p:scalafx.scene.layout.Priority):Unit", "kind" : "def"}, {"label" : "vgrow", "tail" : "(): Priority", "member" : "scalafx.scene.Node.vgrow", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#vgrow:scalafx.scene.layout.Priority", "kind" : "def"}, {"label" : "hgrow_=", "tail" : "(p: Priority): Unit", "member" : "scalafx.scene.Node.hgrow_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#hgrow_=(p:scalafx.scene.layout.Priority):Unit", "kind" : "def"}, {"label" : "hgrow", "tail" : "(): Priority", "member" : "scalafx.scene.Node.hgrow", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#hgrow:scalafx.scene.layout.Priority", "kind" : "def"}, {"label" : "margin_=", "tail" : "(i: Insets): Unit", "member" : "scalafx.scene.Node.margin_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#margin_=(i:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "margin", "tail" : "(): Insets", "member" : "scalafx.scene.Node.margin", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#margin:scalafx.geometry.Insets", "kind" : "def"}, {"label" : "alignmentInParent_=", "tail" : "(p: Pos): Unit", "member" : "scalafx.scene.Node.alignmentInParent_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#alignmentInParent_=(p:scalafx.geometry.Pos):Unit", "kind" : "def"}, {"label" : "alignmentInParent", "tail" : "(): Pos", "member" : "scalafx.scene.Node.alignmentInParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#alignmentInParent:scalafx.geometry.Pos", "kind" : "def"}, {"label" : "visible_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.visible_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#visible_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "visible", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.visible", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#visible:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "userData_=", "tail" : "(v: AnyRef): Unit", "member" : "scalafx.scene.Node.userData_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#userData_=(v:AnyRef):Unit", "kind" : "def"}, {"label" : "userData", "tail" : "(): AnyRef", "member" : "scalafx.scene.Node.userData", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#userData:Object", "kind" : "def"}, {"label" : "translateZ_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateZ_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#translateZ_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateZ", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateZ", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#translateZ:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "translateY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateY_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#translateY_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateY", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#translateY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "translateX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateX_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#translateX_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateX", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#translateX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "transforms_=", "tail" : "(c: Iterable[Transform]): Unit", "member" : "scalafx.scene.Node.transforms_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#transforms_=(c:Iterable[scalafx.scene.transform.Transform]):Unit", "kind" : "def"}, {"label" : "transforms", "tail" : "(): ObservableList[Transform]", "member" : "scalafx.scene.Node.transforms", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#transforms:javafx.collections.ObservableList[javafx.scene.transform.Transform]", "kind" : "def"}, {"label" : "styleClass_=", "tail" : "(c: Iterable[String]): Unit", "member" : "scalafx.scene.Node.styleClass_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#styleClass_=(c:Iterable[String]):Unit", "kind" : "def"}, {"label" : "style_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.style_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#style_=(v:String):Unit", "kind" : "def"}, {"label" : "style", "tail" : "(): StringProperty", "member" : "scalafx.scene.Node.style", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#style:scalafx.beans.property.StringProperty", "kind" : "def"}, {"label" : "scene", "tail" : "(): ReadOnlyObjectProperty[Scene]", "member" : "scalafx.scene.Node.scene", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#scene:scalafx.beans.property.ReadOnlyObjectProperty[javafx.scene.Scene]", "kind" : "def"}, {"label" : "scaleZ_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleZ_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#scaleZ_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleZ", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleZ", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#scaleZ:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "scaleY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleY_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#scaleY_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleY", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#scaleY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "scaleX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleX_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#scaleX_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleX", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#scaleX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "rotationAxis_=", "tail" : "(v: Point3D): Unit", "member" : "scalafx.scene.Node.rotationAxis_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#rotationAxis_=(v:scalafx.geometry.Point3D):Unit", "kind" : "def"}, {"label" : "rotationAxis", "tail" : "(): ObjectProperty[Point3D]", "member" : "scalafx.scene.Node.rotationAxis", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#rotationAxis:scalafx.beans.property.ObjectProperty[javafx.geometry.Point3D]", "kind" : "def"}, {"label" : "rotate_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.rotate_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#rotate_=(v:Double):Unit", "kind" : "def"}, {"label" : "rotate", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.rotate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#rotate:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "pressed", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.pressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#pressed:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "pickOnBounds_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.pickOnBounds_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#pickOnBounds_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "pickOnBounds", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.pickOnBounds", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#pickOnBounds:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "parent", "tail" : "(): ReadOnlyObjectProperty[Parent]", "member" : "scalafx.scene.Node.parent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#parent:scalafx.beans.property.ReadOnlyObjectProperty[javafx.scene.Parent]", "kind" : "def"}, {"label" : "opacity_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.opacity_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#opacity_=(v:Double):Unit", "kind" : "def"}, {"label" : "opacity", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.opacity", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#opacity:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "onScroll_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScroll_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onScroll_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScroll", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScroll", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onScroll:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onMouseReleased_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMouseReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMouseReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMousePressed_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMousePressed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMousePressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMousePressed", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMousePressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMousePressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseMoved_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseMoved_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMouseMoved_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseMoved", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseMoved", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMouseMoved:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseExited_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseExited_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMouseExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseExited", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseExited", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMouseExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseEntered_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseEntered_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMouseEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseEntered", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMouseEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseDragReleased_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMouseDragReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMouseDragReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragOver_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragOver_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMouseDragOver_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragOver", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragOver", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMouseDragOver:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragExited_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragExited_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMouseDragExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragExited", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragExited", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMouseDragExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragEntered_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragEntered_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMouseDragEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragEntered", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMouseDragEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragged_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragged_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMouseDragged_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragged", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseDragged", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMouseDragged:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseClicked_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseClicked_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMouseClicked_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseClicked", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseClicked", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onMouseClicked:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onKeyTyped_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyTyped_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onKeyTyped_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyTyped", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyTyped", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onKeyTyped:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onKeyReleased_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onKeyReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onKeyReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onKeyPressed_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyPressed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onKeyPressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyPressed", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyPressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onKeyPressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onInputMethodTextChanged_=", "tail" : "(v: EventHandler[_ >: InputMethodEvent]): Unit", "member" : "scalafx.scene.Node.onInputMethodTextChanged_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onInputMethodTextChanged_=(v:javafx.event.EventHandler[_>:javafx.scene.input.InputMethodEvent]):Unit", "kind" : "def"}, {"label" : "onInputMethodTextChanged", "tail" : "(): ObjectProperty[EventHandler[_ >: InputMethodEvent]]", "member" : "scalafx.scene.Node.onInputMethodTextChanged", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onInputMethodTextChanged:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.InputMethodEvent]]", "kind" : "def"}, {"label" : "onDragOver_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragOver_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onDragOver_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragOver", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragOver", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onDragOver:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragExited_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragExited_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onDragExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragExited", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragExited", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onDragExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragEntered_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragEntered_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onDragEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragEntered", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onDragEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDropped_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragDropped_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onDragDropped_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragDropped", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragDropped", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onDragDropped:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDone_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragDone_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onDragDone_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragDone", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragDone", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onDragDone:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDetected_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onDragDetected_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onDragDetected_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onDragDetected", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onDragDetected", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onDragDetected:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onContextMenuRequested_=", "tail" : "(v: EventHandler[_ >: ContextMenuEvent]): Unit", "member" : "scalafx.scene.Node.onContextMenuRequested_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onContextMenuRequested_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ContextMenuEvent]):Unit", "kind" : "def"}, {"label" : "onContextMenuRequested", "tail" : "(): ObjectProperty[EventHandler[_ >: ContextMenuEvent]]", "member" : "scalafx.scene.Node.onContextMenuRequested", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#onContextMenuRequested:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ContextMenuEvent]]", "kind" : "def"}, {"label" : "effectiveNodeOrientation", "tail" : "(): ReadOnlyObjectProperty[NodeOrientation]", "member" : "scalafx.scene.Node.effectiveNodeOrientation", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#effectiveNodeOrientation:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.NodeOrientation]", "kind" : "def"}, {"label" : "nodeOrientation_=", "tail" : "(v: NodeOrientation): Unit", "member" : "scalafx.scene.Node.nodeOrientation_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#nodeOrientation_=(v:scalafx.geometry.NodeOrientation):Unit", "kind" : "def"}, {"label" : "nodeOrientation", "tail" : "(): ObjectProperty[NodeOrientation]", "member" : "scalafx.scene.Node.nodeOrientation", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#nodeOrientation:scalafx.beans.property.ObjectProperty[javafx.geometry.NodeOrientation]", "kind" : "def"}, {"label" : "mouseTransparent_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.mouseTransparent_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#mouseTransparent_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "mouseTransparent", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.mouseTransparent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#mouseTransparent:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "managed_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.managed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#managed_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "managed", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.managed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#managed:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "layoutY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.layoutY_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#layoutY_=(v:Double):Unit", "kind" : "def"}, {"label" : "layoutY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.layoutY", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#layoutY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "layoutX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.layoutX_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#layoutX_=(v:Double):Unit", "kind" : "def"}, {"label" : "layoutX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.layoutX", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#layoutX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "layoutBounds", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.layoutBounds", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#layoutBounds:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "inputMethodRequests_=", "tail" : "(v: InputMethodRequests): Unit", "member" : "scalafx.scene.Node.inputMethodRequests_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#inputMethodRequests_=(v:javafx.scene.input.InputMethodRequests):Unit", "kind" : "def"}, {"label" : "inputMethodRequests", "tail" : "(): ObjectProperty[InputMethodRequests]", "member" : "scalafx.scene.Node.inputMethodRequests", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#inputMethodRequests:scalafx.beans.property.ObjectProperty[javafx.scene.input.InputMethodRequests]", "kind" : "def"}, {"label" : "id_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.id_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#id_=(v:String):Unit", "kind" : "def"}, {"label" : "id", "tail" : "(): StringProperty", "member" : "scalafx.scene.Node.id", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#id:scalafx.beans.property.StringProperty", "kind" : "def"}, {"label" : "hover", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.hover", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#hover:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "focusTraversable_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.focusTraversable_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#focusTraversable_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "focusTraversable", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.focusTraversable", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#focusTraversable:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "focused", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.focused", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#focused:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "eventDispatcher_=", "tail" : "(v: EventDispatcher): Unit", "member" : "scalafx.scene.Node.eventDispatcher_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#eventDispatcher_=(v:javafx.event.EventDispatcher):Unit", "kind" : "def"}, {"label" : "eventDispatcher", "tail" : "(): ObjectProperty[EventDispatcher]", "member" : "scalafx.scene.Node.eventDispatcher", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#eventDispatcher:scalafx.beans.property.ObjectProperty[javafx.event.EventDispatcher]", "kind" : "def"}, {"label" : "effect_=", "tail" : "(v: Effect): Unit", "member" : "scalafx.scene.Node.effect_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#effect_=(v:scalafx.scene.effect.Effect):Unit", "kind" : "def"}, {"label" : "effect", "tail" : "(): ObjectProperty[Effect]", "member" : "scalafx.scene.Node.effect", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#effect:scalafx.beans.property.ObjectProperty[javafx.scene.effect.Effect]", "kind" : "def"}, {"label" : "disable_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.disable_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#disable_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "disable", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.disable", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#disable:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "disabled", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.disabled", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#disabled:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "depthTest_=", "tail" : "(v: DepthTest): Unit", "member" : "scalafx.scene.Node.depthTest_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#depthTest_=(v:scalafx.scene.DepthTest):Unit", "kind" : "def"}, {"label" : "depthTest", "tail" : "(): ObjectProperty[DepthTest]", "member" : "scalafx.scene.Node.depthTest", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#depthTest:scalafx.beans.property.ObjectProperty[javafx.scene.DepthTest]", "kind" : "def"}, {"label" : "cursor_=", "tail" : "(v: Cursor): Unit", "member" : "scalafx.scene.Node.cursor_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#cursor_=(v:scalafx.scene.Cursor):Unit", "kind" : "def"}, {"label" : "cursor", "tail" : "(): ObjectProperty[Cursor]", "member" : "scalafx.scene.Node.cursor", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#cursor:scalafx.beans.property.ObjectProperty[javafx.scene.Cursor]", "kind" : "def"}, {"label" : "contentBias", "tail" : "(): Orientation", "member" : "scalafx.scene.Node.contentBias", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#contentBias:scalafx.geometry.Orientation", "kind" : "def"}, {"label" : "clip_=", "tail" : "(v: Node): Unit", "member" : "scalafx.scene.Node.clip_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#clip_=(v:scalafx.scene.Node):Unit", "kind" : "def"}, {"label" : "clip", "tail" : "(): ObjectProperty[Node]", "member" : "scalafx.scene.Node.clip", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#clip:scalafx.beans.property.ObjectProperty[javafx.scene.Node]", "kind" : "def"}, {"label" : "cache_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.cache_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#cache_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "cache", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.cache", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#cache:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "cacheHint_=", "tail" : "(v: CacheHint): Unit", "member" : "scalafx.scene.Node.cacheHint_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#cacheHint_=(v:scalafx.scene.CacheHint):Unit", "kind" : "def"}, {"label" : "cacheHint", "tail" : "(): ObjectProperty[CacheHint]", "member" : "scalafx.scene.Node.cacheHint", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#cacheHint:scalafx.beans.property.ObjectProperty[javafx.scene.CacheHint]", "kind" : "def"}, {"label" : "boundsInParent", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.boundsInParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#boundsInParent:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "boundsInLocal", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.boundsInLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#boundsInLocal:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "blendMode_=", "tail" : "(v: BlendMode): Unit", "member" : "scalafx.scene.Node.blendMode_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#blendMode_=(v:scalafx.scene.effect.BlendMode):Unit", "kind" : "def"}, {"label" : "blendMode", "tail" : "(): ObjectProperty[BlendMode]", "member" : "scalafx.scene.Node.blendMode", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#blendMode:scalafx.beans.property.ObjectProperty[javafx.scene.effect.BlendMode]", "kind" : "def"}, {"label" : "accessibleRoleDescription_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleRoleDescription_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#accessibleRoleDescription_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleRoleDescription", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleRoleDescription", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#accessibleRoleDescription:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "accessibleRole_=", "tail" : "(v: AccessibleRole): Unit", "member" : "scalafx.scene.Node.accessibleRole_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#accessibleRole_=(v:scalafx.scene.AccessibleRole):Unit", "kind" : "def"}, {"label" : "accessibleRole", "tail" : "(): ObjectProperty[AccessibleRole]", "member" : "scalafx.scene.Node.accessibleRole", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#accessibleRole:scalafx.beans.property.ObjectProperty[javafx.scene.AccessibleRole]", "kind" : "def"}, {"label" : "accessibleHelp_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleHelp_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#accessibleHelp_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleHelp", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleHelp", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#accessibleHelp:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "accessibleText_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleText_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#accessibleText_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleText", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleText", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#accessibleText:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "typeSelector", "tail" : "(): String", "member" : "scalafx.css.Styleable.typeSelector", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#typeSelector:String", "kind" : "def"}, {"label" : "styleClass", "tail" : "(): ObservableBuffer[String]", "member" : "scalafx.css.Styleable.styleClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#styleClass:scalafx.collections.ObservableBuffer[String]", "kind" : "def"}, {"label" : "styleableParent", "tail" : "(): Styleable", "member" : "scalafx.css.Styleable.styleableParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#styleableParent:scalafx.css.Styleable", "kind" : "def"}, {"label" : "getStyle", "tail" : "(): String", "member" : "scalafx.css.Styleable.getStyle", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#getStyle:String", "kind" : "def"}, {"label" : "pseudoClassStates", "tail" : "(): ObservableSet[PseudoClass]", "member" : "scalafx.css.Styleable.pseudoClassStates", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#pseudoClassStates:scalafx.collections.ObservableSet[javafx.css.PseudoClass]", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "scalafx.css.Styleable.getId", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#getId:String", "kind" : "def"}, {"label" : "cssMetaData", "tail" : "(): Seq[CssMetaData[_ <: Styleable, _]]", "member" : "scalafx.css.Styleable.cssMetaData", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#cssMetaData:Seq[javafx.css.CssMetaData[_<:javafx.css.Styleable,_]]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scalafx.delegate.SFXDelegate.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(ref: Any): Boolean", "member" : "scalafx.delegate.SFXDelegate.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#equals(ref:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scalafx.delegate.SFXDelegate.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#toString():String", "kind" : "def"}, {"label" : "buildEventDispatchChain", "tail" : "(chain: EventDispatchChain): EventDispatchChain", "member" : "scalafx.event.EventHandlerDelegate.buildEventDispatchChain", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#buildEventDispatchChain(chain:javafx.event.EventDispatchChain):javafx.event.EventDispatchChain", "kind" : "def"}, {"label" : "removeEventFilter", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.removeEventFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#removeEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "filterEvent", "tail" : "(eventType: EventType[J])(filter: FilterMagnet[J, S]): Subscription", "member" : "scalafx.event.EventHandlerDelegate.filterEvent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#filterEvent[J<:javafx.event.Event,S<:scalafx.event.Eventwithscalafx.delegate.SFXDelegate[J]](eventType:scalafx.event.EventType[J])(filter:EventHandlerDelegate.this.FilterMagnet[J,S]):scalafx.event.subscriptions.Subscription", "kind" : "def"}, {"label" : "addEventFilter", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.addEventFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#addEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "removeEventHandler", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.removeEventHandler", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#removeEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "handleEvent", "tail" : "(eventType: EventType[J])(handler: HandlerMagnet[J, S]): Subscription", "member" : "scalafx.event.EventHandlerDelegate.handleEvent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#handleEvent[J<:javafx.event.Event,S<:scalafx.event.Eventwithscalafx.delegate.SFXDelegate[J]](eventType:scalafx.event.EventType[J])(handler:EventHandlerDelegate.this.HandlerMagnet[J,S]):scalafx.event.subscriptions.Subscription", "kind" : "def"}, {"label" : "addEventHandler", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.addEventHandler", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#addEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "EventHandled", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.EventHandled", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#EventHandled=AnyRef{defaddEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defremoveEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defaddEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defremoveEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defbuildEventDispatchChain(chain:javafx.event.EventDispatchChain):javafx.event.EventDispatchChain}", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/MonsterZone.html", "kind" : "class"}, {"name" : "me.mysterymystery.duelingfactions.api.board.locations.SpellTrapZone", "shortDescription" : "", "members_class" : [{"label" : "FilterMagnet", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.FilterMagnet", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#FilterMagnet[J<:<?>,S<:<?>]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "HandlerMagnet", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.HandlerMagnet", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#HandlerMagnet[J<:<?>,S<:<?>]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "deoccupy", "tail" : "(): SpellOrTrapCard", "member" : "me.mysterymystery.duelingfactions.api.board.locations.SpellTrapZone.deoccupy", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#deoccupy:me.mysterymystery.duelingfactions.api.card.SpellOrTrapCard", "kind" : "def"}, {"label" : "occupy", "tail" : "(card: SpellOrTrapCard): Unit", "member" : "me.mysterymystery.duelingfactions.api.board.locations.SpellTrapZone.occupy", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#occupy(card:me.mysterymystery.duelingfactions.api.card.SpellOrTrapCard):Unit", "kind" : "def"}, {"label" : "occupied", "tail" : "(): Boolean", "member" : "me.mysterymystery.duelingfactions.api.board.locations.SpellTrapZone.occupied", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#occupied:Boolean", "kind" : "def"}, {"member" : "me.mysterymystery.duelingfactions.api.board.locations.SpellTrapZone#<init>", "error" : "unsupported entity"}, {"label" : "delegate", "tail" : ": StackPane", "member" : "scalafx.scene.layout.StackPane.delegate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#delegate:javafx.scene.layout.StackPane", "kind" : "val"}, {"label" : "alignment_=", "tail" : "(v: Pos): Unit", "member" : "scalafx.delegate.AlignmentDelegate.alignment_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#alignment_=(v:scalafx.geometry.Pos):Unit", "kind" : "def"}, {"label" : "alignment", "tail" : "(): ObjectProperty[Pos]", "member" : "scalafx.delegate.AlignmentDelegate.alignment", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#alignment:scalafx.beans.property.ObjectProperty[javafx.geometry.Pos]", "kind" : "def"}, {"label" : "children_=", "tail" : "(n: Node): Unit", "member" : "scalafx.scene.layout.Pane.children_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#children_=(n:scalafx.scene.Node):Unit", "kind" : "def"}, {"label" : "children_=", "tail" : "(c: Iterable[Node]): Unit", "member" : "scalafx.scene.layout.Pane.children_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#children_=(c:Iterable[scalafx.scene.Node]):Unit", "kind" : "def"}, {"label" : "children", "tail" : "(): ObservableList[Node]", "member" : "scalafx.scene.layout.Pane.children", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#children:javafx.collections.ObservableList[javafx.scene.Node]", "kind" : "def"}, {"label" : "insets", "tail" : "(): Insets", "member" : "scalafx.scene.layout.Region.insets", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#insets:javafx.geometry.Insets", "kind" : "def"}, {"label" : "scaleShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.scaleShape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#scaleShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "scaleShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.scaleShape", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#scaleShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "resize", "tail" : "(width: Double, height: Double): Unit", "member" : "scalafx.scene.layout.Region.resize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#resize(width:Double,height:Double):Unit", "kind" : "def"}, {"label" : "resize", "tail" : "(): Boolean", "member" : "scalafx.scene.layout.Region.resize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#resize:Boolean", "kind" : "def"}, {"label" : "snapToPixel_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.snapToPixel_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#snapToPixel_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "snapToPixel", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.snapToPixel", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#snapToPixel:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "shape_=", "tail" : "(v: Shape): Unit", "member" : "scalafx.scene.layout.Region.shape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#shape_=(v:scalafx.scene.shape.Shape):Unit", "kind" : "def"}, {"label" : "shape", "tail" : "(): ObjectProperty[Shape]", "member" : "scalafx.scene.layout.Region.shape", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#shape:scalafx.beans.property.ObjectProperty[javafx.scene.shape.Shape]", "kind" : "def"}, {"label" : "prefWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.prefWidth_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#prefWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "prefWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.prefWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#prefWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "prefHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.prefHeight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#prefHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "prefHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.prefHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#prefHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "padding_=", "tail" : "(v: Insets): Unit", "member" : "scalafx.scene.layout.Region.padding_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#padding_=(v:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "padding", "tail" : "(): ObjectProperty[Insets]", "member" : "scalafx.scene.layout.Region.padding", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#padding:scalafx.beans.property.ObjectProperty[javafx.geometry.Insets]", "kind" : "def"}, {"label" : "opaqueInsets_=", "tail" : "(v: Insets): Unit", "member" : "scalafx.scene.layout.Region.opaqueInsets_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#opaqueInsets_=(v:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "opaqueInsets", "tail" : "(): ObjectProperty[Insets]", "member" : "scalafx.scene.layout.Region.opaqueInsets", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#opaqueInsets:scalafx.beans.property.ObjectProperty[javafx.geometry.Insets]", "kind" : "def"}, {"label" : "minWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.minWidth_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#minWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "minWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.minWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#minWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "minHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.minHeight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#minHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "minHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.minHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#minHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "maxWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.maxWidth_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#maxWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "maxWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.maxWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#maxWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "maxHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.maxHeight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#maxHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "maxHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.maxHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#maxHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "width", "tail" : "(): ReadOnlyDoubleProperty", "member" : "scalafx.scene.layout.Region.width", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#width:scalafx.beans.property.ReadOnlyDoubleProperty", "kind" : "def"}, {"label" : "height", "tail" : "(): ReadOnlyDoubleProperty", "member" : "scalafx.scene.layout.Region.height", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#height:scalafx.beans.property.ReadOnlyDoubleProperty", "kind" : "def"}, {"label" : "centerShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.centerShape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#centerShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "centerShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.centerShape", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#centerShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "cacheShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.cacheShape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#cacheShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "cacheShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.cacheShape", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#cacheShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "border_=", "tail" : "(v: Border): Unit", "member" : "scalafx.scene.layout.Region.border_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#border_=(v:scalafx.scene.layout.Border):Unit", "kind" : "def"}, {"label" : "border", "tail" : "(): ObjectProperty[Border]", "member" : "scalafx.scene.layout.Region.border", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#border:scalafx.beans.property.ObjectProperty[javafx.scene.layout.Border]", "kind" : "def"}, {"label" : "background_=", "tail" : "(v: Background): Unit", "member" : "scalafx.scene.layout.Region.background_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#background_=(v:scalafx.scene.layout.Background):Unit", "kind" : "def"}, {"label" : "background", "tail" : "(): ObjectProperty[Background]", "member" : "scalafx.scene.layout.Region.background", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#background:scalafx.beans.property.ObjectProperty[javafx.scene.layout.Background]", "kind" : "def"}, {"label" : "stylesheets_=", "tail" : "(c: Iterable[String]): Unit", "member" : "scalafx.scene.Parent.stylesheets_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#stylesheets_=(c:Iterable[String]):Unit", "kind" : "def"}, {"label" : "stylesheets", "tail" : "(): ObservableList[String]", "member" : "scalafx.scene.Parent.stylesheets", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#stylesheets:javafx.collections.ObservableList[String]", "kind" : "def"}, {"label" : "needsLayout", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Parent.needsLayout", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#needsLayout:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "eventHandlerDelegate", "tail" : "(): EventHandled", "member" : "scalafx.scene.Node.eventHandlerDelegate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#eventHandlerDelegate:Node.this.EventHandled", "kind" : "def"}, {"label" : "onTouchStationary_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchStationary_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onTouchStationary_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchStationary", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchStationary", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onTouchStationary:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchReleased_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onTouchReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onTouchReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchPressed_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchPressed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onTouchPressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchPressed", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchPressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onTouchPressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchMoved_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchMoved_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onTouchMoved_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchMoved", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchMoved", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onTouchMoved:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onZoomStarted_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoomStarted_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onZoomStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoomStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoomStarted", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onZoomStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onZoomFinished_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoomFinished_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onZoomFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoomFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoomFinished", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onZoomFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onZoom_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoom_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onZoom_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoom", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoom", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onZoom:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onSwipeRight_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeRight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onSwipeRight_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeRight", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onSwipeRight:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeUp_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeUp_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onSwipeUp_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeUp", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeUp", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onSwipeUp:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeLeft_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeLeft_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onSwipeLeft_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeLeft", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeLeft", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onSwipeLeft:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeDown_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeDown_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onSwipeDown_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeDown", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeDown", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onSwipeDown:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onScrollStarted_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScrollStarted_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onScrollStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScrollStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScrollStarted", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onScrollStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onScrollFinished_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScrollFinished_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onScrollFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScrollFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScrollFinished", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onScrollFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onRotationStarted_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotationStarted_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onRotationStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotationStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotationStarted", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onRotationStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "onRotationFinished_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotationFinished_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onRotationFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotationFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotationFinished", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onRotationFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "onRotate_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotate_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onRotate_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotate", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onRotate:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "localToSceneTransform", "tail" : "(): Transform", "member" : "scalafx.scene.Node.localToSceneTransform", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#localToSceneTransform:scalafx.scene.transform.Transform", "kind" : "def"}, {"label" : "localToParentTransform", "tail" : "(): Transform", "member" : "scalafx.scene.Node.localToParentTransform", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#localToParentTransform:scalafx.scene.transform.Transform", "kind" : "def"}, {"label" : "toFront", "tail" : "(): Unit", "member" : "scalafx.scene.Node.toFront", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#toFront():Unit", "kind" : "def"}, {"label" : "toBack", "tail" : "(): Unit", "member" : "scalafx.scene.Node.toBack", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#toBack():Unit", "kind" : "def"}, {"label" : "startFullDrag", "tail" : "(): Unit", "member" : "scalafx.scene.Node.startFullDrag", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#startFullDrag():Unit", "kind" : "def"}, {"label" : "startDragAndDrop", "tail" : "(transferModes: TransferMode*): Dragboard", "member" : "scalafx.scene.Node.startDragAndDrop", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#startDragAndDrop(transferModes:javafx.scene.input.TransferMode*):javafx.scene.input.Dragboard", "kind" : "def"}, {"label" : "snapshot", "tail" : "(callback: (SnapshotResult) â‡’ Unit, params: SnapshotParameters, image: WritableImage): Unit", "member" : "scalafx.scene.Node.snapshot", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#snapshot(callback:scalafx.scene.SnapshotResult=>Unit,params:scalafx.scene.SnapshotParameters,image:scalafx.scene.image.WritableImage):Unit", "kind" : "def"}, {"label" : "snapshot", "tail" : "(params: SnapshotParameters, image: WritableImage): WritableImage", "member" : "scalafx.scene.Node.snapshot", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#snapshot(params:scalafx.scene.SnapshotParameters,image:scalafx.scene.image.WritableImage):scalafx.scene.image.WritableImage", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(scenePoint: Point2D): Point2D", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#sceneToLocal(scenePoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(sceneX: Double, sceneY: Double): Point2D", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#sceneToLocal(sceneX:Double,sceneY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(sceneBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#sceneToLocal(sceneBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "resizeRelocate", "tail" : "(x: Double, y: Double, width: Double, height: Double): Unit", "member" : "scalafx.scene.Node.resizeRelocate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#resizeRelocate(x:Double,y:Double,width:Double,height:Double):Unit", "kind" : "def"}, {"label" : "requestFocus", "tail" : "(): Unit", "member" : "scalafx.scene.Node.requestFocus", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#requestFocus():Unit", "kind" : "def"}, {"label" : "relocate", "tail" : "(x: Double, y: Double): Unit", "member" : "scalafx.scene.Node.relocate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#relocate(x:Double,y:Double):Unit", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.parentToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#parentToLocal(parentPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentX: Double, parentY: Double): Point2D", "member" : "scalafx.scene.Node.parentToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#parentToLocal(parentX:Double,parentY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.parentToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#parentToLocal(parentBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "minWidth", "tail" : "(height: Double): Double", "member" : "scalafx.scene.Node.minWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#minWidth(height:Double):Double", "kind" : "def"}, {"label" : "minHeight", "tail" : "(width: Double): Double", "member" : "scalafx.scene.Node.minHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#minHeight(width:Double):Double", "kind" : "def"}, {"label" : "maxWidth", "tail" : "(height: Double): Double", "member" : "scalafx.scene.Node.maxWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#maxWidth(height:Double):Double", "kind" : "def"}, {"label" : "maxHeight", "tail" : "(width: Double): Double", "member" : "scalafx.scene.Node.maxHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#maxHeight(width:Double):Double", "kind" : "def"}, {"label" : "lookupAll", "tail" : "(selector: String): Set[Node]", "member" : "scalafx.scene.Node.lookupAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#lookupAll(selector:String):java.util.Set[javafx.scene.Node]", "kind" : "def"}, {"label" : "lookup", "tail" : "(selector: String): Node", "member" : "scalafx.scene.Node.lookup", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#lookup(selector:String):scalafx.scene.Node", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.localToScene", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#localToScene(localPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localX: Double, localY: Double): Point2D", "member" : "scalafx.scene.Node.localToScene", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#localToScene(localX:Double,localY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.localToScene", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#localToScene(localBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.localToParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#localToParent(localPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localX: Double, localY: Double): Point2D", "member" : "scalafx.scene.Node.localToParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#localToParent(localX:Double,localY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.localToParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#localToParent(localBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "intersects", "tail" : "(localX: Double, localY: Double, localWidth: Double, localHeight: Double): Boolean", "member" : "scalafx.scene.Node.intersects", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#intersects(localX:Double,localY:Double,localWidth:Double,localHeight:Double):Boolean", "kind" : "def"}, {"label" : "intersects", "tail" : "(localBounds: Bounds): Boolean", "member" : "scalafx.scene.Node.intersects", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#intersects(localBounds:scalafx.geometry.Bounds):Boolean", "kind" : "def"}, {"label" : "baselineOffset", "tail" : "(): Double", "member" : "scalafx.scene.Node.baselineOffset", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#baselineOffset:Double", "kind" : "def"}, {"label" : "fireEvent", "tail" : "(event: Event): Unit", "member" : "scalafx.scene.Node.fireEvent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#fireEvent(event:scalafx.event.Event):Unit", "kind" : "def"}, {"label" : "contains", "tail" : "(localPoint: Point2D): Boolean", "member" : "scalafx.scene.Node.contains", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#contains(localPoint:scalafx.geometry.Point2D):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(localX: Double, localY: Double): Boolean", "member" : "scalafx.scene.Node.contains", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#contains(localX:Double,localY:Double):Boolean", "kind" : "def"}, {"label" : "autosize", "tail" : "(): Unit", "member" : "scalafx.scene.Node.autosize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#autosize():Unit", "kind" : "def"}, {"label" : "vgrow_=", "tail" : "(p: Priority): Unit", "member" : "scalafx.scene.Node.vgrow_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#vgrow_=(p:scalafx.scene.layout.Priority):Unit", "kind" : "def"}, {"label" : "vgrow", "tail" : "(): Priority", "member" : "scalafx.scene.Node.vgrow", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#vgrow:scalafx.scene.layout.Priority", "kind" : "def"}, {"label" : "hgrow_=", "tail" : "(p: Priority): Unit", "member" : "scalafx.scene.Node.hgrow_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#hgrow_=(p:scalafx.scene.layout.Priority):Unit", "kind" : "def"}, {"label" : "hgrow", "tail" : "(): Priority", "member" : "scalafx.scene.Node.hgrow", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#hgrow:scalafx.scene.layout.Priority", "kind" : "def"}, {"label" : "margin_=", "tail" : "(i: Insets): Unit", "member" : "scalafx.scene.Node.margin_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#margin_=(i:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "margin", "tail" : "(): Insets", "member" : "scalafx.scene.Node.margin", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#margin:scalafx.geometry.Insets", "kind" : "def"}, {"label" : "alignmentInParent_=", "tail" : "(p: Pos): Unit", "member" : "scalafx.scene.Node.alignmentInParent_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#alignmentInParent_=(p:scalafx.geometry.Pos):Unit", "kind" : "def"}, {"label" : "alignmentInParent", "tail" : "(): Pos", "member" : "scalafx.scene.Node.alignmentInParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#alignmentInParent:scalafx.geometry.Pos", "kind" : "def"}, {"label" : "visible_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.visible_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#visible_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "visible", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.visible", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#visible:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "userData_=", "tail" : "(v: AnyRef): Unit", "member" : "scalafx.scene.Node.userData_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#userData_=(v:AnyRef):Unit", "kind" : "def"}, {"label" : "userData", "tail" : "(): AnyRef", "member" : "scalafx.scene.Node.userData", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#userData:Object", "kind" : "def"}, {"label" : "translateZ_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateZ_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#translateZ_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateZ", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateZ", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#translateZ:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "translateY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateY_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#translateY_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateY", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#translateY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "translateX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateX_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#translateX_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateX", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#translateX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "transforms_=", "tail" : "(c: Iterable[Transform]): Unit", "member" : "scalafx.scene.Node.transforms_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#transforms_=(c:Iterable[scalafx.scene.transform.Transform]):Unit", "kind" : "def"}, {"label" : "transforms", "tail" : "(): ObservableList[Transform]", "member" : "scalafx.scene.Node.transforms", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#transforms:javafx.collections.ObservableList[javafx.scene.transform.Transform]", "kind" : "def"}, {"label" : "styleClass_=", "tail" : "(c: Iterable[String]): Unit", "member" : "scalafx.scene.Node.styleClass_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#styleClass_=(c:Iterable[String]):Unit", "kind" : "def"}, {"label" : "style_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.style_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#style_=(v:String):Unit", "kind" : "def"}, {"label" : "style", "tail" : "(): StringProperty", "member" : "scalafx.scene.Node.style", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#style:scalafx.beans.property.StringProperty", "kind" : "def"}, {"label" : "scene", "tail" : "(): ReadOnlyObjectProperty[Scene]", "member" : "scalafx.scene.Node.scene", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#scene:scalafx.beans.property.ReadOnlyObjectProperty[javafx.scene.Scene]", "kind" : "def"}, {"label" : "scaleZ_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleZ_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#scaleZ_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleZ", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleZ", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#scaleZ:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "scaleY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleY_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#scaleY_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleY", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#scaleY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "scaleX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleX_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#scaleX_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleX", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#scaleX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "rotationAxis_=", "tail" : "(v: Point3D): Unit", "member" : "scalafx.scene.Node.rotationAxis_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#rotationAxis_=(v:scalafx.geometry.Point3D):Unit", "kind" : "def"}, {"label" : "rotationAxis", "tail" : "(): ObjectProperty[Point3D]", "member" : "scalafx.scene.Node.rotationAxis", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#rotationAxis:scalafx.beans.property.ObjectProperty[javafx.geometry.Point3D]", "kind" : "def"}, {"label" : "rotate_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.rotate_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#rotate_=(v:Double):Unit", "kind" : "def"}, {"label" : "rotate", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.rotate", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#rotate:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "pressed", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.pressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#pressed:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "pickOnBounds_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.pickOnBounds_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#pickOnBounds_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "pickOnBounds", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.pickOnBounds", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#pickOnBounds:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "parent", "tail" : "(): ReadOnlyObjectProperty[Parent]", "member" : "scalafx.scene.Node.parent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#parent:scalafx.beans.property.ReadOnlyObjectProperty[javafx.scene.Parent]", "kind" : "def"}, {"label" : "opacity_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.opacity_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#opacity_=(v:Double):Unit", "kind" : "def"}, {"label" : "opacity", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.opacity", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#opacity:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "onScroll_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScroll_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onScroll_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScroll", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScroll", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onScroll:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onMouseReleased_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMouseReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMouseReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMousePressed_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMousePressed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMousePressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMousePressed", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMousePressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMousePressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseMoved_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseMoved_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMouseMoved_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseMoved", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseMoved", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMouseMoved:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseExited_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseExited_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMouseExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseExited", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseExited", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMouseExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseEntered_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseEntered_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMouseEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseEntered", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMouseEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseDragReleased_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMouseDragReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMouseDragReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragOver_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragOver_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMouseDragOver_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragOver", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragOver", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMouseDragOver:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragExited_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragExited_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMouseDragExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragExited", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragExited", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMouseDragExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragEntered_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragEntered_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMouseDragEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragEntered", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMouseDragEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragged_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragged_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMouseDragged_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragged", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseDragged", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMouseDragged:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseClicked_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseClicked_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMouseClicked_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseClicked", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseClicked", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onMouseClicked:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onKeyTyped_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyTyped_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onKeyTyped_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyTyped", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyTyped", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onKeyTyped:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onKeyReleased_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onKeyReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onKeyReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onKeyPressed_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyPressed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onKeyPressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyPressed", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyPressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onKeyPressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onInputMethodTextChanged_=", "tail" : "(v: EventHandler[_ >: InputMethodEvent]): Unit", "member" : "scalafx.scene.Node.onInputMethodTextChanged_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onInputMethodTextChanged_=(v:javafx.event.EventHandler[_>:javafx.scene.input.InputMethodEvent]):Unit", "kind" : "def"}, {"label" : "onInputMethodTextChanged", "tail" : "(): ObjectProperty[EventHandler[_ >: InputMethodEvent]]", "member" : "scalafx.scene.Node.onInputMethodTextChanged", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onInputMethodTextChanged:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.InputMethodEvent]]", "kind" : "def"}, {"label" : "onDragOver_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragOver_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onDragOver_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragOver", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragOver", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onDragOver:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragExited_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragExited_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onDragExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragExited", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragExited", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onDragExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragEntered_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragEntered_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onDragEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragEntered", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onDragEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDropped_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragDropped_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onDragDropped_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragDropped", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragDropped", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onDragDropped:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDone_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragDone_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onDragDone_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragDone", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragDone", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onDragDone:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDetected_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onDragDetected_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onDragDetected_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onDragDetected", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onDragDetected", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onDragDetected:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onContextMenuRequested_=", "tail" : "(v: EventHandler[_ >: ContextMenuEvent]): Unit", "member" : "scalafx.scene.Node.onContextMenuRequested_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onContextMenuRequested_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ContextMenuEvent]):Unit", "kind" : "def"}, {"label" : "onContextMenuRequested", "tail" : "(): ObjectProperty[EventHandler[_ >: ContextMenuEvent]]", "member" : "scalafx.scene.Node.onContextMenuRequested", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#onContextMenuRequested:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ContextMenuEvent]]", "kind" : "def"}, {"label" : "effectiveNodeOrientation", "tail" : "(): ReadOnlyObjectProperty[NodeOrientation]", "member" : "scalafx.scene.Node.effectiveNodeOrientation", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#effectiveNodeOrientation:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.NodeOrientation]", "kind" : "def"}, {"label" : "nodeOrientation_=", "tail" : "(v: NodeOrientation): Unit", "member" : "scalafx.scene.Node.nodeOrientation_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#nodeOrientation_=(v:scalafx.geometry.NodeOrientation):Unit", "kind" : "def"}, {"label" : "nodeOrientation", "tail" : "(): ObjectProperty[NodeOrientation]", "member" : "scalafx.scene.Node.nodeOrientation", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#nodeOrientation:scalafx.beans.property.ObjectProperty[javafx.geometry.NodeOrientation]", "kind" : "def"}, {"label" : "mouseTransparent_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.mouseTransparent_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#mouseTransparent_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "mouseTransparent", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.mouseTransparent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#mouseTransparent:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "managed_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.managed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#managed_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "managed", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.managed", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#managed:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "layoutY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.layoutY_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#layoutY_=(v:Double):Unit", "kind" : "def"}, {"label" : "layoutY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.layoutY", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#layoutY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "layoutX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.layoutX_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#layoutX_=(v:Double):Unit", "kind" : "def"}, {"label" : "layoutX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.layoutX", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#layoutX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "layoutBounds", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.layoutBounds", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#layoutBounds:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "inputMethodRequests_=", "tail" : "(v: InputMethodRequests): Unit", "member" : "scalafx.scene.Node.inputMethodRequests_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#inputMethodRequests_=(v:javafx.scene.input.InputMethodRequests):Unit", "kind" : "def"}, {"label" : "inputMethodRequests", "tail" : "(): ObjectProperty[InputMethodRequests]", "member" : "scalafx.scene.Node.inputMethodRequests", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#inputMethodRequests:scalafx.beans.property.ObjectProperty[javafx.scene.input.InputMethodRequests]", "kind" : "def"}, {"label" : "id_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.id_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#id_=(v:String):Unit", "kind" : "def"}, {"label" : "id", "tail" : "(): StringProperty", "member" : "scalafx.scene.Node.id", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#id:scalafx.beans.property.StringProperty", "kind" : "def"}, {"label" : "hover", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.hover", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#hover:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "focusTraversable_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.focusTraversable_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#focusTraversable_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "focusTraversable", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.focusTraversable", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#focusTraversable:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "focused", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.focused", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#focused:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "eventDispatcher_=", "tail" : "(v: EventDispatcher): Unit", "member" : "scalafx.scene.Node.eventDispatcher_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#eventDispatcher_=(v:javafx.event.EventDispatcher):Unit", "kind" : "def"}, {"label" : "eventDispatcher", "tail" : "(): ObjectProperty[EventDispatcher]", "member" : "scalafx.scene.Node.eventDispatcher", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#eventDispatcher:scalafx.beans.property.ObjectProperty[javafx.event.EventDispatcher]", "kind" : "def"}, {"label" : "effect_=", "tail" : "(v: Effect): Unit", "member" : "scalafx.scene.Node.effect_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#effect_=(v:scalafx.scene.effect.Effect):Unit", "kind" : "def"}, {"label" : "effect", "tail" : "(): ObjectProperty[Effect]", "member" : "scalafx.scene.Node.effect", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#effect:scalafx.beans.property.ObjectProperty[javafx.scene.effect.Effect]", "kind" : "def"}, {"label" : "disable_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.disable_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#disable_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "disable", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.disable", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#disable:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "disabled", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.disabled", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#disabled:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "depthTest_=", "tail" : "(v: DepthTest): Unit", "member" : "scalafx.scene.Node.depthTest_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#depthTest_=(v:scalafx.scene.DepthTest):Unit", "kind" : "def"}, {"label" : "depthTest", "tail" : "(): ObjectProperty[DepthTest]", "member" : "scalafx.scene.Node.depthTest", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#depthTest:scalafx.beans.property.ObjectProperty[javafx.scene.DepthTest]", "kind" : "def"}, {"label" : "cursor_=", "tail" : "(v: Cursor): Unit", "member" : "scalafx.scene.Node.cursor_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#cursor_=(v:scalafx.scene.Cursor):Unit", "kind" : "def"}, {"label" : "cursor", "tail" : "(): ObjectProperty[Cursor]", "member" : "scalafx.scene.Node.cursor", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#cursor:scalafx.beans.property.ObjectProperty[javafx.scene.Cursor]", "kind" : "def"}, {"label" : "contentBias", "tail" : "(): Orientation", "member" : "scalafx.scene.Node.contentBias", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#contentBias:scalafx.geometry.Orientation", "kind" : "def"}, {"label" : "clip_=", "tail" : "(v: Node): Unit", "member" : "scalafx.scene.Node.clip_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#clip_=(v:scalafx.scene.Node):Unit", "kind" : "def"}, {"label" : "clip", "tail" : "(): ObjectProperty[Node]", "member" : "scalafx.scene.Node.clip", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#clip:scalafx.beans.property.ObjectProperty[javafx.scene.Node]", "kind" : "def"}, {"label" : "cache_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.cache_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#cache_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "cache", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.cache", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#cache:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "cacheHint_=", "tail" : "(v: CacheHint): Unit", "member" : "scalafx.scene.Node.cacheHint_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#cacheHint_=(v:scalafx.scene.CacheHint):Unit", "kind" : "def"}, {"label" : "cacheHint", "tail" : "(): ObjectProperty[CacheHint]", "member" : "scalafx.scene.Node.cacheHint", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#cacheHint:scalafx.beans.property.ObjectProperty[javafx.scene.CacheHint]", "kind" : "def"}, {"label" : "boundsInParent", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.boundsInParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#boundsInParent:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "boundsInLocal", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.boundsInLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#boundsInLocal:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "blendMode_=", "tail" : "(v: BlendMode): Unit", "member" : "scalafx.scene.Node.blendMode_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#blendMode_=(v:scalafx.scene.effect.BlendMode):Unit", "kind" : "def"}, {"label" : "blendMode", "tail" : "(): ObjectProperty[BlendMode]", "member" : "scalafx.scene.Node.blendMode", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#blendMode:scalafx.beans.property.ObjectProperty[javafx.scene.effect.BlendMode]", "kind" : "def"}, {"label" : "accessibleRoleDescription_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleRoleDescription_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#accessibleRoleDescription_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleRoleDescription", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleRoleDescription", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#accessibleRoleDescription:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "accessibleRole_=", "tail" : "(v: AccessibleRole): Unit", "member" : "scalafx.scene.Node.accessibleRole_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#accessibleRole_=(v:scalafx.scene.AccessibleRole):Unit", "kind" : "def"}, {"label" : "accessibleRole", "tail" : "(): ObjectProperty[AccessibleRole]", "member" : "scalafx.scene.Node.accessibleRole", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#accessibleRole:scalafx.beans.property.ObjectProperty[javafx.scene.AccessibleRole]", "kind" : "def"}, {"label" : "accessibleHelp_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleHelp_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#accessibleHelp_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleHelp", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleHelp", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#accessibleHelp:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "accessibleText_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleText_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#accessibleText_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleText", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleText", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#accessibleText:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "typeSelector", "tail" : "(): String", "member" : "scalafx.css.Styleable.typeSelector", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#typeSelector:String", "kind" : "def"}, {"label" : "styleClass", "tail" : "(): ObservableBuffer[String]", "member" : "scalafx.css.Styleable.styleClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#styleClass:scalafx.collections.ObservableBuffer[String]", "kind" : "def"}, {"label" : "styleableParent", "tail" : "(): Styleable", "member" : "scalafx.css.Styleable.styleableParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#styleableParent:scalafx.css.Styleable", "kind" : "def"}, {"label" : "getStyle", "tail" : "(): String", "member" : "scalafx.css.Styleable.getStyle", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#getStyle:String", "kind" : "def"}, {"label" : "pseudoClassStates", "tail" : "(): ObservableSet[PseudoClass]", "member" : "scalafx.css.Styleable.pseudoClassStates", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#pseudoClassStates:scalafx.collections.ObservableSet[javafx.css.PseudoClass]", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "scalafx.css.Styleable.getId", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#getId:String", "kind" : "def"}, {"label" : "cssMetaData", "tail" : "(): Seq[CssMetaData[_ <: Styleable, _]]", "member" : "scalafx.css.Styleable.cssMetaData", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#cssMetaData:Seq[javafx.css.CssMetaData[_<:javafx.css.Styleable,_]]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scalafx.delegate.SFXDelegate.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(ref: Any): Boolean", "member" : "scalafx.delegate.SFXDelegate.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#equals(ref:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scalafx.delegate.SFXDelegate.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#toString():String", "kind" : "def"}, {"label" : "buildEventDispatchChain", "tail" : "(chain: EventDispatchChain): EventDispatchChain", "member" : "scalafx.event.EventHandlerDelegate.buildEventDispatchChain", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#buildEventDispatchChain(chain:javafx.event.EventDispatchChain):javafx.event.EventDispatchChain", "kind" : "def"}, {"label" : "removeEventFilter", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.removeEventFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#removeEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "filterEvent", "tail" : "(eventType: EventType[J])(filter: FilterMagnet[J, S]): Subscription", "member" : "scalafx.event.EventHandlerDelegate.filterEvent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#filterEvent[J<:javafx.event.Event,S<:scalafx.event.Eventwithscalafx.delegate.SFXDelegate[J]](eventType:scalafx.event.EventType[J])(filter:EventHandlerDelegate.this.FilterMagnet[J,S]):scalafx.event.subscriptions.Subscription", "kind" : "def"}, {"label" : "addEventFilter", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.addEventFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#addEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "removeEventHandler", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.removeEventHandler", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#removeEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "handleEvent", "tail" : "(eventType: EventType[J])(handler: HandlerMagnet[J, S]): Subscription", "member" : "scalafx.event.EventHandlerDelegate.handleEvent", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#handleEvent[J<:javafx.event.Event,S<:scalafx.event.Eventwithscalafx.delegate.SFXDelegate[J]](eventType:scalafx.event.EventType[J])(handler:EventHandlerDelegate.this.HandlerMagnet[J,S]):scalafx.event.subscriptions.Subscription", "kind" : "def"}, {"label" : "addEventHandler", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.addEventHandler", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#addEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "EventHandled", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.EventHandled", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#EventHandled=AnyRef{defaddEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defremoveEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defaddEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defremoveEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defbuildEventDispatchChain(chain:javafx.event.EventDispatchChain):javafx.event.EventDispatchChain}", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "me\/mysterymystery\/duelingfactions\/api\/board\/locations\/SpellTrapZone.html", "kind" : "class"}], "me.mysterymystery.duelingfactions.api.exception" : [{"name" : "me.mysterymystery.duelingfactions.api.exception.BoardFullException", "shortDescription" : "Thrown when the board is full so a card cannot be placed.", "members_case class" : [{"member" : "me.mysterymystery.duelingfactions.api.exception.BoardFullException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "me\/mysterymystery\/duelingfactions\/api\/exception\/BoardFullException.html", "kind" : "case class"}], "me.mysterymystery.duelingfactions.api.card.deck" : [{"name" : "me.mysterymystery.duelingfactions.api.card.deck.StubDeck", "shortDescription" : "", "object" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html", "members_object" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "iterator", "tail" : "(): Iterator[Card]", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Deck.iterator", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#iterator:Iterator[me.mysterymystery.duelingfactions.api.card.Card]", "kind" : "def"}, {"label" : "apply", "tail" : "(idx: Int): Card", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Deck.apply", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#apply(idx:Int):me.mysterymystery.duelingfactions.api.card.Card", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Deck.length", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#length:Int", "kind" : "def"}, {"label" : "-=", "tail" : "(card: Card): Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Deck.-=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#-=(card:me.mysterymystery.duelingfactions.api.card.Card):Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(card: Card): Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Deck.+=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#+=(card:me.mysterymystery.duelingfactions.api.card.Card):Unit", "kind" : "def"}, {"label" : "draw", "tail" : "(numberOfCards: Int): Seq[Card]", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Deck.draw", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#draw(numberOfCards:Int):Seq[me.mysterymystery.duelingfactions.api.card.Card]", "kind" : "def"}, {"label" : "draw", "tail" : "(): Card", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Deck.draw", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#draw:me.mysterymystery.duelingfactions.api.card.Card", "kind" : "def"}, {"label" : "shuffle", "tail" : "(): Deck", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Deck.shuffle", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#shuffle:me.mysterymystery.duelingfactions.api.card.cardcollection.Deck", "kind" : "def"}, {"label" : "elems", "tail" : ": ArrayBuffer[Card]", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Deck.elems", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#elems:scala.collection.mutable.ArrayBuffer[me.mysterymystery.duelingfactions.api.card.Card]", "kind" : "var"}, {"label" : "seq", "tail" : "(): Seq[Card]", "member" : "scala.collection.Seq.seq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#seq:Seq[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Seq]", "member" : "scala.collection.Seq.companion", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#companion:scala.collection.generic.GenericCompanion[Seq]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#toString():String", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[Card, Seq[Card]]", "member" : "scala.collection.SeqLike.view", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[Card, Seq[Card]]", "member" : "scala.collection.SeqLike.view", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Card]", "member" : "scala.collection.SeqLike.toSeq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): Seq[Card]", "member" : "scala.collection.SeqLike.sorted", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Card) â‡’ B)(ord: Ordering[B]): Seq[Card]", "member" : "scala.collection.SeqLike.sortBy", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Card, Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.SeqLike.sortWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (Card, B) â‡’ Boolean): Boolean", "member" : "scala.collection.SeqLike.corresponds", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.:+", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.+:", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.updated", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Seq[Card]", "member" : "scala.collection.SeqLike.distinct", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): Seq[Card]", "member" : "scala.collection.SeqLike.intersect", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): Seq[Card]", "member" : "scala.collection.SeqLike.diff", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqLike.contains", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.endsWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.SeqLike.startsWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[Card]", "member" : "scala.collection.SeqLike.reverseIterator", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Card) â‡’ B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Seq[Card]", "member" : "scala.collection.SeqLike.reverse", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#reverse:Repr", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[Seq[Card]]", "member" : "scala.collection.SeqLike.combinations", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[Seq[Card]]", "member" : "scala.collection.SeqLike.permutations", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Card) â‡’ Boolean, end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexWhere", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Card) â‡’ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.indexWhere", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Card) â‡’ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.segmentLength", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#size:Int", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqLike.isEmpty", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqLike.lengthCompare", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[Card, ParSeq[Card]]", "member" : "scala.collection.SeqLike.parCombiner", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParSeq[A]]", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Seq[Card]): Seq[Card]", "member" : "scala.collection.SeqLike.toCollection", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#toCollection(repr:Repr):Seq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Seq[Card]", "member" : "scala.collection.SeqLike.thisCollection", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#thisCollection:Seq[A]", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.GenSeqLike.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#hashCode():Int", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Card) â‡’ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Card) â‡’ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Card) â‡’ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.GenSeqLike.isDefinedAt", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Card) â‡’ U): (Int) â‡’ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) â‡’ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) â‡’ Option[Card]", "member" : "scala.PartialFunction.lift", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Card) â‡’ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) â‡’ Int): (A) â‡’ Card", "member" : "scala.Function1.compose", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Card]", "member" : "scala.collection.IterableLike.toStream", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Seq[Card], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Seq[Card], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Seq[Card], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Seq[Card]", "member" : "scala.collection.IterableLike.dropRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Seq[Card]", "member" : "scala.collection.IterableLike.takeRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Seq[Card]]", "member" : "scala.collection.IterableLike.sliding", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Seq[Card]]", "member" : "scala.collection.IterableLike.sliding", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Seq[Card]]", "member" : "scala.collection.IterableLike.grouped", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Seq[Card]", "member" : "scala.collection.IterableLike.drop", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Seq[Card]", "member" : "scala.collection.IterableLike.take", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Seq[Card]", "member" : "scala.collection.IterableLike.slice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): Card", "member" : "scala.collection.IterableLike.head", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Card]", "member" : "scala.collection.IterableLike.toIterator", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Card]", "member" : "scala.collection.IterableLike.toIterable", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Card, B) â‡’ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Card, B) â‡’ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Card) â‡’ Boolean): Option[Card]", "member" : "scala.collection.IterableLike.find", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Card) â‡’ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Card) â‡’ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Card) â‡’ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (Card) â‡’ GenTraversableOnce[B]): Seq[Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (Card) â‡’ GenTraversableOnce[B]): Seq[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Card) â‡’ (A1, A2, A3)): (Seq[A1], Seq[A2], Seq[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Card) â‡’ (A1, A2)): (Seq[A1], Seq[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[Card, Seq[Card]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Card) â‡’ Boolean): FilterMonadic[Card, Seq[Card]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Card, Col[Card]]): Col[Card]", "member" : "scala.collection.TraversableLike.to", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Card]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Seq[Card]]", "member" : "scala.collection.TraversableLike.inits", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Seq[Card]]", "member" : "scala.collection.TraversableLike.tails", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Seq[Card], Seq[Card])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Card) â‡’ Boolean): (Seq[Card], Seq[Card])", "member" : "scala.collection.TraversableLike.span", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Seq[Card]", "member" : "scala.collection.TraversableLike.init", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[Card]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Card", "member" : "scala.collection.TraversableLike.last", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Seq[Card]", "member" : "scala.collection.TraversableLike.tail", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Card]", "member" : "scala.collection.TraversableLike.headOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Card, B) â‡’ B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Card) â‡’ B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) â‡’ B)(cbf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Card) â‡’ K): Map[K, Seq[Card]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Card) â‡’ Boolean): (Seq[Card], Seq[Card])", "member" : "scala.collection.TraversableLike.partition", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Card, B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.TraversableLike.filter", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Card) â‡’ GenTraversableOnce[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Card) â‡’ B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Seq[Card]", "member" : "scala.collection.TraversableLike.repr", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[Card]", "member" : "scala.collection.Parallelizable.par", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Card, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Card]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Card]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Card]", "member" : "scala.collection.TraversableOnce.toList", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Card) â‡’ B)(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.minBy", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Card) â‡’ B)(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.max", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.min", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: â‡’ B)(seqop: (B, Card) â‡’ B, combop: (B, B) â‡’ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) â‡’ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) â‡’ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) â‡’ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Card, B) â‡’ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Card) â‡’ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Card) â‡’ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Card) â‡’ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Card, B) â‡’ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Card) â‡’ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Card, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Card) â‡’ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Card]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/deck\/StubDeck$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "me.mysterymystery.duelingfactions.api.card" : [{"name" : "me.mysterymystery.duelingfactions.api.card.Card", "members_trait" : [{"label" : "imageView", "tail" : "(): ImageView", "member" : "me.mysterymystery.duelingfactions.api.card.Card.imageView", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#imageView:scalafx.scene.image.ImageView", "kind" : "def"}, {"label" : "produceSprite", "tail" : "(name: String): Image", "member" : "me.mysterymystery.duelingfactions.api.card.Card.produceSprite", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#produceSprite(name:String):scalafx.scene.image.Image", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onEndOfTurn", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.Card.onEndOfTurn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#onEndOfTurn:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "abstract def"}, {"label" : "onStartOfTurn", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.Card.onStartOfTurn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#onStartOfTurn:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "abstract def"}, {"label" : "onDrawn", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.Card.onDrawn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#onDrawn:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "me.mysterymystery.duelingfactions.api.card.Card.name", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#name:String", "kind" : "abstract def"}, {"label" : "cardText", "tail" : "(): String", "member" : "me.mysterymystery.duelingfactions.api.card.Card.cardText", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#cardText:String", "kind" : "abstract def"}, {"label" : "action", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.Card.action", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#action:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "abstract def"}, {"label" : "sprite", "tail" : "(): Image", "member" : "me.mysterymystery.duelingfactions.api.card.Card.sprite", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html#sprite:scalafx.scene.image.Image", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "me\/mysterymystery\/duelingfactions\/api\/card\/Card.html", "kind" : "trait"}, {"name" : "me.mysterymystery.duelingfactions.api.card.HiddenCard", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/HiddenCard.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/HiddenCard.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/HiddenCard.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/HiddenCard.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/HiddenCard.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/HiddenCard.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/HiddenCard.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/HiddenCard.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/HiddenCard.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/HiddenCard.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/HiddenCard.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/HiddenCard.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/HiddenCard.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/HiddenCard.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/HiddenCard.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/HiddenCard.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/HiddenCard.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/HiddenCard.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/HiddenCard.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sprite", "tail" : "(): Image", "member" : "me.mysterymystery.duelingfactions.api.card.HiddenCard.sprite", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/HiddenCard.html#sprite:scalafx.scene.image.Image", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "me\/mysterymystery\/duelingfactions\/api\/card\/HiddenCard.html", "kind" : "trait"}, {"name" : "me.mysterymystery.duelingfactions.api.card.MonsterCard", "members_trait" : [{"label" : "imageView", "tail" : "(): ImageView", "member" : "me.mysterymystery.duelingfactions.api.card.Card.imageView", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#imageView:scalafx.scene.image.ImageView", "kind" : "def"}, {"label" : "produceSprite", "tail" : "(name: String): Image", "member" : "me.mysterymystery.duelingfactions.api.card.Card.produceSprite", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#produceSprite(name:String):scalafx.scene.image.Image", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "monsterType", "tail" : "(): MonsterType", "member" : "me.mysterymystery.duelingfactions.api.card.MonsterCard.monsterType", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#monsterType:me.mysterymystery.duelingfactions.api.card.MonsterTypes.MonsterType", "kind" : "abstract def"}, {"label" : "level", "tail" : "(): Int", "member" : "me.mysterymystery.duelingfactions.api.card.MonsterCard.level", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#level:Int", "kind" : "abstract def"}, {"label" : "onEndOfTurn", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.Card.onEndOfTurn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#onEndOfTurn:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "abstract def"}, {"label" : "onStartOfTurn", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.Card.onStartOfTurn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#onStartOfTurn:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "abstract def"}, {"label" : "onDrawn", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.Card.onDrawn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#onDrawn:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "me.mysterymystery.duelingfactions.api.card.Card.name", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#name:String", "kind" : "abstract def"}, {"label" : "cardText", "tail" : "(): String", "member" : "me.mysterymystery.duelingfactions.api.card.Card.cardText", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#cardText:String", "kind" : "abstract def"}, {"label" : "action", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.Card.action", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#action:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "abstract def"}, {"label" : "sprite", "tail" : "(): Image", "member" : "me.mysterymystery.duelingfactions.api.card.Card.sprite", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html#sprite:scalafx.scene.image.Image", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterCard.html", "kind" : "trait"}, {"name" : "me.mysterymystery.duelingfactions.api.card.MonsterTypes", "shortDescription" : "", "object" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html", "members_object" : [{"label" : "Val", "tail" : "", "member" : "scala.Enumeration.Val", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#ValextendsEnumeration.this.ValuewithSerializable", "kind" : "class"}, {"label" : "ValueSet", "tail" : "", "member" : "scala.Enumeration.ValueSet", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#ValueSetextendsAbstractSet[Enumeration.this.Value]withSortedSet[Enumeration.this.Value]withSortedSetLike[Enumeration.this.Value,Enumeration.this.ValueSet]withSerializable", "kind" : "class"}, {"label" : "Value", "tail" : "", "member" : "scala.Enumeration.Value", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#ValueextendsOrdered[Enumeration.this.Value]withSerializable", "kind" : "abstract class"}, {"label" : "COMBO", "tail" : ": Value", "member" : "me.mysterymystery.duelingfactions.api.card.MonsterTypes.COMBO", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#COMBO:me.mysterymystery.duelingfactions.api.card.MonsterTypes.Value", "kind" : "val"}, {"label" : "NORMAL", "tail" : ": Value", "member" : "me.mysterymystery.duelingfactions.api.card.MonsterTypes.NORMAL", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#NORMAL:me.mysterymystery.duelingfactions.api.card.MonsterTypes.Value", "kind" : "val"}, {"label" : "EFFECT", "tail" : ": Value", "member" : "me.mysterymystery.duelingfactions.api.card.MonsterTypes.EFFECT", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#EFFECT:me.mysterymystery.duelingfactions.api.card.MonsterTypes.Value", "kind" : "val"}, {"label" : "MonsterType", "tail" : "", "member" : "me.mysterymystery.duelingfactions.api.card.MonsterTypes.MonsterType", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#MonsterType=me.mysterymystery.duelingfactions.api.card.MonsterTypes.Value", "kind" : "type"}, {"label" : "Value", "tail" : "(i: Int, name: String): Value", "member" : "scala.Enumeration.Value", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#Value(i:Int,name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(name: String): Value", "member" : "scala.Enumeration.Value", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#Value(name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(i: Int): Value", "member" : "scala.Enumeration.Value", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#Value(i:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(): Value", "member" : "scala.Enumeration.Value", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#Value:Enumeration.this.Value", "kind" : "final def"}, {"label" : "withName", "tail" : "(s: String): Value", "member" : "scala.Enumeration.withName", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#withName(s:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "apply", "tail" : "(x: Int): Value", "member" : "scala.Enumeration.apply", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#apply(x:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "maxId", "tail" : "(): Int", "member" : "scala.Enumeration.maxId", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#maxId:Int", "kind" : "final def"}, {"label" : "nextName", "tail" : ": Iterator[String]", "member" : "scala.Enumeration.nextName", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#nextName:Iterator[String]", "kind" : "var"}, {"label" : "nextId", "tail" : ": Int", "member" : "scala.Enumeration.nextId", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#nextId:Int", "kind" : "var"}, {"label" : "values", "tail" : "(): ValueSet", "member" : "scala.Enumeration.values", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#values:Enumeration.this.ValueSet", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Enumeration.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#toString():String", "kind" : "def"}, {"label" : "readResolve", "tail" : "(): AnyRef", "member" : "scala.Enumeration.readResolve", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#readResolve():AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/MonsterTypes$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "me.mysterymystery.duelingfactions.api.card.SpellCard", "members_trait" : [{"label" : "imageView", "tail" : "(): ImageView", "member" : "me.mysterymystery.duelingfactions.api.card.Card.imageView", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#imageView:scalafx.scene.image.ImageView", "kind" : "def"}, {"label" : "produceSprite", "tail" : "(name: String): Image", "member" : "me.mysterymystery.duelingfactions.api.card.Card.produceSprite", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#produceSprite(name:String):scalafx.scene.image.Image", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onEndOfTurn", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.Card.onEndOfTurn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#onEndOfTurn:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "abstract def"}, {"label" : "onStartOfTurn", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.Card.onStartOfTurn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#onStartOfTurn:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "abstract def"}, {"label" : "onDrawn", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.Card.onDrawn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#onDrawn:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "me.mysterymystery.duelingfactions.api.card.Card.name", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#name:String", "kind" : "abstract def"}, {"label" : "cardText", "tail" : "(): String", "member" : "me.mysterymystery.duelingfactions.api.card.Card.cardText", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#cardText:String", "kind" : "abstract def"}, {"label" : "action", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.Card.action", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#action:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "abstract def"}, {"label" : "sprite", "tail" : "(): Image", "member" : "me.mysterymystery.duelingfactions.api.card.Card.sprite", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html#sprite:scalafx.scene.image.Image", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellCard.html", "kind" : "trait"}, {"name" : "me.mysterymystery.duelingfactions.api.card.SpellOrTrapCard", "members_trait" : [{"label" : "imageView", "tail" : "(): ImageView", "member" : "me.mysterymystery.duelingfactions.api.card.Card.imageView", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#imageView:scalafx.scene.image.ImageView", "kind" : "def"}, {"label" : "produceSprite", "tail" : "(name: String): Image", "member" : "me.mysterymystery.duelingfactions.api.card.Card.produceSprite", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#produceSprite(name:String):scalafx.scene.image.Image", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onEndOfTurn", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.Card.onEndOfTurn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#onEndOfTurn:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "abstract def"}, {"label" : "onStartOfTurn", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.Card.onStartOfTurn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#onStartOfTurn:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "abstract def"}, {"label" : "onDrawn", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.Card.onDrawn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#onDrawn:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "me.mysterymystery.duelingfactions.api.card.Card.name", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#name:String", "kind" : "abstract def"}, {"label" : "cardText", "tail" : "(): String", "member" : "me.mysterymystery.duelingfactions.api.card.Card.cardText", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#cardText:String", "kind" : "abstract def"}, {"label" : "action", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.Card.action", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#action:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "abstract def"}, {"label" : "sprite", "tail" : "(): Image", "member" : "me.mysterymystery.duelingfactions.api.card.Card.sprite", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html#sprite:scalafx.scene.image.Image", "kind" : "abstract def"}], "shortDescription" : "Defines a Spell Or a trap card.", "trait" : "me\/mysterymystery\/duelingfactions\/api\/card\/SpellOrTrapCard.html", "kind" : "trait"}, {"name" : "me.mysterymystery.duelingfactions.api.card.TrapCard", "members_trait" : [{"label" : "imageView", "tail" : "(): ImageView", "member" : "me.mysterymystery.duelingfactions.api.card.Card.imageView", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#imageView:scalafx.scene.image.ImageView", "kind" : "def"}, {"label" : "produceSprite", "tail" : "(name: String): Image", "member" : "me.mysterymystery.duelingfactions.api.card.Card.produceSprite", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#produceSprite(name:String):scalafx.scene.image.Image", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "playedThisTurn", "tail" : "(): Boolean", "member" : "me.mysterymystery.duelingfactions.api.card.TrapCard.playedThisTurn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#playedThisTurn:Boolean", "kind" : "abstract def"}, {"label" : "onEndOfTurn", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.Card.onEndOfTurn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#onEndOfTurn:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "abstract def"}, {"label" : "onStartOfTurn", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.Card.onStartOfTurn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#onStartOfTurn:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "abstract def"}, {"label" : "onDrawn", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.Card.onDrawn", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#onDrawn:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "me.mysterymystery.duelingfactions.api.card.Card.name", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#name:String", "kind" : "abstract def"}, {"label" : "cardText", "tail" : "(): String", "member" : "me.mysterymystery.duelingfactions.api.card.Card.cardText", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#cardText:String", "kind" : "abstract def"}, {"label" : "action", "tail" : "(): (Board) â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.card.Card.action", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#action:me.mysterymystery.duelingfactions.api.board.Board=>Unit", "kind" : "abstract def"}, {"label" : "sprite", "tail" : "(): Image", "member" : "me.mysterymystery.duelingfactions.api.card.Card.sprite", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html#sprite:scalafx.scene.image.Image", "kind" : "abstract def"}], "shortDescription" : "Defines a trap card.", "trait" : "me\/mysterymystery\/duelingfactions\/api\/card\/TrapCard.html", "kind" : "trait"}], "me.mysterymystery.duelingfactions.api.board.faction.factions" : [{"name" : "me.mysterymystery.duelingfactions.api.board.faction.factions.ExampleFaction", "shortDescription" : "", "members_class" : [{"label" : "sprite", "tail" : "(): Image", "member" : "me.mysterymystery.duelingfactions.api.board.faction.factions.ExampleFaction.sprite", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#sprite:scalafx.scene.image.Image", "kind" : "def"}, {"label" : "lifepoints", "tail" : ": LifePoints", "member" : "me.mysterymystery.duelingfactions.api.board.faction.factions.ExampleFaction.lifepoints", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#lifepoints:me.mysterymystery.duelingfactions.api.player.LifePoints", "kind" : "val"}, {"label" : "act", "tail" : "(): () â‡’ Unit", "member" : "me.mysterymystery.duelingfactions.api.board.faction.factions.ExampleFaction.act", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#act:()=>Unit", "kind" : "def"}, {"label" : "heroName", "tail" : "(): String", "member" : "me.mysterymystery.duelingfactions.api.board.faction.factions.ExampleFaction.heroName", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#heroName:String", "kind" : "def"}, {"member" : "me.mysterymystery.duelingfactions.api.board.faction.factions.ExampleFaction#<init>", "error" : "unsupported entity"}, {"label" : "produceSprite", "tail" : "(name: String): Image", "member" : "me.mysterymystery.duelingfactions.api.board.faction.Faction.produceSprite", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#produceSprite(name:String):scalafx.scene.image.Image", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "me\/mysterymystery\/duelingfactions\/api\/board\/faction\/factions\/ExampleFaction.html", "kind" : "class"}], "me.mysterymystery.duelingfactions.api.card.cardcollection" : [{"name" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Deck", "shortDescription" : "Stack of cards.", "members_class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "iterator", "tail" : "(): Iterator[Card]", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Deck.iterator", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#iterator:Iterator[me.mysterymystery.duelingfactions.api.card.Card]", "kind" : "def"}, {"label" : "apply", "tail" : "(idx: Int): Card", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Deck.apply", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#apply(idx:Int):me.mysterymystery.duelingfactions.api.card.Card", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Deck.length", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#length:Int", "kind" : "def"}, {"label" : "-=", "tail" : "(card: Card): Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Deck.-=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#-=(card:me.mysterymystery.duelingfactions.api.card.Card):Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(card: Card): Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Deck.+=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#+=(card:me.mysterymystery.duelingfactions.api.card.Card):Unit", "kind" : "def"}, {"label" : "draw", "tail" : "(numberOfCards: Int): Seq[Card]", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Deck.draw", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#draw(numberOfCards:Int):Seq[me.mysterymystery.duelingfactions.api.card.Card]", "kind" : "def"}, {"label" : "draw", "tail" : "(): Card", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Deck.draw", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#draw:me.mysterymystery.duelingfactions.api.card.Card", "kind" : "def"}, {"label" : "shuffle", "tail" : "(): Deck", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Deck.shuffle", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#shuffle:me.mysterymystery.duelingfactions.api.card.cardcollection.Deck", "kind" : "def"}, {"label" : "elems", "tail" : ": ArrayBuffer[Card]", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Deck.elems", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#elems:scala.collection.mutable.ArrayBuffer[me.mysterymystery.duelingfactions.api.card.Card]", "kind" : "var"}, {"member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Deck#<init>", "error" : "unsupported entity"}, {"label" : "seq", "tail" : "(): Seq[Card]", "member" : "scala.collection.Seq.seq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#seq:Seq[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Seq]", "member" : "scala.collection.Seq.companion", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#companion:scala.collection.generic.GenericCompanion[Seq]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#toString():String", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[Card, Seq[Card]]", "member" : "scala.collection.SeqLike.view", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[Card, Seq[Card]]", "member" : "scala.collection.SeqLike.view", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Card]", "member" : "scala.collection.SeqLike.toSeq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): Seq[Card]", "member" : "scala.collection.SeqLike.sorted", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Card) â‡’ B)(ord: Ordering[B]): Seq[Card]", "member" : "scala.collection.SeqLike.sortBy", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Card, Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.SeqLike.sortWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (Card, B) â‡’ Boolean): Boolean", "member" : "scala.collection.SeqLike.corresponds", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.:+", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.+:", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.updated", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Seq[Card]", "member" : "scala.collection.SeqLike.distinct", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): Seq[Card]", "member" : "scala.collection.SeqLike.intersect", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): Seq[Card]", "member" : "scala.collection.SeqLike.diff", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqLike.contains", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.endsWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.SeqLike.startsWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[Card]", "member" : "scala.collection.SeqLike.reverseIterator", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Card) â‡’ B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Seq[Card]", "member" : "scala.collection.SeqLike.reverse", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#reverse:Repr", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[Seq[Card]]", "member" : "scala.collection.SeqLike.combinations", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[Seq[Card]]", "member" : "scala.collection.SeqLike.permutations", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Card) â‡’ Boolean, end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexWhere", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Card) â‡’ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.indexWhere", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Card) â‡’ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.segmentLength", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#size:Int", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqLike.isEmpty", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqLike.lengthCompare", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[Card, ParSeq[Card]]", "member" : "scala.collection.SeqLike.parCombiner", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParSeq[A]]", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Seq[Card]): Seq[Card]", "member" : "scala.collection.SeqLike.toCollection", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#toCollection(repr:Repr):Seq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Seq[Card]", "member" : "scala.collection.SeqLike.thisCollection", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#thisCollection:Seq[A]", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.GenSeqLike.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#hashCode():Int", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Card) â‡’ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Card) â‡’ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Card) â‡’ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.GenSeqLike.isDefinedAt", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Card) â‡’ U): (Int) â‡’ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) â‡’ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) â‡’ Option[Card]", "member" : "scala.PartialFunction.lift", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Card) â‡’ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) â‡’ Int): (A) â‡’ Card", "member" : "scala.Function1.compose", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Card]", "member" : "scala.collection.IterableLike.toStream", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Seq[Card], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Seq[Card], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Seq[Card], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Seq[Card]", "member" : "scala.collection.IterableLike.dropRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Seq[Card]", "member" : "scala.collection.IterableLike.takeRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Seq[Card]]", "member" : "scala.collection.IterableLike.sliding", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Seq[Card]]", "member" : "scala.collection.IterableLike.sliding", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Seq[Card]]", "member" : "scala.collection.IterableLike.grouped", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Seq[Card]", "member" : "scala.collection.IterableLike.drop", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Seq[Card]", "member" : "scala.collection.IterableLike.take", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Seq[Card]", "member" : "scala.collection.IterableLike.slice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): Card", "member" : "scala.collection.IterableLike.head", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Card]", "member" : "scala.collection.IterableLike.toIterator", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Card]", "member" : "scala.collection.IterableLike.toIterable", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Card, B) â‡’ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Card, B) â‡’ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Card) â‡’ Boolean): Option[Card]", "member" : "scala.collection.IterableLike.find", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Card) â‡’ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Card) â‡’ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Card) â‡’ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (Card) â‡’ GenTraversableOnce[B]): Seq[Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (Card) â‡’ GenTraversableOnce[B]): Seq[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Card) â‡’ (A1, A2, A3)): (Seq[A1], Seq[A2], Seq[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Card) â‡’ (A1, A2)): (Seq[A1], Seq[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[Card, Seq[Card]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Card) â‡’ Boolean): FilterMonadic[Card, Seq[Card]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Card, Col[Card]]): Col[Card]", "member" : "scala.collection.TraversableLike.to", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Card]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Seq[Card]]", "member" : "scala.collection.TraversableLike.inits", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Seq[Card]]", "member" : "scala.collection.TraversableLike.tails", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Seq[Card], Seq[Card])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Card) â‡’ Boolean): (Seq[Card], Seq[Card])", "member" : "scala.collection.TraversableLike.span", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Seq[Card]", "member" : "scala.collection.TraversableLike.init", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[Card]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Card", "member" : "scala.collection.TraversableLike.last", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Seq[Card]", "member" : "scala.collection.TraversableLike.tail", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Card]", "member" : "scala.collection.TraversableLike.headOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Card, B) â‡’ B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Card) â‡’ B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) â‡’ B)(cbf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Card) â‡’ K): Map[K, Seq[Card]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Card) â‡’ Boolean): (Seq[Card], Seq[Card])", "member" : "scala.collection.TraversableLike.partition", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Card, B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.TraversableLike.filter", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Card) â‡’ GenTraversableOnce[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Card) â‡’ B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Seq[Card]", "member" : "scala.collection.TraversableLike.repr", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[Card]", "member" : "scala.collection.Parallelizable.par", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Card, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Card]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Card]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Card]", "member" : "scala.collection.TraversableOnce.toList", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Card) â‡’ B)(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.minBy", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Card) â‡’ B)(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.max", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.min", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: â‡’ B)(seqop: (B, Card) â‡’ B, combop: (B, B) â‡’ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) â‡’ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) â‡’ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) â‡’ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Card, B) â‡’ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Card) â‡’ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Card) â‡’ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Card) â‡’ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Card, B) â‡’ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Card) â‡’ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Card, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Card) â‡’ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Card]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Deck.html", "kind" : "class"}, {"name" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Graveyard", "shortDescription" : "", "members_class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "--=", "tail" : "(graveyard: Graveyard): Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Graveyard.--=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#--=(graveyard:me.mysterymystery.duelingfactions.api.card.cardcollection.Graveyard):Unit", "kind" : "def"}, {"label" : "-=", "tail" : "(card: Card): Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Graveyard.-=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#-=(card:me.mysterymystery.duelingfactions.api.card.Card):Unit", "kind" : "def"}, {"label" : "++=", "tail" : "(graveyard: Graveyard): Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Graveyard.++=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#++=(graveyard:me.mysterymystery.duelingfactions.api.card.cardcollection.Graveyard):Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(card: Card): Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Graveyard.+=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#+=(card:me.mysterymystery.duelingfactions.api.card.Card):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(idx: Int): Card", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Graveyard.apply", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#apply(idx:Int):me.mysterymystery.duelingfactions.api.card.Card", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Graveyard.length", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#length:Int", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Card]", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Graveyard.iterator", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#iterator:Iterator[me.mysterymystery.duelingfactions.api.card.Card]", "kind" : "def"}, {"member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Graveyard#<init>", "error" : "unsupported entity"}, {"label" : "seq", "tail" : "(): Seq[Card]", "member" : "scala.collection.Seq.seq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#seq:Seq[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Seq]", "member" : "scala.collection.Seq.companion", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#companion:scala.collection.generic.GenericCompanion[Seq]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#toString():String", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[Card, Seq[Card]]", "member" : "scala.collection.SeqLike.view", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[Card, Seq[Card]]", "member" : "scala.collection.SeqLike.view", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Card]", "member" : "scala.collection.SeqLike.toSeq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): Seq[Card]", "member" : "scala.collection.SeqLike.sorted", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Card) â‡’ B)(ord: Ordering[B]): Seq[Card]", "member" : "scala.collection.SeqLike.sortBy", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Card, Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.SeqLike.sortWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (Card, B) â‡’ Boolean): Boolean", "member" : "scala.collection.SeqLike.corresponds", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.:+", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.+:", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.updated", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Seq[Card]", "member" : "scala.collection.SeqLike.distinct", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): Seq[Card]", "member" : "scala.collection.SeqLike.intersect", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): Seq[Card]", "member" : "scala.collection.SeqLike.diff", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqLike.contains", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.endsWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.SeqLike.startsWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[Card]", "member" : "scala.collection.SeqLike.reverseIterator", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Card) â‡’ B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Seq[Card]", "member" : "scala.collection.SeqLike.reverse", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#reverse:Repr", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[Seq[Card]]", "member" : "scala.collection.SeqLike.combinations", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[Seq[Card]]", "member" : "scala.collection.SeqLike.permutations", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Card) â‡’ Boolean, end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexWhere", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Card) â‡’ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.indexWhere", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Card) â‡’ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.segmentLength", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#size:Int", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqLike.isEmpty", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqLike.lengthCompare", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[Card, ParSeq[Card]]", "member" : "scala.collection.SeqLike.parCombiner", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParSeq[A]]", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Seq[Card]): Seq[Card]", "member" : "scala.collection.SeqLike.toCollection", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#toCollection(repr:Repr):Seq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Seq[Card]", "member" : "scala.collection.SeqLike.thisCollection", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#thisCollection:Seq[A]", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.GenSeqLike.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#hashCode():Int", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Card) â‡’ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Card) â‡’ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Card) â‡’ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.GenSeqLike.isDefinedAt", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Card) â‡’ U): (Int) â‡’ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) â‡’ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) â‡’ Option[Card]", "member" : "scala.PartialFunction.lift", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Card) â‡’ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) â‡’ Int): (A) â‡’ Card", "member" : "scala.Function1.compose", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Card]", "member" : "scala.collection.IterableLike.toStream", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Seq[Card], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Seq[Card], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Seq[Card], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Seq[Card]", "member" : "scala.collection.IterableLike.dropRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Seq[Card]", "member" : "scala.collection.IterableLike.takeRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Seq[Card]]", "member" : "scala.collection.IterableLike.sliding", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Seq[Card]]", "member" : "scala.collection.IterableLike.sliding", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Seq[Card]]", "member" : "scala.collection.IterableLike.grouped", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Seq[Card]", "member" : "scala.collection.IterableLike.drop", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Seq[Card]", "member" : "scala.collection.IterableLike.take", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Seq[Card]", "member" : "scala.collection.IterableLike.slice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): Card", "member" : "scala.collection.IterableLike.head", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Card]", "member" : "scala.collection.IterableLike.toIterator", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Card]", "member" : "scala.collection.IterableLike.toIterable", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Card, B) â‡’ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Card, B) â‡’ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Card) â‡’ Boolean): Option[Card]", "member" : "scala.collection.IterableLike.find", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Card) â‡’ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Card) â‡’ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Card) â‡’ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (Card) â‡’ GenTraversableOnce[B]): Seq[Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (Card) â‡’ GenTraversableOnce[B]): Seq[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Card) â‡’ (A1, A2, A3)): (Seq[A1], Seq[A2], Seq[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Card) â‡’ (A1, A2)): (Seq[A1], Seq[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[Card, Seq[Card]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Card) â‡’ Boolean): FilterMonadic[Card, Seq[Card]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Card, Col[Card]]): Col[Card]", "member" : "scala.collection.TraversableLike.to", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Card]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Seq[Card]]", "member" : "scala.collection.TraversableLike.inits", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Seq[Card]]", "member" : "scala.collection.TraversableLike.tails", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Seq[Card], Seq[Card])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Card) â‡’ Boolean): (Seq[Card], Seq[Card])", "member" : "scala.collection.TraversableLike.span", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Seq[Card]", "member" : "scala.collection.TraversableLike.init", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[Card]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Card", "member" : "scala.collection.TraversableLike.last", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Seq[Card]", "member" : "scala.collection.TraversableLike.tail", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Card]", "member" : "scala.collection.TraversableLike.headOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Card, B) â‡’ B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Card) â‡’ B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) â‡’ B)(cbf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Card) â‡’ K): Map[K, Seq[Card]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Card) â‡’ Boolean): (Seq[Card], Seq[Card])", "member" : "scala.collection.TraversableLike.partition", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Card, B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.TraversableLike.filter", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Card) â‡’ GenTraversableOnce[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Card) â‡’ B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Seq[Card]", "member" : "scala.collection.TraversableLike.repr", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[Card]", "member" : "scala.collection.Parallelizable.par", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Card, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Card]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Card]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Card]", "member" : "scala.collection.TraversableOnce.toList", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Card) â‡’ B)(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.minBy", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Card) â‡’ B)(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.max", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.min", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: â‡’ B)(seqop: (B, Card) â‡’ B, combop: (B, B) â‡’ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) â‡’ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) â‡’ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) â‡’ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Card, B) â‡’ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Card) â‡’ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Card) â‡’ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Card) â‡’ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Card, B) â‡’ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Card) â‡’ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Card, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Card) â‡’ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Card]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/Graveyard.html", "kind" : "class"}, {"name" : "me.mysterymystery.duelingfactions.api.card.cardcollection.HiddenHand", "shortDescription" : "The opponents deck.", "members_class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.HiddenHand#<init>", "error" : "unsupported entity"}, {"label" : "linkedDeck", "tail" : ": Deck", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.HiddenHand.linkedDeck", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#linkedDeck:me.mysterymystery.duelingfactions.api.card.cardcollection.Deck", "kind" : "val"}, {"label" : "iterator", "tail" : "(): Iterator[Card]", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Hand.iterator", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#iterator:Iterator[me.mysterymystery.duelingfactions.api.card.Card]", "kind" : "def"}, {"label" : "apply", "tail" : "(idx: Int): Card", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Hand.apply", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#apply(idx:Int):me.mysterymystery.duelingfactions.api.card.Card", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Hand.length", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#length:Int", "kind" : "def"}, {"label" : "draw", "tail" : "(numberToDraw: Int): Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Hand.draw", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#draw(numberToDraw:Int):Unit", "kind" : "def"}, {"label" : "-=", "tail" : "(card: Card): Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Hand.-=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#-=(card:me.mysterymystery.duelingfactions.api.card.Card):Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(card: Card): Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Hand.+=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#+=(card:me.mysterymystery.duelingfactions.api.card.Card):Unit", "kind" : "def"}, {"label" : "elems", "tail" : ": ArrayBuffer[Card]", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Hand.elems", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#elems:scala.collection.mutable.ArrayBuffer[me.mysterymystery.duelingfactions.api.card.Card]", "kind" : "val"}, {"label" : "seq", "tail" : "(): Seq[Card]", "member" : "scala.collection.Seq.seq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#seq:Seq[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Seq]", "member" : "scala.collection.Seq.companion", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#companion:scala.collection.generic.GenericCompanion[Seq]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#toString():String", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[Card, Seq[Card]]", "member" : "scala.collection.SeqLike.view", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[Card, Seq[Card]]", "member" : "scala.collection.SeqLike.view", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Card]", "member" : "scala.collection.SeqLike.toSeq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): Seq[Card]", "member" : "scala.collection.SeqLike.sorted", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Card) â‡’ B)(ord: Ordering[B]): Seq[Card]", "member" : "scala.collection.SeqLike.sortBy", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Card, Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.SeqLike.sortWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (Card, B) â‡’ Boolean): Boolean", "member" : "scala.collection.SeqLike.corresponds", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.:+", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.+:", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.updated", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Seq[Card]", "member" : "scala.collection.SeqLike.distinct", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): Seq[Card]", "member" : "scala.collection.SeqLike.intersect", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): Seq[Card]", "member" : "scala.collection.SeqLike.diff", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqLike.contains", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.endsWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.SeqLike.startsWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[Card]", "member" : "scala.collection.SeqLike.reverseIterator", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Card) â‡’ B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Seq[Card]", "member" : "scala.collection.SeqLike.reverse", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#reverse:Repr", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[Seq[Card]]", "member" : "scala.collection.SeqLike.combinations", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[Seq[Card]]", "member" : "scala.collection.SeqLike.permutations", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Card) â‡’ Boolean, end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexWhere", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Card) â‡’ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.indexWhere", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Card) â‡’ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.segmentLength", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#size:Int", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqLike.isEmpty", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqLike.lengthCompare", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[Card, ParSeq[Card]]", "member" : "scala.collection.SeqLike.parCombiner", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParSeq[A]]", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Seq[Card]): Seq[Card]", "member" : "scala.collection.SeqLike.toCollection", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#toCollection(repr:Repr):Seq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Seq[Card]", "member" : "scala.collection.SeqLike.thisCollection", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#thisCollection:Seq[A]", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.GenSeqLike.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#hashCode():Int", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Card) â‡’ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Card) â‡’ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Card) â‡’ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.GenSeqLike.isDefinedAt", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Card) â‡’ U): (Int) â‡’ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) â‡’ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) â‡’ Option[Card]", "member" : "scala.PartialFunction.lift", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Card) â‡’ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) â‡’ Int): (A) â‡’ Card", "member" : "scala.Function1.compose", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Card]", "member" : "scala.collection.IterableLike.toStream", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Seq[Card], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Seq[Card], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Seq[Card], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Seq[Card]", "member" : "scala.collection.IterableLike.dropRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Seq[Card]", "member" : "scala.collection.IterableLike.takeRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Seq[Card]]", "member" : "scala.collection.IterableLike.sliding", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Seq[Card]]", "member" : "scala.collection.IterableLike.sliding", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Seq[Card]]", "member" : "scala.collection.IterableLike.grouped", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Seq[Card]", "member" : "scala.collection.IterableLike.drop", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Seq[Card]", "member" : "scala.collection.IterableLike.take", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Seq[Card]", "member" : "scala.collection.IterableLike.slice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): Card", "member" : "scala.collection.IterableLike.head", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Card]", "member" : "scala.collection.IterableLike.toIterator", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Card]", "member" : "scala.collection.IterableLike.toIterable", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Card, B) â‡’ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Card, B) â‡’ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Card) â‡’ Boolean): Option[Card]", "member" : "scala.collection.IterableLike.find", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Card) â‡’ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Card) â‡’ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Card) â‡’ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (Card) â‡’ GenTraversableOnce[B]): Seq[Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (Card) â‡’ GenTraversableOnce[B]): Seq[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Card) â‡’ (A1, A2, A3)): (Seq[A1], Seq[A2], Seq[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Card) â‡’ (A1, A2)): (Seq[A1], Seq[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[Card, Seq[Card]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Card) â‡’ Boolean): FilterMonadic[Card, Seq[Card]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Card, Col[Card]]): Col[Card]", "member" : "scala.collection.TraversableLike.to", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Card]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Seq[Card]]", "member" : "scala.collection.TraversableLike.inits", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Seq[Card]]", "member" : "scala.collection.TraversableLike.tails", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Seq[Card], Seq[Card])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Card) â‡’ Boolean): (Seq[Card], Seq[Card])", "member" : "scala.collection.TraversableLike.span", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Seq[Card]", "member" : "scala.collection.TraversableLike.init", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[Card]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Card", "member" : "scala.collection.TraversableLike.last", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Seq[Card]", "member" : "scala.collection.TraversableLike.tail", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Card]", "member" : "scala.collection.TraversableLike.headOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Card, B) â‡’ B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Card) â‡’ B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) â‡’ B)(cbf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Card) â‡’ K): Map[K, Seq[Card]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Card) â‡’ Boolean): (Seq[Card], Seq[Card])", "member" : "scala.collection.TraversableLike.partition", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Card, B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.TraversableLike.filter", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Card) â‡’ GenTraversableOnce[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Card) â‡’ B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Seq[Card]", "member" : "scala.collection.TraversableLike.repr", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[Card]", "member" : "scala.collection.Parallelizable.par", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Card, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Card]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Card]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Card]", "member" : "scala.collection.TraversableOnce.toList", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Card) â‡’ B)(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.minBy", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Card) â‡’ B)(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.max", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.min", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: â‡’ B)(seqop: (B, Card) â‡’ B, combop: (B, B) â‡’ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) â‡’ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) â‡’ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) â‡’ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Card, B) â‡’ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Card) â‡’ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Card) â‡’ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Card) â‡’ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Card, B) â‡’ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Card) â‡’ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Card, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Card) â‡’ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Card]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/HiddenHand.html", "kind" : "class"}, {"name" : "me.mysterymystery.duelingfactions.api.card.cardcollection.VisibleHand", "shortDescription" : "", "members_class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "FilterMagnet", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.FilterMagnet", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#FilterMagnet[J<:<?>,S<:<?>]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "HandlerMagnet", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.HandlerMagnet", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#HandlerMagnet[J<:<?>,S<:<?>]extendsAnyRef", "kind" : "sealed trait"}, {"member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.VisibleHand#<init>", "error" : "unsupported entity"}, {"label" : "linkedDeck", "tail" : ": Deck", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.VisibleHand.linkedDeck", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#linkedDeck:me.mysterymystery.duelingfactions.api.card.cardcollection.Deck", "kind" : "val"}, {"label" : "iterator", "tail" : "(): Iterator[Card]", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Hand.iterator", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#iterator:Iterator[me.mysterymystery.duelingfactions.api.card.Card]", "kind" : "def"}, {"label" : "apply", "tail" : "(idx: Int): Card", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Hand.apply", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#apply(idx:Int):me.mysterymystery.duelingfactions.api.card.Card", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Hand.length", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#length:Int", "kind" : "def"}, {"label" : "draw", "tail" : "(numberToDraw: Int): Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Hand.draw", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#draw(numberToDraw:Int):Unit", "kind" : "def"}, {"label" : "-=", "tail" : "(card: Card): Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Hand.-=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#-=(card:me.mysterymystery.duelingfactions.api.card.Card):Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(card: Card): Unit", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Hand.+=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#+=(card:me.mysterymystery.duelingfactions.api.card.Card):Unit", "kind" : "def"}, {"label" : "elems", "tail" : ": ArrayBuffer[Card]", "member" : "me.mysterymystery.duelingfactions.api.card.cardcollection.Hand.elems", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#elems:scala.collection.mutable.ArrayBuffer[me.mysterymystery.duelingfactions.api.card.Card]", "kind" : "val"}, {"label" : "seq", "tail" : "(): Seq[Card]", "member" : "scala.collection.Seq.seq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#seq:Seq[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Seq]", "member" : "scala.collection.Seq.companion", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#companion:scala.collection.generic.GenericCompanion[Seq]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#toString():String", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[Card, Seq[Card]]", "member" : "scala.collection.SeqLike.view", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[Card, Seq[Card]]", "member" : "scala.collection.SeqLike.view", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Card]", "member" : "scala.collection.SeqLike.toSeq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): Seq[Card]", "member" : "scala.collection.SeqLike.sorted", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Card) â‡’ B)(ord: Ordering[B]): Seq[Card]", "member" : "scala.collection.SeqLike.sortBy", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Card, Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.SeqLike.sortWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (Card, B) â‡’ Boolean): Boolean", "member" : "scala.collection.SeqLike.corresponds", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.:+", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.+:", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.updated", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Seq[Card]", "member" : "scala.collection.SeqLike.distinct", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): Seq[Card]", "member" : "scala.collection.SeqLike.intersect", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): Seq[Card]", "member" : "scala.collection.SeqLike.diff", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqLike.contains", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.endsWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.SeqLike.startsWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[Card]", "member" : "scala.collection.SeqLike.reverseIterator", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Card) â‡’ B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Seq[Card]", "member" : "scala.collection.SeqLike.reverse", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#reverse:Repr", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[Seq[Card]]", "member" : "scala.collection.SeqLike.combinations", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[Seq[Card]]", "member" : "scala.collection.SeqLike.permutations", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Card) â‡’ Boolean, end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexWhere", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Card) â‡’ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.indexWhere", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Card) â‡’ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.segmentLength", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#size:Int", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqLike.isEmpty", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqLike.lengthCompare", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[Card, ParSeq[Card]]", "member" : "scala.collection.SeqLike.parCombiner", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParSeq[A]]", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Seq[Card]): Seq[Card]", "member" : "scala.collection.SeqLike.toCollection", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#toCollection(repr:Repr):Seq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Seq[Card]", "member" : "scala.collection.SeqLike.thisCollection", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#thisCollection:Seq[A]", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.GenSeqLike.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#hashCode():Int", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Card) â‡’ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Card) â‡’ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Card) â‡’ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.GenSeqLike.isDefinedAt", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Card) â‡’ U): (Int) â‡’ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) â‡’ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) â‡’ Option[Card]", "member" : "scala.PartialFunction.lift", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Card) â‡’ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) â‡’ Int): (A) â‡’ Card", "member" : "scala.Function1.compose", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Card]", "member" : "scala.collection.IterableLike.toStream", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Seq[Card], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Seq[Card], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Seq[Card], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Seq[Card]", "member" : "scala.collection.IterableLike.dropRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Seq[Card]", "member" : "scala.collection.IterableLike.takeRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Seq[Card]]", "member" : "scala.collection.IterableLike.sliding", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Seq[Card]]", "member" : "scala.collection.IterableLike.sliding", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Seq[Card]]", "member" : "scala.collection.IterableLike.grouped", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Seq[Card]", "member" : "scala.collection.IterableLike.drop", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Seq[Card]", "member" : "scala.collection.IterableLike.take", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Seq[Card]", "member" : "scala.collection.IterableLike.slice", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): Card", "member" : "scala.collection.IterableLike.head", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Card]", "member" : "scala.collection.IterableLike.toIterator", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Card]", "member" : "scala.collection.IterableLike.toIterable", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Card, B) â‡’ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Card, B) â‡’ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Card) â‡’ Boolean): Option[Card]", "member" : "scala.collection.IterableLike.find", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Card) â‡’ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Card) â‡’ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Card) â‡’ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (Card) â‡’ GenTraversableOnce[B]): Seq[Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (Card) â‡’ GenTraversableOnce[B]): Seq[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Card) â‡’ (A1, A2, A3)): (Seq[A1], Seq[A2], Seq[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Card) â‡’ (A1, A2)): (Seq[A1], Seq[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[Card, Seq[Card]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Card) â‡’ Boolean): FilterMonadic[Card, Seq[Card]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Card, Col[Card]]): Col[Card]", "member" : "scala.collection.TraversableLike.to", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Card]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Seq[Card]]", "member" : "scala.collection.TraversableLike.inits", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Seq[Card]]", "member" : "scala.collection.TraversableLike.tails", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Seq[Card], Seq[Card])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Card) â‡’ Boolean): (Seq[Card], Seq[Card])", "member" : "scala.collection.TraversableLike.span", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Seq[Card]", "member" : "scala.collection.TraversableLike.init", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[Card]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Card", "member" : "scala.collection.TraversableLike.last", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Seq[Card]", "member" : "scala.collection.TraversableLike.tail", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Card]", "member" : "scala.collection.TraversableLike.headOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Card, B) â‡’ B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Card) â‡’ B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) â‡’ B)(cbf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Card) â‡’ K): Map[K, Seq[Card]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Card) â‡’ Boolean): (Seq[Card], Seq[Card])", "member" : "scala.collection.TraversableLike.partition", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Card, B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Card) â‡’ Boolean): Seq[Card]", "member" : "scala.collection.TraversableLike.filter", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Card) â‡’ GenTraversableOnce[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Card) â‡’ B)(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Seq[Card], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Seq[Card]", "member" : "scala.collection.TraversableLike.repr", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[Card]", "member" : "scala.collection.Parallelizable.par", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Card, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Card]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Card]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Card]", "member" : "scala.collection.TraversableOnce.toList", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Card) â‡’ B)(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.minBy", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Card) â‡’ B)(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.max", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.min", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: â‡’ B)(seqop: (B, Card) â‡’ B, combop: (B, B) â‡’ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) â‡’ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) â‡’ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) â‡’ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Card, B) â‡’ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Card) â‡’ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Card) â‡’ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Card) â‡’ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Card, B) â‡’ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Card) â‡’ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Card, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Card) â‡’ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Card]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "vgap_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.FlowPane.vgap_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#vgap_=(v:Double):Unit", "kind" : "def"}, {"label" : "vgap", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.FlowPane.vgap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#vgap:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "rowValignment_=", "tail" : "(v: VPos): Unit", "member" : "scalafx.scene.layout.FlowPane.rowValignment_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#rowValignment_=(v:scalafx.geometry.VPos):Unit", "kind" : "def"}, {"label" : "rowValignment", "tail" : "(): ObjectProperty[VPos]", "member" : "scalafx.scene.layout.FlowPane.rowValignment", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#rowValignment:scalafx.beans.property.ObjectProperty[javafx.geometry.VPos]", "kind" : "def"}, {"label" : "prefWrapLength_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.FlowPane.prefWrapLength_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#prefWrapLength_=(v:Double):Unit", "kind" : "def"}, {"label" : "prefWrapLength", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.FlowPane.prefWrapLength", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#prefWrapLength:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "orientation_=", "tail" : "(v: Orientation): Unit", "member" : "scalafx.scene.layout.FlowPane.orientation_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#orientation_=(v:scalafx.geometry.Orientation):Unit", "kind" : "def"}, {"label" : "orientation", "tail" : "(): ObjectProperty[Orientation]", "member" : "scalafx.scene.layout.FlowPane.orientation", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#orientation:scalafx.beans.property.ObjectProperty[javafx.geometry.Orientation]", "kind" : "def"}, {"label" : "hgap_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.FlowPane.hgap_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#hgap_=(v:Double):Unit", "kind" : "def"}, {"label" : "hgap", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.FlowPane.hgap", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#hgap:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "columnHalignment_=", "tail" : "(v: HPos): Unit", "member" : "scalafx.scene.layout.FlowPane.columnHalignment_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#columnHalignment_=(v:scalafx.geometry.HPos):Unit", "kind" : "def"}, {"label" : "columnHalignment", "tail" : "(): ObjectProperty[HPos]", "member" : "scalafx.scene.layout.FlowPane.columnHalignment", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#columnHalignment:scalafx.beans.property.ObjectProperty[javafx.geometry.HPos]", "kind" : "def"}, {"label" : "delegate", "tail" : ": FlowPane", "member" : "scalafx.scene.layout.FlowPane.delegate", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#delegate:javafx.scene.layout.FlowPane", "kind" : "val"}, {"label" : "alignment_=", "tail" : "(v: Pos): Unit", "member" : "scalafx.delegate.AlignmentDelegate.alignment_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#alignment_=(v:scalafx.geometry.Pos):Unit", "kind" : "def"}, {"label" : "alignment", "tail" : "(): ObjectProperty[Pos]", "member" : "scalafx.delegate.AlignmentDelegate.alignment", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#alignment:scalafx.beans.property.ObjectProperty[javafx.geometry.Pos]", "kind" : "def"}, {"label" : "children_=", "tail" : "(n: Node): Unit", "member" : "scalafx.scene.layout.Pane.children_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#children_=(n:scalafx.scene.Node):Unit", "kind" : "def"}, {"label" : "children_=", "tail" : "(c: Iterable[Node]): Unit", "member" : "scalafx.scene.layout.Pane.children_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#children_=(c:Iterable[scalafx.scene.Node]):Unit", "kind" : "def"}, {"label" : "children", "tail" : "(): ObservableList[Node]", "member" : "scalafx.scene.layout.Pane.children", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#children:javafx.collections.ObservableList[javafx.scene.Node]", "kind" : "def"}, {"label" : "insets", "tail" : "(): Insets", "member" : "scalafx.scene.layout.Region.insets", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#insets:javafx.geometry.Insets", "kind" : "def"}, {"label" : "scaleShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.scaleShape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#scaleShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "scaleShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.scaleShape", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#scaleShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "resize", "tail" : "(width: Double, height: Double): Unit", "member" : "scalafx.scene.layout.Region.resize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#resize(width:Double,height:Double):Unit", "kind" : "def"}, {"label" : "resize", "tail" : "(): Boolean", "member" : "scalafx.scene.layout.Region.resize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#resize:Boolean", "kind" : "def"}, {"label" : "snapToPixel_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.snapToPixel_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#snapToPixel_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "snapToPixel", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.snapToPixel", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#snapToPixel:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "shape_=", "tail" : "(v: Shape): Unit", "member" : "scalafx.scene.layout.Region.shape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#shape_=(v:scalafx.scene.shape.Shape):Unit", "kind" : "def"}, {"label" : "shape", "tail" : "(): ObjectProperty[Shape]", "member" : "scalafx.scene.layout.Region.shape", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#shape:scalafx.beans.property.ObjectProperty[javafx.scene.shape.Shape]", "kind" : "def"}, {"label" : "prefWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.prefWidth_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#prefWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "prefWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.prefWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#prefWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "prefHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.prefHeight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#prefHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "prefHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.prefHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#prefHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "padding_=", "tail" : "(v: Insets): Unit", "member" : "scalafx.scene.layout.Region.padding_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#padding_=(v:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "padding", "tail" : "(): ObjectProperty[Insets]", "member" : "scalafx.scene.layout.Region.padding", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#padding:scalafx.beans.property.ObjectProperty[javafx.geometry.Insets]", "kind" : "def"}, {"label" : "opaqueInsets_=", "tail" : "(v: Insets): Unit", "member" : "scalafx.scene.layout.Region.opaqueInsets_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#opaqueInsets_=(v:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "opaqueInsets", "tail" : "(): ObjectProperty[Insets]", "member" : "scalafx.scene.layout.Region.opaqueInsets", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#opaqueInsets:scalafx.beans.property.ObjectProperty[javafx.geometry.Insets]", "kind" : "def"}, {"label" : "minWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.minWidth_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#minWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "minWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.minWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#minWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "minHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.minHeight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#minHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "minHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.minHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#minHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "maxWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.maxWidth_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#maxWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "maxWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.maxWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#maxWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "maxHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.maxHeight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#maxHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "maxHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.maxHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#maxHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "width", "tail" : "(): ReadOnlyDoubleProperty", "member" : "scalafx.scene.layout.Region.width", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#width:scalafx.beans.property.ReadOnlyDoubleProperty", "kind" : "def"}, {"label" : "height", "tail" : "(): ReadOnlyDoubleProperty", "member" : "scalafx.scene.layout.Region.height", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#height:scalafx.beans.property.ReadOnlyDoubleProperty", "kind" : "def"}, {"label" : "centerShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.centerShape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#centerShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "centerShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.centerShape", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#centerShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "cacheShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.cacheShape_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#cacheShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "cacheShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.cacheShape", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#cacheShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "border_=", "tail" : "(v: Border): Unit", "member" : "scalafx.scene.layout.Region.border_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#border_=(v:scalafx.scene.layout.Border):Unit", "kind" : "def"}, {"label" : "border", "tail" : "(): ObjectProperty[Border]", "member" : "scalafx.scene.layout.Region.border", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#border:scalafx.beans.property.ObjectProperty[javafx.scene.layout.Border]", "kind" : "def"}, {"label" : "background_=", "tail" : "(v: Background): Unit", "member" : "scalafx.scene.layout.Region.background_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#background_=(v:scalafx.scene.layout.Background):Unit", "kind" : "def"}, {"label" : "background", "tail" : "(): ObjectProperty[Background]", "member" : "scalafx.scene.layout.Region.background", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#background:scalafx.beans.property.ObjectProperty[javafx.scene.layout.Background]", "kind" : "def"}, {"label" : "stylesheets_=", "tail" : "(c: Iterable[String]): Unit", "member" : "scalafx.scene.Parent.stylesheets_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#stylesheets_=(c:Iterable[String]):Unit", "kind" : "def"}, {"label" : "stylesheets", "tail" : "(): ObservableList[String]", "member" : "scalafx.scene.Parent.stylesheets", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#stylesheets:javafx.collections.ObservableList[String]", "kind" : "def"}, {"label" : "needsLayout", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Parent.needsLayout", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#needsLayout:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "eventHandlerDelegate", "tail" : "(): EventHandled", "member" : "scalafx.scene.Node.eventHandlerDelegate", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#eventHandlerDelegate:Node.this.EventHandled", "kind" : "def"}, {"label" : "onTouchStationary_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchStationary_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onTouchStationary_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchStationary", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchStationary", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onTouchStationary:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchReleased_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onTouchReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onTouchReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchPressed_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchPressed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onTouchPressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchPressed", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchPressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onTouchPressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchMoved_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchMoved_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onTouchMoved_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchMoved", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchMoved", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onTouchMoved:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onZoomStarted_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoomStarted_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onZoomStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoomStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoomStarted", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onZoomStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onZoomFinished_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoomFinished_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onZoomFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoomFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoomFinished", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onZoomFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onZoom_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoom_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onZoom_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoom", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoom", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onZoom:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onSwipeRight_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeRight_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onSwipeRight_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeRight", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeRight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onSwipeRight:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeUp_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeUp_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onSwipeUp_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeUp", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeUp", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onSwipeUp:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeLeft_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeLeft_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onSwipeLeft_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeLeft", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeLeft", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onSwipeLeft:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeDown_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeDown_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onSwipeDown_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeDown", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeDown", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onSwipeDown:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onScrollStarted_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScrollStarted_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onScrollStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScrollStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScrollStarted", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onScrollStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onScrollFinished_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScrollFinished_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onScrollFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScrollFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScrollFinished", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onScrollFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onRotationStarted_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotationStarted_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onRotationStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotationStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotationStarted", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onRotationStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "onRotationFinished_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotationFinished_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onRotationFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotationFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotationFinished", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onRotationFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "onRotate_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotate_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onRotate_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotate", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotate", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onRotate:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "localToSceneTransform", "tail" : "(): Transform", "member" : "scalafx.scene.Node.localToSceneTransform", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#localToSceneTransform:scalafx.scene.transform.Transform", "kind" : "def"}, {"label" : "localToParentTransform", "tail" : "(): Transform", "member" : "scalafx.scene.Node.localToParentTransform", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#localToParentTransform:scalafx.scene.transform.Transform", "kind" : "def"}, {"label" : "toFront", "tail" : "(): Unit", "member" : "scalafx.scene.Node.toFront", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#toFront():Unit", "kind" : "def"}, {"label" : "toBack", "tail" : "(): Unit", "member" : "scalafx.scene.Node.toBack", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#toBack():Unit", "kind" : "def"}, {"label" : "startFullDrag", "tail" : "(): Unit", "member" : "scalafx.scene.Node.startFullDrag", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#startFullDrag():Unit", "kind" : "def"}, {"label" : "startDragAndDrop", "tail" : "(transferModes: TransferMode*): Dragboard", "member" : "scalafx.scene.Node.startDragAndDrop", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#startDragAndDrop(transferModes:javafx.scene.input.TransferMode*):javafx.scene.input.Dragboard", "kind" : "def"}, {"label" : "snapshot", "tail" : "(callback: (SnapshotResult) â‡’ Unit, params: SnapshotParameters, image: WritableImage): Unit", "member" : "scalafx.scene.Node.snapshot", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#snapshot(callback:scalafx.scene.SnapshotResult=>Unit,params:scalafx.scene.SnapshotParameters,image:scalafx.scene.image.WritableImage):Unit", "kind" : "def"}, {"label" : "snapshot", "tail" : "(params: SnapshotParameters, image: WritableImage): WritableImage", "member" : "scalafx.scene.Node.snapshot", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#snapshot(params:scalafx.scene.SnapshotParameters,image:scalafx.scene.image.WritableImage):scalafx.scene.image.WritableImage", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(scenePoint: Point2D): Point2D", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#sceneToLocal(scenePoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(sceneX: Double, sceneY: Double): Point2D", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#sceneToLocal(sceneX:Double,sceneY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(sceneBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#sceneToLocal(sceneBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "resizeRelocate", "tail" : "(x: Double, y: Double, width: Double, height: Double): Unit", "member" : "scalafx.scene.Node.resizeRelocate", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#resizeRelocate(x:Double,y:Double,width:Double,height:Double):Unit", "kind" : "def"}, {"label" : "requestFocus", "tail" : "(): Unit", "member" : "scalafx.scene.Node.requestFocus", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#requestFocus():Unit", "kind" : "def"}, {"label" : "relocate", "tail" : "(x: Double, y: Double): Unit", "member" : "scalafx.scene.Node.relocate", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#relocate(x:Double,y:Double):Unit", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.parentToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#parentToLocal(parentPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentX: Double, parentY: Double): Point2D", "member" : "scalafx.scene.Node.parentToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#parentToLocal(parentX:Double,parentY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.parentToLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#parentToLocal(parentBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "minWidth", "tail" : "(height: Double): Double", "member" : "scalafx.scene.Node.minWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#minWidth(height:Double):Double", "kind" : "def"}, {"label" : "minHeight", "tail" : "(width: Double): Double", "member" : "scalafx.scene.Node.minHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#minHeight(width:Double):Double", "kind" : "def"}, {"label" : "maxWidth", "tail" : "(height: Double): Double", "member" : "scalafx.scene.Node.maxWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#maxWidth(height:Double):Double", "kind" : "def"}, {"label" : "maxHeight", "tail" : "(width: Double): Double", "member" : "scalafx.scene.Node.maxHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#maxHeight(width:Double):Double", "kind" : "def"}, {"label" : "lookupAll", "tail" : "(selector: String): Set[Node]", "member" : "scalafx.scene.Node.lookupAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#lookupAll(selector:String):java.util.Set[javafx.scene.Node]", "kind" : "def"}, {"label" : "lookup", "tail" : "(selector: String): Node", "member" : "scalafx.scene.Node.lookup", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#lookup(selector:String):scalafx.scene.Node", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.localToScene", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#localToScene(localPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localX: Double, localY: Double): Point2D", "member" : "scalafx.scene.Node.localToScene", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#localToScene(localX:Double,localY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.localToScene", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#localToScene(localBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.localToParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#localToParent(localPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localX: Double, localY: Double): Point2D", "member" : "scalafx.scene.Node.localToParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#localToParent(localX:Double,localY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.localToParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#localToParent(localBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "intersects", "tail" : "(localX: Double, localY: Double, localWidth: Double, localHeight: Double): Boolean", "member" : "scalafx.scene.Node.intersects", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#intersects(localX:Double,localY:Double,localWidth:Double,localHeight:Double):Boolean", "kind" : "def"}, {"label" : "intersects", "tail" : "(localBounds: Bounds): Boolean", "member" : "scalafx.scene.Node.intersects", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#intersects(localBounds:scalafx.geometry.Bounds):Boolean", "kind" : "def"}, {"label" : "baselineOffset", "tail" : "(): Double", "member" : "scalafx.scene.Node.baselineOffset", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#baselineOffset:Double", "kind" : "def"}, {"label" : "fireEvent", "tail" : "(event: Event): Unit", "member" : "scalafx.scene.Node.fireEvent", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#fireEvent(event:scalafx.event.Event):Unit", "kind" : "def"}, {"label" : "contains", "tail" : "(localPoint: Point2D): Boolean", "member" : "scalafx.scene.Node.contains", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#contains(localPoint:scalafx.geometry.Point2D):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(localX: Double, localY: Double): Boolean", "member" : "scalafx.scene.Node.contains", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#contains(localX:Double,localY:Double):Boolean", "kind" : "def"}, {"label" : "autosize", "tail" : "(): Unit", "member" : "scalafx.scene.Node.autosize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#autosize():Unit", "kind" : "def"}, {"label" : "vgrow_=", "tail" : "(p: Priority): Unit", "member" : "scalafx.scene.Node.vgrow_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#vgrow_=(p:scalafx.scene.layout.Priority):Unit", "kind" : "def"}, {"label" : "vgrow", "tail" : "(): Priority", "member" : "scalafx.scene.Node.vgrow", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#vgrow:scalafx.scene.layout.Priority", "kind" : "def"}, {"label" : "hgrow_=", "tail" : "(p: Priority): Unit", "member" : "scalafx.scene.Node.hgrow_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#hgrow_=(p:scalafx.scene.layout.Priority):Unit", "kind" : "def"}, {"label" : "hgrow", "tail" : "(): Priority", "member" : "scalafx.scene.Node.hgrow", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#hgrow:scalafx.scene.layout.Priority", "kind" : "def"}, {"label" : "margin_=", "tail" : "(i: Insets): Unit", "member" : "scalafx.scene.Node.margin_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#margin_=(i:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "margin", "tail" : "(): Insets", "member" : "scalafx.scene.Node.margin", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#margin:scalafx.geometry.Insets", "kind" : "def"}, {"label" : "alignmentInParent_=", "tail" : "(p: Pos): Unit", "member" : "scalafx.scene.Node.alignmentInParent_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#alignmentInParent_=(p:scalafx.geometry.Pos):Unit", "kind" : "def"}, {"label" : "alignmentInParent", "tail" : "(): Pos", "member" : "scalafx.scene.Node.alignmentInParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#alignmentInParent:scalafx.geometry.Pos", "kind" : "def"}, {"label" : "visible_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.visible_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#visible_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "visible", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.visible", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#visible:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "userData_=", "tail" : "(v: AnyRef): Unit", "member" : "scalafx.scene.Node.userData_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#userData_=(v:AnyRef):Unit", "kind" : "def"}, {"label" : "userData", "tail" : "(): AnyRef", "member" : "scalafx.scene.Node.userData", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#userData:Object", "kind" : "def"}, {"label" : "translateZ_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateZ_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#translateZ_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateZ", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateZ", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#translateZ:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "translateY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateY_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#translateY_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateY", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#translateY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "translateX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateX_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#translateX_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateX", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#translateX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "transforms_=", "tail" : "(c: Iterable[Transform]): Unit", "member" : "scalafx.scene.Node.transforms_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#transforms_=(c:Iterable[scalafx.scene.transform.Transform]):Unit", "kind" : "def"}, {"label" : "transforms", "tail" : "(): ObservableList[Transform]", "member" : "scalafx.scene.Node.transforms", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#transforms:javafx.collections.ObservableList[javafx.scene.transform.Transform]", "kind" : "def"}, {"label" : "styleClass_=", "tail" : "(c: Iterable[String]): Unit", "member" : "scalafx.scene.Node.styleClass_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#styleClass_=(c:Iterable[String]):Unit", "kind" : "def"}, {"label" : "style_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.style_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#style_=(v:String):Unit", "kind" : "def"}, {"label" : "style", "tail" : "(): StringProperty", "member" : "scalafx.scene.Node.style", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#style:scalafx.beans.property.StringProperty", "kind" : "def"}, {"label" : "scene", "tail" : "(): ReadOnlyObjectProperty[Scene]", "member" : "scalafx.scene.Node.scene", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#scene:scalafx.beans.property.ReadOnlyObjectProperty[javafx.scene.Scene]", "kind" : "def"}, {"label" : "scaleZ_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleZ_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#scaleZ_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleZ", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleZ", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#scaleZ:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "scaleY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleY_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#scaleY_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleY", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#scaleY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "scaleX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleX_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#scaleX_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleX", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#scaleX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "rotationAxis_=", "tail" : "(v: Point3D): Unit", "member" : "scalafx.scene.Node.rotationAxis_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#rotationAxis_=(v:scalafx.geometry.Point3D):Unit", "kind" : "def"}, {"label" : "rotationAxis", "tail" : "(): ObjectProperty[Point3D]", "member" : "scalafx.scene.Node.rotationAxis", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#rotationAxis:scalafx.beans.property.ObjectProperty[javafx.geometry.Point3D]", "kind" : "def"}, {"label" : "rotate_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.rotate_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#rotate_=(v:Double):Unit", "kind" : "def"}, {"label" : "rotate", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.rotate", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#rotate:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "pressed", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.pressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#pressed:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "pickOnBounds_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.pickOnBounds_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#pickOnBounds_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "pickOnBounds", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.pickOnBounds", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#pickOnBounds:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "parent", "tail" : "(): ReadOnlyObjectProperty[Parent]", "member" : "scalafx.scene.Node.parent", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#parent:scalafx.beans.property.ReadOnlyObjectProperty[javafx.scene.Parent]", "kind" : "def"}, {"label" : "opacity_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.opacity_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#opacity_=(v:Double):Unit", "kind" : "def"}, {"label" : "opacity", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.opacity", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#opacity:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "onScroll_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScroll_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onScroll_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScroll", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScroll", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onScroll:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onMouseReleased_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMouseReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMouseReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMousePressed_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMousePressed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMousePressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMousePressed", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMousePressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMousePressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseMoved_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseMoved_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMouseMoved_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseMoved", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseMoved", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMouseMoved:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseExited_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseExited_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMouseExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseExited", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseExited", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMouseExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseEntered_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseEntered_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMouseEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseEntered", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMouseEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseDragReleased_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMouseDragReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMouseDragReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragOver_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragOver_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMouseDragOver_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragOver", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragOver", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMouseDragOver:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragExited_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragExited_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMouseDragExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragExited", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragExited", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMouseDragExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragEntered_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragEntered_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMouseDragEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragEntered", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMouseDragEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragged_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragged_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMouseDragged_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragged", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseDragged", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMouseDragged:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseClicked_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseClicked_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMouseClicked_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseClicked", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseClicked", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onMouseClicked:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onKeyTyped_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyTyped_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onKeyTyped_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyTyped", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyTyped", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onKeyTyped:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onKeyReleased_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyReleased_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onKeyReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyReleased", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onKeyReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onKeyPressed_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyPressed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onKeyPressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyPressed", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyPressed", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onKeyPressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onInputMethodTextChanged_=", "tail" : "(v: EventHandler[_ >: InputMethodEvent]): Unit", "member" : "scalafx.scene.Node.onInputMethodTextChanged_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onInputMethodTextChanged_=(v:javafx.event.EventHandler[_>:javafx.scene.input.InputMethodEvent]):Unit", "kind" : "def"}, {"label" : "onInputMethodTextChanged", "tail" : "(): ObjectProperty[EventHandler[_ >: InputMethodEvent]]", "member" : "scalafx.scene.Node.onInputMethodTextChanged", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onInputMethodTextChanged:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.InputMethodEvent]]", "kind" : "def"}, {"label" : "onDragOver_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragOver_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onDragOver_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragOver", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragOver", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onDragOver:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragExited_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragExited_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onDragExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragExited", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragExited", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onDragExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragEntered_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragEntered_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onDragEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragEntered", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onDragEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDropped_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragDropped_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onDragDropped_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragDropped", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragDropped", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onDragDropped:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDone_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragDone_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onDragDone_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragDone", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragDone", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onDragDone:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDetected_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onDragDetected_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onDragDetected_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onDragDetected", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onDragDetected", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onDragDetected:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onContextMenuRequested_=", "tail" : "(v: EventHandler[_ >: ContextMenuEvent]): Unit", "member" : "scalafx.scene.Node.onContextMenuRequested_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onContextMenuRequested_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ContextMenuEvent]):Unit", "kind" : "def"}, {"label" : "onContextMenuRequested", "tail" : "(): ObjectProperty[EventHandler[_ >: ContextMenuEvent]]", "member" : "scalafx.scene.Node.onContextMenuRequested", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#onContextMenuRequested:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ContextMenuEvent]]", "kind" : "def"}, {"label" : "effectiveNodeOrientation", "tail" : "(): ReadOnlyObjectProperty[NodeOrientation]", "member" : "scalafx.scene.Node.effectiveNodeOrientation", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#effectiveNodeOrientation:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.NodeOrientation]", "kind" : "def"}, {"label" : "nodeOrientation_=", "tail" : "(v: NodeOrientation): Unit", "member" : "scalafx.scene.Node.nodeOrientation_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#nodeOrientation_=(v:scalafx.geometry.NodeOrientation):Unit", "kind" : "def"}, {"label" : "nodeOrientation", "tail" : "(): ObjectProperty[NodeOrientation]", "member" : "scalafx.scene.Node.nodeOrientation", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#nodeOrientation:scalafx.beans.property.ObjectProperty[javafx.geometry.NodeOrientation]", "kind" : "def"}, {"label" : "mouseTransparent_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.mouseTransparent_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#mouseTransparent_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "mouseTransparent", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.mouseTransparent", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#mouseTransparent:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "managed_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.managed_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#managed_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "managed", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.managed", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#managed:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "layoutY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.layoutY_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#layoutY_=(v:Double):Unit", "kind" : "def"}, {"label" : "layoutY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.layoutY", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#layoutY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "layoutX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.layoutX_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#layoutX_=(v:Double):Unit", "kind" : "def"}, {"label" : "layoutX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.layoutX", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#layoutX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "layoutBounds", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.layoutBounds", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#layoutBounds:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "inputMethodRequests_=", "tail" : "(v: InputMethodRequests): Unit", "member" : "scalafx.scene.Node.inputMethodRequests_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#inputMethodRequests_=(v:javafx.scene.input.InputMethodRequests):Unit", "kind" : "def"}, {"label" : "inputMethodRequests", "tail" : "(): ObjectProperty[InputMethodRequests]", "member" : "scalafx.scene.Node.inputMethodRequests", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#inputMethodRequests:scalafx.beans.property.ObjectProperty[javafx.scene.input.InputMethodRequests]", "kind" : "def"}, {"label" : "id_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.id_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#id_=(v:String):Unit", "kind" : "def"}, {"label" : "id", "tail" : "(): StringProperty", "member" : "scalafx.scene.Node.id", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#id:scalafx.beans.property.StringProperty", "kind" : "def"}, {"label" : "hover", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.hover", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#hover:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "focusTraversable_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.focusTraversable_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#focusTraversable_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "focusTraversable", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.focusTraversable", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#focusTraversable:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "focused", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.focused", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#focused:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "eventDispatcher_=", "tail" : "(v: EventDispatcher): Unit", "member" : "scalafx.scene.Node.eventDispatcher_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#eventDispatcher_=(v:javafx.event.EventDispatcher):Unit", "kind" : "def"}, {"label" : "eventDispatcher", "tail" : "(): ObjectProperty[EventDispatcher]", "member" : "scalafx.scene.Node.eventDispatcher", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#eventDispatcher:scalafx.beans.property.ObjectProperty[javafx.event.EventDispatcher]", "kind" : "def"}, {"label" : "effect_=", "tail" : "(v: Effect): Unit", "member" : "scalafx.scene.Node.effect_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#effect_=(v:scalafx.scene.effect.Effect):Unit", "kind" : "def"}, {"label" : "effect", "tail" : "(): ObjectProperty[Effect]", "member" : "scalafx.scene.Node.effect", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#effect:scalafx.beans.property.ObjectProperty[javafx.scene.effect.Effect]", "kind" : "def"}, {"label" : "disable_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.disable_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#disable_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "disable", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.disable", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#disable:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "disabled", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.disabled", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#disabled:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "depthTest_=", "tail" : "(v: DepthTest): Unit", "member" : "scalafx.scene.Node.depthTest_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#depthTest_=(v:scalafx.scene.DepthTest):Unit", "kind" : "def"}, {"label" : "depthTest", "tail" : "(): ObjectProperty[DepthTest]", "member" : "scalafx.scene.Node.depthTest", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#depthTest:scalafx.beans.property.ObjectProperty[javafx.scene.DepthTest]", "kind" : "def"}, {"label" : "cursor_=", "tail" : "(v: Cursor): Unit", "member" : "scalafx.scene.Node.cursor_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#cursor_=(v:scalafx.scene.Cursor):Unit", "kind" : "def"}, {"label" : "cursor", "tail" : "(): ObjectProperty[Cursor]", "member" : "scalafx.scene.Node.cursor", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#cursor:scalafx.beans.property.ObjectProperty[javafx.scene.Cursor]", "kind" : "def"}, {"label" : "contentBias", "tail" : "(): Orientation", "member" : "scalafx.scene.Node.contentBias", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#contentBias:scalafx.geometry.Orientation", "kind" : "def"}, {"label" : "clip_=", "tail" : "(v: Node): Unit", "member" : "scalafx.scene.Node.clip_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#clip_=(v:scalafx.scene.Node):Unit", "kind" : "def"}, {"label" : "clip", "tail" : "(): ObjectProperty[Node]", "member" : "scalafx.scene.Node.clip", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#clip:scalafx.beans.property.ObjectProperty[javafx.scene.Node]", "kind" : "def"}, {"label" : "cache_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.cache_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#cache_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "cache", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.cache", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#cache:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "cacheHint_=", "tail" : "(v: CacheHint): Unit", "member" : "scalafx.scene.Node.cacheHint_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#cacheHint_=(v:scalafx.scene.CacheHint):Unit", "kind" : "def"}, {"label" : "cacheHint", "tail" : "(): ObjectProperty[CacheHint]", "member" : "scalafx.scene.Node.cacheHint", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#cacheHint:scalafx.beans.property.ObjectProperty[javafx.scene.CacheHint]", "kind" : "def"}, {"label" : "boundsInParent", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.boundsInParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#boundsInParent:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "boundsInLocal", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.boundsInLocal", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#boundsInLocal:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "blendMode_=", "tail" : "(v: BlendMode): Unit", "member" : "scalafx.scene.Node.blendMode_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#blendMode_=(v:scalafx.scene.effect.BlendMode):Unit", "kind" : "def"}, {"label" : "blendMode", "tail" : "(): ObjectProperty[BlendMode]", "member" : "scalafx.scene.Node.blendMode", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#blendMode:scalafx.beans.property.ObjectProperty[javafx.scene.effect.BlendMode]", "kind" : "def"}, {"label" : "accessibleRoleDescription_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleRoleDescription_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#accessibleRoleDescription_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleRoleDescription", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleRoleDescription", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#accessibleRoleDescription:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "accessibleRole_=", "tail" : "(v: AccessibleRole): Unit", "member" : "scalafx.scene.Node.accessibleRole_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#accessibleRole_=(v:scalafx.scene.AccessibleRole):Unit", "kind" : "def"}, {"label" : "accessibleRole", "tail" : "(): ObjectProperty[AccessibleRole]", "member" : "scalafx.scene.Node.accessibleRole", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#accessibleRole:scalafx.beans.property.ObjectProperty[javafx.scene.AccessibleRole]", "kind" : "def"}, {"label" : "accessibleHelp_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleHelp_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#accessibleHelp_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleHelp", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleHelp", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#accessibleHelp:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "accessibleText_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleText_=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#accessibleText_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleText", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleText", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#accessibleText:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "typeSelector", "tail" : "(): String", "member" : "scalafx.css.Styleable.typeSelector", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#typeSelector:String", "kind" : "def"}, {"label" : "styleClass", "tail" : "(): ObservableBuffer[String]", "member" : "scalafx.css.Styleable.styleClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#styleClass:scalafx.collections.ObservableBuffer[String]", "kind" : "def"}, {"label" : "styleableParent", "tail" : "(): Styleable", "member" : "scalafx.css.Styleable.styleableParent", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#styleableParent:scalafx.css.Styleable", "kind" : "def"}, {"label" : "getStyle", "tail" : "(): String", "member" : "scalafx.css.Styleable.getStyle", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#getStyle:String", "kind" : "def"}, {"label" : "pseudoClassStates", "tail" : "(): ObservableSet[PseudoClass]", "member" : "scalafx.css.Styleable.pseudoClassStates", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#pseudoClassStates:scalafx.collections.ObservableSet[javafx.css.PseudoClass]", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "scalafx.css.Styleable.getId", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#getId:String", "kind" : "def"}, {"label" : "cssMetaData", "tail" : "(): Seq[CssMetaData[_ <: Styleable, _]]", "member" : "scalafx.css.Styleable.cssMetaData", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#cssMetaData:Seq[javafx.css.CssMetaData[_<:javafx.css.Styleable,_]]", "kind" : "def"}, {"label" : "buildEventDispatchChain", "tail" : "(chain: EventDispatchChain): EventDispatchChain", "member" : "scalafx.event.EventHandlerDelegate.buildEventDispatchChain", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#buildEventDispatchChain(chain:javafx.event.EventDispatchChain):javafx.event.EventDispatchChain", "kind" : "def"}, {"label" : "removeEventFilter", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.removeEventFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#removeEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "filterEvent", "tail" : "(eventType: EventType[J])(filter: FilterMagnet[J, S]): Subscription", "member" : "scalafx.event.EventHandlerDelegate.filterEvent", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#filterEvent[J<:javafx.event.Event,S<:scalafx.event.Eventwithscalafx.delegate.SFXDelegate[J]](eventType:scalafx.event.EventType[J])(filter:EventHandlerDelegate.this.FilterMagnet[J,S]):scalafx.event.subscriptions.Subscription", "kind" : "def"}, {"label" : "addEventFilter", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.addEventFilter", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#addEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "removeEventHandler", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.removeEventHandler", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#removeEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "handleEvent", "tail" : "(eventType: EventType[J])(handler: HandlerMagnet[J, S]): Subscription", "member" : "scalafx.event.EventHandlerDelegate.handleEvent", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#handleEvent[J<:javafx.event.Event,S<:scalafx.event.Eventwithscalafx.delegate.SFXDelegate[J]](eventType:scalafx.event.EventType[J])(handler:EventHandlerDelegate.this.HandlerMagnet[J,S]):scalafx.event.subscriptions.Subscription", "kind" : "def"}, {"label" : "addEventHandler", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.addEventHandler", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#addEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "EventHandled", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.EventHandled", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#EventHandled=AnyRef{defaddEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defremoveEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defaddEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defremoveEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defbuildEventDispatchChain(chain:javafx.event.EventDispatchChain):javafx.event.EventDispatchChain}", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "me\/mysterymystery\/duelingfactions\/api\/card\/cardcollection\/VisibleHand.html", "kind" : "class"}], "me.mysterymystery" : [], "me.mysterymystery.duelingfactions.api.config" : [{"name" : "me.mysterymystery.duelingfactions.api.config.Config", "shortDescription" : "", "object" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html", "members_object" : [{"label" : "cardWidth", "tail" : "(): Int", "member" : "me.mysterymystery.duelingfactions.api.config.Config.cardWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html#cardWidth:Int", "kind" : "def"}, {"label" : "cardHeight", "tail" : "(): Int", "member" : "me.mysterymystery.duelingfactions.api.config.Config.cardHeight", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html#cardHeight:Int", "kind" : "def"}, {"label" : "fieldZoneHeightWidth", "tail" : "(): Int", "member" : "me.mysterymystery.duelingfactions.api.config.Config.fieldZoneHeightWidth", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html#fieldZoneHeightWidth:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/mysterymystery\/duelingfactions\/api\/config\/Config$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};